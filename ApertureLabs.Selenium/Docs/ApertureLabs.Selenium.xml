<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApertureLabs.Selenium</name>
    </assembly>
    <members>
        <member name="T:ApertureLabs.Selenium.Attributes.AvoidUsingAttribute">
            <summary>
            Avoid using any classes/methods/fields marked with this attribute in
            your code.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:ApertureLabs.Selenium.Attributes.AvoidUsingAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Attributes.AvoidUsingAttribute"/> class.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Attributes.AvoidUsingAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Attributes.AvoidUsingAttribute"/> class.
            </summary>
            <param name="reason">The reason.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.ByAll">
            <summary>
            A version of by that selects element(s) that match all of the
            selectors.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.ByAll.#ctor(OpenQA.Selenium.By[])">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.ByAll"/> class.
            </summary>
            <param name="selectors">The selectors.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if selectors is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if selectors is empty.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.ByAll.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds the first element matching the criteria.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext" /> object to use to search for the elements.</param>
            <returns>
            The first matching <see cref="T:OpenQA.Selenium.IWebElement" /> on the current context.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByAll.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByAll.FindByAll(OpenQA.Selenium.By[])">
            <summary>
            Static ctor.
            </summary>
            <param name="selectors">The selectors.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.ByElement">
            <summary>
            Will always ONLY return the stored element.
            </summary>
            <seealso cref="T:OpenQA.Selenium.By" />
        </member>
        <member name="M:ApertureLabs.Selenium.ByElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.ByElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.ByElement.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            Returns the stored element.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext" /> object to use to search for the elements.</param>
            <returns>
            The first matching <see cref="T:OpenQA.Selenium.IWebElement" /> on the current context.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByElement.FindElements(OpenQA.Selenium.ISearchContext)">
            <summary>
            Returns the stored element.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext" /> object to use to search for the elements.</param>
            <returns>
            A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByElement.FromElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Static ctor.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1">
            <summary>
            Represents a bootstrap collapsable.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1" />
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.EventShowCollapse">
            <summary>
            This event fires immediately when the show instance method is
            called.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.EventHiddenCollapse">
            <summary>
            This event is fired when a collapse element has been hidden from
            the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.#ctor(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Ctor.
            </summary>
            <param name="animationData"></param>
            <param name="driver"></param>
            <param name="parent"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.GetAllOpenElements(System.Boolean)">
            <summary>
            Retrieves all elements capable of opening the collapsable.
            </summary>
            <param name="excludeToggleElements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.GetAllCloseElements(System.Boolean)">
            <summary>
            Retrieves all elements capable of closing the collapsable.
            </summary>
            <param name="excludeToggleElements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.Open(OpenQA.Selenium.IWebElement)">
            <summary>
            Will click an element that will open the collapsable if not
            already open and wait for the animation to finish.
            </summary>
            <param name="element">
            Optional. If null will use the first element identified by
            Options.OpenSelector or if none the first element identified by the
            Options.ToggleSelector.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.Close(OpenQA.Selenium.IWebElement)">
            <summary>
            Will click an element that will close the collapsable if not
            already closed and wait for the animation to finish.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.IsExpanded">
            <summary>
            Checks if the element is open.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.IsCollapsed">
            <summary>
            Checks if the element is closed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.WaitForAnimationStart(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <summary>
            Waits for animation start.
            </summary>
            <param name="animationData">The animation data.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <summary>
            Waits for animation end.
            </summary>
            <param name="animationData">The animation data.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent`1.IsCurrentlyAnimating(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <summary>
            Determines whether the <c>WrappedElement</c> is animating.
            </summary>
            <param name="animationData">The animation data.</param>
            <returns>
              <c>true</c> if [is currently animating] [the specified animation data]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions">
            <summary>
            Contains classes and selectors for the Bootstrap CollapsableComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.#ctor(OpenQA.Selenium.By,System.Collections.Generic.IEnumerable{OpenQA.Selenium.By})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions"/> class.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.#ctor(OpenQA.Selenium.By,System.Collections.Generic.IEnumerable{OpenQA.Selenium.By},System.Collections.Generic.IEnumerable{OpenQA.Selenium.By})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions"/> class.
            </summary>
            <param name="collapsableContainerSelector">The collapsable container selector.</param>
            <param name="openSelectors">The open selectors.</param>
            <param name="closeSelectors">The close selectors.</param>
            <exception cref="T:System.ArgumentNullException">
            collapsableContainerSelector
            or
            openSelectors
            or
            closeSelectors
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.OpenSelectors">
            <summary>
            Selectors for elements that ONLY expand the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.CloseSelectors">
            <summary>
            Selectors for elements that ONLY collapse the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.ToggleSelectors">
            <summary>
            Selectors for elements that both expand and collapse the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.CollapsableContainerSelector">
            <summary>
            The selector for the element being expanded/collapsed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.IsOpenSelector">
            <summary>
            The selector used when the CollapsableContainer is open.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationDuration">
            <summary>
            The expected duration of the animation (Usually five seconds is
            added onto this time for wait conditions).
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationSelectors">
            <summary>
            Classes used to represent when the component is being animated.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationsEnabled">
            <summary>
            Gets or sets a value indicating whether [animations enabled].
            </summary>
            <value>
              <c>true</c> if [animations enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent">
            <summary>
            The bootstrap dropdown component.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent"/> class.
            </summary>
            <param name="selector">
            The selector. Should point to an element that has the btn-group
            class applied to it.
            </param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">Expected the class " +
                                "'btn-group' to be present on the WrappedElement.</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent.Expand">
            <summary>
            Expands the dropdown if not already expanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent.Collapse">
            <summary>
            Collapses the dropdown if not already collapsed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent.GetName">
            <summary>
            Gets trimmed inner text of the main button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent.GetEnabledItems">
            <summary>
            Returns the enabled drop down elements (doesn't include dividers).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.DropDown.DropDownComponent.GetAllItems">
            <summary>
            Returns all item elements (doesn't include dividers).
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1">
            <summary>
            Used for working with Bootstrap navs.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="driver">The driver.</param>
            <param name="configuration"></param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.GetTabNames">
            <summary>
            Gets the tab names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.GetTabHeaderElements">
            <summary>
            Gets the tab header elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.GetActiveTabBody">
            <summary>
            Gets the active tab body.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.GetActiveTabName">
            <summary>
            Gets the name of the active tab.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.HasTab(System.String,System.StringComparison)">
            <summary>
            Determines whether the specified tab exists.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.GetTabBody(System.String,System.StringComparison)">
            <summary>
            Gets the tab body of a tab.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent`1.SelectTab(System.String,System.StringComparison)">
            <summary>
            Selects the tab.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
            <exception cref="T:System.ArgumentNullException">tabName</exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration">
            <summary>
            Options for configuring the NavsComponent. All selectors are relative
            to WrappedElement of the NavComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.TabHeaderElementsSelector">
            <summary>
            Gets or sets the tab header elements selector.
            </summary>
            <value>
            The tab header elements selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.TabHeaderNamesSelector">
            <summary>
            Gets or sets the tab header names selector.
            </summary>
            <value>
            The tab header names selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.TabContentElementsSelector">
            <summary>
            Gets or sets the tab content elements selector.
            </summary>
            <value>
            The tab content elements selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.ActiveTabHeaderElementSelector">
            <summary>
            Gets or sets the active tab header element selector.
            </summary>
            <value>
            The active tab header element selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.ActiveTabHeaderNameSelector">
            <summary>
            Gets or sets the active tab header name selector.
            </summary>
            <value>
            The active tab header name selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.ActiveTabContentElementSelector">
            <summary>
            Gets or sets the active tab content element selector.
            </summary>
            <value>
            The active tab content element selector.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.ICollapsable">
            <summary>
            Provides methods to collapse a component. Meant to be used on a
            <see cref="T:ApertureLabs.Selenium.PageObjects.PageComponent"/>.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.ICollapsable.Collapse">
            <summary>
            Collapses the component. Does nothing if already collapsed.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.IExpandable">
            <summary>
            Used on <see cref="T:ApertureLabs.Selenium.PageObjects.PageComponent"/> that can be expanded.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.IExpandable.Expand">
            <summary>
            Expands the component if not already expanded.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.IHasModal`1">
            <summary>
            Used to declare a modal component is present. Because of how many
            conditions
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.IHasModal`1.IsModalOpen">
            <summary>
            Determines whether the modal is open.
            </summary>
            <returns>
              <c>true</c> if the modal is open; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.IHasModal`1.GetModal">
            <summary>
            Gets the modal.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.IModalWindow">
            <summary>
            Represents a closable modal.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.ITabbable">
            <summary>
            Represents a 'tabbable' component. To be used with
            <see cref="T:OpenQA.Selenium.Support.UI.ILoadableComponent"/>
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.ITabbable.GetActiveTabName">
            <summary>
            Gets the name of the active tab.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.ITabbable.GetTabNames">
            <summary>
            Gets the tab names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.ITabbable.GetActiveTabBody">
            <summary>
            Gets the active tab body. Null if no tabs are active.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.ITabbable.GetTabBody(System.String,System.StringComparison)">
            <summary>
            Gets the tab body of a tab.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">
            Thrown if no tab body exists.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.ITabbable.SelectTab(System.String,System.StringComparison)">
            <summary>
            Selects the tab.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.ITabbable.HasTab(System.String,System.StringComparison)">
            <summary>
            Determines whether the specified tab name exists.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
              <c>true</c> if the specified tab name exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1">
            <summary>
            AccordionComponent.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase`1" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.#ctor(ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions,OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1"/> class.
            </summary>
            <param name="accordianComponentOptions">The options.</param>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.GetPanelNames">
            <summary>
            Gets all of the panel names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.SelectPanel(System.String,System.StringComparison)">
            <summary>
            Sets the panel to open and returns the panel content element.
            </summary>
            <param name="panelName">Name of the panel.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.ClosePanel">
            <summary>
            Closes the active panel.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.HasOpenPanel">
            <summary>
            Determines whether their is an open panel.
            </summary>
            <returns>
              <c>true</c> if [has open panel]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.GetActivePanelName">
            <summary>
            Gets the name of the active panel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent`1.GetActivePanelContentElement">
            <summary>
            Gets the active panels content element.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions">
            <summary>
            Options for configuring the AccordianComponent and how Selenium
            interacts with it.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AccordianHeaderClass">
            <summary>
            Gets or sets the accordian header class.
            </summary>
            <value>
            The accordian header class.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AccordianHeaderCollapsedClass">
            <summary>
            Gets or sets the accordian header collapsed class.
            </summary>
            <value>
            The accordian header collapsed class.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AccordianContentClass">
            <summary>
            Gets or sets the accordian content class.
            </summary>
            <value>
            The accordian content class.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>
            The duration of the animation.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.Collaspable">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions"/> can have all panels
            collapsed.
            </summary>
            <value>
              <c>true</c> if collaspable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.Event">
            <summary>
            Gets or sets the event that triggers the panel. Default is 'click'.
            </summary>
            <value>
            The event.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1">
            <summary>
            DatePickerComponent.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase`1" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1"/> class.
            </summary>
            <param name="selector">
            The input element linked to the calendar.
            </param>
            <param name="datePickerComponentOptions">
            The datepciker component options.
            </param>
            <param name="driver">The driver.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.IsPopup">
            <summary>
            Gets or sets a value indicating whether this instance is popup.
            </summary>
            <value>
              <c>true</c> if this instance is popup; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.GetDate">
            <summary>
            Gets the date.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.SetDate(System.DateTime)">
            <summary>
            Sets the date.
            </summary>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.IsDisabled">
            <summary>
            Determines whether this instance is disabled.
            </summary>
            <returns>
              <c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.GetMinAndMaxDates">
            <summary>
            Gets the min and max date times.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.GetOptions">
            <summary>
            Gets the options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.GetData">
            <summary>
            Gets the data object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent`1.GetDay">
            <summary>
            Gets the day. Returns -1 if no day has been selected.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions">
            <summary>
            DatePickerComponentOptions.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>
            The duration of the animation.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions.DateFormat">
            <summary>
            Gets or sets the date format used by the DatePicker.
            </summary>
            <value>
            The date format.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase`1">
            <summary>
            Base class for JQuery Widgets.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1"/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase`1.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase`1"/>
            class.
            </summary>
            <param name="driver">The driver.</param>
            <param name="selector">The selector.</param>
            <param name="parent"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase`1.WaitForInitialization(System.String,System.TimeSpan)">
            <summary>
            Waits for the <c>dataName</c> to be defined on the
            $(WrappedElement).data() object. Assumes that <c>WrappedElement</c>
            has been assigned to.
            </summary>
            <param name="dataName">
            Name of the property on the data object.
            </param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1">
            <summary>
            Base class for kendo components.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1.configuration">
            <summary>
            The options that define how to interact with the component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Ctor.
            </summary>
            <param name="configuration"></param>
            <param name="selector"></param>
            <param name="driver"></param>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1.PageLoadingIndicator">
            <summary>
            The 'busy' or loading element displayed on the page.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1.ContainerLoadingIndicator">
            <summary>
            The 'busy' or loading element displayed on the container.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1.IsBusy">
            <summary>
            Checks if the page is displaying the loading indicator (page
            or container).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1.WaitForLoadingOperation(System.Nullable{System.TimeSpan})">
            <summary>
            If DataSourceOptions.RemoteDataSource is true then waits for the
            busy indicator to appear (if not already visible) then dissapear.
            </summary>
            <param name="wait">Defaults to one minute</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1.GetPromiseForKendoEvent(System.String)">
            <summary>
            Since kendo events aren't compatible with native js events use this
            method to listen for kendo events.
            </summary>
            <param name="eventName">Name of the event to listen for.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration">
            <summary>
            Options for the KDropDownComponent.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration.ControlWithKeyboardInsteadOfMouse">
            <summary>
            Gets or sets a value indicating whether to use the mouse or the
            keyboard to interact with the element. The mouse may still be used
            to for some interactions where the keyboard will not suffice.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>
            The data source.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration.DefaultBaseKendoOptions">
            <summary>
            Returns a new instance of the default BaseKendoOptions object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions">
            <summary>
            Used to configure datasource kendo components.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions"/> class.
            </summary>
            <remarks>
            Initializes a new DataSourceOptions object with RemoteDataSource
            set to false and the page/container loading selectors set to
            ".k-loading-mask");
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.RemoteDataSource">
            <summary>
            Determines if data-changing operations display a loading
            indicator.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.PageLoadingSelector">
            <summary>
            Kendo page loading indicator. Selector is relative to the document.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.ContainerLoadingSelector">
            <summary>
            Kendo container loading indicator. Selector is relative to the
            document.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDatePicker.Depth">
            <summary>
            The navigation depth of a <see cref="T:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1"/>.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Kendo.KDatePicker.Depth.Month">
            <summary>
            Shows the days of the month.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Kendo.KDatePicker.Depth.Year">
            <summary>
            Shows the months of the year.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Kendo.KDatePicker.Depth.Decade">
            <summary>
            Shows the years of the decade.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Kendo.KDatePicker.Depth.Century">
            <summary>
            Shows the decades of the century.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1">
            <summary>
            Represents the kendo datetime picker.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent`1" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1.#ctor(ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration,OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1"/> class.
            </summary>
            <param name="datePickerConfiguration">The date picker configuration.</param>
            <param name="selector">The selector.</param>
            <param name="driver">The driver.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1.Collapse">
            <summary>
            Collapses the component. Does nothing if already collapsed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1.Expand">
            <summary>
            Expands the component if not already expanded.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1.SetValue(System.Nullable{System.DateTime})">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration">
            <summary>
            Configuration for the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerComponent`1"/>.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.EnterValueAsText">
            <summary>
            Gets or sets a value indicating whether interacting with the
            element via the input element. If false then value will be
            attempted to be set via the calendar modal.
            </summary>
            <value>
              <c>true</c> if interacting with the element via the input
              element; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.Depth">
            <summary>
            Gets or sets the navigational depth. AKA which date range is
            displayed.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.Start">
            <summary>
            Gets or sets the starting 'depth' view.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.Min">
            <summary>
            How far back dates are displayed.
            </summary>
            <value>
            The minimum day a user can select.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.Max">
            <summary>
            How far forwards dates are displayed.
            </summary>
            <value>
            The maximum day a user can select.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.DateTimeFormats">
            <summary>
            Gets or sets the date time format.
            </summary>
            <value>
            The date time format.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.DisabledDates">
            <summary>
            Gets or sets the disabled dates.
            </summary>
            <value>
            The disabled dates.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.EnabledDates">
            <summary>
            Gets or sets the enabled dates.
            </summary>
            <value>
            The enabled dates.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>
            The duration of the animation.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDatePicker.KDatePickerConfiguration.AnimationsEnabled">
            <summary>
            Gets or sets a value indicating whether [animations enabled].
            </summary>
            <value>
              <c>true</c> if [animations enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions">
            <summary>
            Options that configures which classes to observer when determining if
            the dropdown is animating.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>
            The duration of the animation.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.AnimationsEnabled">
            <summary>
            Gets or sets a value indicating whether [animations enabled].
            </summary>
            <value>
              <c>true</c> if [animations enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1">
            <summary>
            Kendo dropdown widget.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions,`0)">
            <summary>
            The selector should target the original element that's been wrapped
            by kendo.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="selector">The selector.</param>
            <param name="driver">The driver.</param>
            <param name="animationData">The animation data.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.Load">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.IsExpanded">
            <summary>
            Returns true if the component is expanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.GetItems">
            <summary>
            Returns the list of items in the dropdown.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.GetSelectedItem">
            <summary>
            Returns the currently selected item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.SetSelectedItem(System.String,System.StringComparison)">
            <summary>
            Sets the selected item.
            </summary>
            <param name="value"></param>
            <param name="stringComparison"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.WaitForAnimationStart(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <summary>
            Waits for animation start.
            </summary>
            <param name="animationData">The animation data.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <summary>
            Waits for animation end.
            </summary>
            <param name="animationData">The animation data.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.Expand">
            <summary>
            Expands the dropdown if not already expanded.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent`1.Close">
            <summary>
            Collapses the dropdown if not already collapsed.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1">
            <summary>
            Represents a kendo grid.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Ctor.
            </summary>
            <param name="driver">The driver.</param>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="configuration">The configuration.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.IsMultiColumnHeader">
            <summary>
            Used to check for nested headers.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.Pager">
            <summary>
            The pager used to control the grid.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.Toolbar">
            <summary>
            Toolbar component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.GetColumnHeaders">
            <summary>
            Returns a list of all column names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.GetCell(System.Int32,System.Int32)">
            <summary>
            Returns the element cell.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.GetCell(System.String,System.Int32)">
            <summary>
            NOTE: Throws an exception if this is a multi-header grid.
            </summary>
            <param name="columnHeaderName"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.GetNumberOfColumns">
            <summary>
            Gets the number of columns.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.GetNumberOfRows">
            <summary>
            Gets the number of rows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent`1.GetRow(System.Int32)">
            <summary>
            Gets the row.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions">
            <summary>
            Animation options for the KMultiSelectComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions.AnimationDuration">
            <summary>
            Gets the duration of the animation.
            </summary>
            <value>
            The duration of the animation.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions.AnimationsEnabled">
            <summary>
            Gets a value indicating whether [animations enabled].
            </summary>
            <value>
              <c>true</c> if [animations enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1">
            <summary>
            Represents a kendo multi-select component.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="driver">The driver.</param>
            <param name="configuration">The configuration.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.IsExpanded">
            <summary>
            Checks if the widget is expanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.GetAllOptions">
            <summary>
            Returns a list of all options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.GetSelectedOptions">
            <summary>
            Returns a list of all selected items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.SelectItem(System.String,System.StringComparison)">
            <summary>
            Selects an item if not already selected.
            </summary>
            <param name="item"></param>
            <param name="stringComparison"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.DeselectItem(System.String,System.StringComparison)">
            <summary>
            Deselects an item if it's selected.
            </summary>
            <param name="item"></param>
            <param name="stringComparison"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.WaitForAnimationStart(ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions)">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions)">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.IsCurrentlyAnimating(ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions)">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.Expand">
            <summary>
            Expands the widget if not already expanded.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent`1.Close">
            <summary>
            Collapses this widget if not already collapsed.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration">
            <summary>
            Configuration and interaction options for the widget.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration.AnimationOptions">
            <summary>
            Gets or sets the animation options.
            </summary>
            <value>
            The animation options.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration.AutoClose">
            <summary>
            Gets or sets a value indicating whether the widget will
            automatically close after selecting an item.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1">
            <summary>
            PagerComponent.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.IsOnFirstPage">
            <summary>
            Returns true if on the first page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.HasPreviousPage">
            <summary>
            Returns false if the previous page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.HasNextPage">
            <summary>
            Returns false if the next page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.IsOnLastPage">
            <summary>
            Returns true if the last page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.HasPageInfo">
            <summary>
            Used to determine if the current page range total items are displayed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.SetPage(System.Int32)">
            <summary>
            Sets the page the listed page with the matching number.
            </summary>
            <param name="listedPage"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.GetListedPages">
            <summary>
            Returns a list of listed pages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.LastPage">
            <summary>
            Goes to the last page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.FirstPage">
            <summary>
            Goes to the first page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.PrevPage">
            <summary>
            Goes to the previous page if available, otherwise remains on the
            current page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.NextPage">
            <summary>
            Goes to the next page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.GetActivePage">
            <summary>
            Returns the active page number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.GetTotalItems">
            <summary>
            Returns the total items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.GetAvailableItemsPerPage">
            <summary>
            Retrieves the available items per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.GetItemsPerPage">
            <summary>
            Returns the selected value for items per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.SetItemsPerPage(System.Int32)">
            <summary>
            Sets the 'Items per Page'.
            </summary>
            <param name="itemsPerPage"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent`1.Refresh">
            <summary>
            Refreshes the context the pager is attached to.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KToolbar.KToolbarComponent`1">
            <summary>
            KToolbarComponent.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KToolbar.KToolbarComponent`1.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Kendo.KToolbar.KToolbarComponent`1"/> class.
            </summary>
            <param name="configuration"></param>
            <param name="selector"></param>
            <param name="driver"></param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KToolbar.KToolbarComponent`1.GetItems">
            <summary>
            Returns all item container elements.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem">
            <summary>
            GroupedMenuItem.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory"></param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.GetMenuItems">
            <summary>
            Gets the menu items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item by text.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.GetItemByText``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by text and attempts to convert it to the type
            paramater.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item by class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.GetItemByClass``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by class and attempts to convert it to the type
            parameter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem">
            <summary>
            Represents a drop down style menu item.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem.SelectOption(System.String,System.StringComparison)">
            <summary>
            Opens the drop down and returns the option.
            </summary>
            <param name="option">The option.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem.SelectOption``1(System.String,System.StringComparison)">
            <summary>
            Selects the option and attempts to cast to the type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="itemText">The item text.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem.GetDirectionFloatMenuWillOpen">
            <summary>
            Gets the direction float menu will open relative to the CENTER of
            this WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar">
            <summary>
            Defines methods for retrieving items.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.HasItemWithText(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
              <c>true</c> if the specified item name has item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.HasItemWithClass(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
              <c>true</c> if [has item by class] [the specified class name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.IGetMenuItem">
            <summary>
            Common interface for TinyMCE components that have nested
            <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem"/>s.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IGetMenuItem.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IGetMenuItem.GetMenuItems">
            <summary>
            Gets the menu items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IGetMenuItem.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item by text.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IGetMenuItem.GetItemByText``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by text and attempts to convert it to the type
            paramater.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IGetMenuItem.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item by class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IGetMenuItem.GetItemByClass``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by class and attempts to convert it to the type
            parameter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode">
            <summary>
            The 'mode' of a TinyMCE editor.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode.Classic">
            <summary>
            The form-based mode.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode.Inline">
            <summary>
            The inline mode. No iframe is used with the editor.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode.DistractionFree">
            <summary>
            The distraction free mode essentially is just the text editor area
            without any menus, toolbars, or status bars.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent">
            <summary>
            The menu component of a TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The pageObjectFactory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item.
            </summary>
            <param name="className"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.HasItemWithText(System.String,System.StringComparison)">
            <summary>
            Determines whether the specified item name has item.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if the specified item name has item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.HasItemWithClass(System.String,System.StringComparison)">
            <summary>
            Determines if the menu item exists.
            </summary>
            <param name="className"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetMenuItems">
            <summary>
            Gets all menu items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem">
            <summary>
            Menu item of a TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.PageObjectFactory">
            <summary>
            Page object factory.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IsDropDown">
            <summary>
            Gets a value indicating whether this instance is drop down.
            </summary>
            <value>
              <c>true</c> if this instance is drop down; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IsButtonGroup">
            <summary>
            Gets a value indicating whether this instance is button group.
            </summary>
            <value>
              <c>true</c> if this instance is button group; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.HasTitle">
            <summary>
            Gets a value indicating whether this instance has title.
            </summary>
            <value>
              <c>true</c> if this instance has title; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.HasIcon">
            <summary>
            Gets a value indicating whether this instance has icon.
            </summary>
            <value>
              <c>true</c> if this instance has icon; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.HasShortcut">
            <summary>
            Gets a value indicating whether this instance has shortcut.
            </summary>
            <value>
              <c>true</c> if this instance has shortcut; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IconElement">
            <summary>
            Gets the icon element. Won't throw an error if the element doens't
            exist.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.TextElement">
            <summary>
            Gets the text element. Won't throw an error if the element doens't
            exist.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.ShortCutElement">
            <summary>
            Gets the shortcut element. Won't throw an error if the element
            doens't exist.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.CaretElement">
            <summary>
            Gets the caret element. Won't throw an error if the element doens't
            exist.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.ConvertTo``1">
            <summary>
            Converts the item to a the derived MenuItem. Will return null if
            it fails to convert this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IsDisplayed">
            <summary>
            Determines whether this instance is displayed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.AsElement">
            <summary>
            Returns the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent">
            <summary>
            Statusbar of a TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory"></param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item by class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.GetItemByClass``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by class and attempts to convert it to the type
            parameter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item by text.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.GetItemByText``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by text and attempts to convert it to the type
            paramater.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.GetMenuItems">
            <summary>
            Gets all menu items.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.HasItemWithClass(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if [has item by class] [the specified class name]; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.HasItemWithText(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if the specified item name has item; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent">
            <summary>
            Used for interacting with TinyMCE editors.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory"></param>
            <param name="driver">The driver.</param>
            <param name="tinyMCEOptions">The options.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.IntegrationMode">
            <summary>
            Gets the integration mode.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Menu">
            <summary>
            Used to manipulate the menu area. Null if no menu bar.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Toolbar">
            <summary>
            Used to manipulate the toolbar. Null if no toolbar.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Statusbar">
            <summary>
            Used to manipulate the statusbar. Null if no status bar.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.TinyMCEContainerElement">
            <summary>
            Gets or sets the element created by tinyMCE.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.SetEditorSize(System.Drawing.Size)">
            <summary>
            Sets the size of the editor.
            </summary>
            <param name="desiredSize">Size of the desired.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetEditorSize">
            <summary>
            Gets the size of the editor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetCursorPosition">
            <summary>
            Gets the cursor position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.SetCursorPosition(System.Drawing.Point)">
            <summary>
            Sets the cursor position (the point {0,0} will be the top left
            corner).
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.HighlightAllText">
            <summary>
            Highlights all text.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.HightlightRange(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Hightlights the range.
            </summary>
            <param name="startPoint">The start.</param>
            <param name="endPoint">The end.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the start point is before the end point.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetHighlightedText">
            <summary>
            Gets the highlighted text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Write(System.String)">
            <summary>
            Writes the specified content.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.WriteLine(System.String)">
            <summary>
            Writes the line.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.WriteLine">
            <summary>
            Writes the line.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetContent">
            <summary>
            Gets the content of the editor. This calls the
            tinyMCE.Editor.getContent().
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.ClearAllContent">
            <summary>
            Clears all content in the editable body area.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions">
            <summary>
            Options for the TinyMCEComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions.InteractWithMenuViaJavaScript">
            <summary>
            Gets or sets a value indicating whether to interact with the menu
            using the javascript api. If false then interactions will be
            attempted via clicking.
            </summary>
            <value>
              <c>true</c> if [interact with menu via java script]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent">
            <summary>
            Toolbar component of the TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.PageObjects.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item by class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetItemByClass``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by class and attempts to convert it to the type
            parameter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item by text.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetItemByText``1(System.String,System.StringComparison)">
            <summary>
            Gets the item by text and attempts to convert it to the type
            paramater.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetMenuItems">
            <summary>
            Gets all menu items.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.HasItemWithClass(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if [has item by class] [the specified class name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.HasItemWithText(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if the specified item name has item; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssColor">
            <summary>
            Represents a css color.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Css.CssColor"/> class.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.ArgumentException">value</exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssColor.Color">
            <summary>
            The color parsed from the value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromHsl">
            <summary>
            Assigns Color from value interperted as an hsl function.
            </summary>
            <returns></returns>
            <seealso cref="!:https://www.w3.org/TR/css-color-3/#hsl-color"></seealso>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromRgb">
            <summary>
            Creates a color from rgba color string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromHex">
            <summary>
            Creates a color from a hex string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.Normalize(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Maps a value in a range to another range.
            </summary>
            <param name="value">The number being mapped.</param>
            <param name="actualMin">Ignored if infinity.</param>
            <param name="actualMax">Ignored if infinity.</param>
            <param name="desiredMin">Defaults to zero.</param>
            <param name="desiredMax">Defaults to one.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssColorFormat">
            <summary>
            The supported color formats.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Unknown">
            <summary>
            Unable to determine the color format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.CurrentColor">
            <summary>
            The value of the color property. Similar to one of the css-wide
            keywords like auto or inherit.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.BasicColorKeyword">
            <summary>
            The value is of the list of html color keywords.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Transparent">
            <summary>
            The value is transparent.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Hexadecimal">
            <summary>
            Value is in the hex format. Can be #fff or #ffffff.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.RGB">
            <summary>
            Value is in the rgb(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.RGBA">
            <summary>
            Value is in the rgba(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.HSL">
            <summary>
            Value is in the hsl(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.HSLA">
            <summary>
            Value is in the hsla(...) format.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssDimension">
            <summary>
            Represents a 'number' value for css.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssDimension.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssDimension.Number">
            <summary>
            The value as a number.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssDimension.UnitOfMeasurement">
            <summary>
            The unit of measurement.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssFunction">
            <summary>
            Represents a css function.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssFunction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Css.CssFunction"/> class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssFunction.Arguments">
            <summary>
            Gets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssFunction.FunctionName">
            <summary>
            Gets the name of the function.
            </summary>
            <value>
            The name of the function.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssUnit">
            <summary>
            Represents a css unit of measurement.
            </summary>
            <seealso cref="!:https://drafts.csswg.org/css-values-4"/>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.None">
            <summary>
            There is no unit associated with the number.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Centimeters">
            <summary>
            ('cm')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Millimeters">
            <summary>
            ('mm')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.QuarterMillimeters">
            <summary>
            ('Q')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Inches">
            <summary>
            ('in')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Picas">
            <summary>
            ('pc')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Points">
            <summary>
            ('pt')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Pixels">
            <summary>
            ('px')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Degrees">
            <summary>
            ('deg') Degrees. There are 360 degrees in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Gradians">
            <summary>
            ('grad') Gradians, also known as "gons" or "grades". There are 400
            gradians in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Radians">
            <summary>
            ('rad') Radians. There are 2π radians in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Turn">
            <summary>
            ('turn') Turns. There is 1 turn in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Seconds">
            <summary>
            ('s') Seconds.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Milliseconds">
            <summary>
            ('ms') Milliseconds. There are 1000 milliseconds in a second.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Hertz">
            <summary>
            ('Hz') Hertz. It represents the number of occurrences per second.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.KiloHertz">
            <summary>
            ('kHz') KiloHertz. A kiloHertz is 1000 Hertz.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Percent">
            <summary>
            ('%') Varies based on which style property it's being used with.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.EM">
            <summary>
            ('em') Relative to the font size of the element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.EX">
            <summary>
            ('ex') X-height of the element’s font.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.CAP">
            <summary>
            ('cap') Relative to the cap height (the nominal height of capital
            letters) of the element’s font.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.CH">
            <summary>
            ('ch') Relative to the average character advance of a narrow glyph
            in the element’s font, as represented by the “0” (ZERO, U+0030)
            glyph.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.IC">
            <summary>
            ('ic') Relative to the average character advance of a fullwidth
            glyph in the element’s font, as represented by the “水” (CJK water
            ideograph, U+6C34) glyph.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.REM">
            <summary>
            ('rem') Relative to the font size of the root element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.LineHeight">
            <summary>
            ('lh') Relative to the line height of the element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.RootLineHeight">
            <summary>
            ('rlh') Relative to the line height of the root element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewWidth">
            <summary>
            ('vw') Equal to 1% of the width of the initial containing block.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewHeight">
            <summary>
            ('vh') Equal to 1% of the height of the initial containing block.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewInline">
            <summary>
            ('vi') Equal to 1% of the size of the initial containing block in
            the direction of the root element’s inline axis.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewBlock">
            <summary>
            ('vb') Equal to 1% of the size of the initial containing block in
            the direction of the root element’s block axis.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewMinimum">
            <summary>
            ('vmin') Equal to the smaller 'vw' or 'vh'.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewMaximum">
            <summary>
            ('vmax') Equal to the larger 'vw' or 'vh'.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerInch">
            <summary>
            ('dpi') Dots per inch.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerCentimeter">
            <summary>
            ('dpcm') Dots per centimeter.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerPixelUnit">
            <summary>
            ('dppx' | 'x') Dots per 'px' unit.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssValue">
            <summary>
            Representing and converting css values (length, color, angle, etc...).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.Value">
            <summary>
            Original css string.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsAuto">
            <summary>
            True if the value is 'auto'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsUnset">
            <summary>
            True if the value is 'unset'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsInherit">
            <summary>
            True if the value is 'inherit'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsCssWideKeyword">
            <summary>
            True if the the value is auto or inherit or unset.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.ToString">
            <summary>
            Returns the original css string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.op_Implicit(ApertureLabs.Selenium.Css.CssValue)~System.String">
            <summary>
            Implicitly converts a CssValue to a string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.ExpectedConditions">
            <summary>
            Commonly used conditions.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsExist(OpenQA.Selenium.By)">
            <summary>
            Waits for at least one element identified by the selector to exist.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsAreVisible(OpenQA.Selenium.By)">
            <summary>
            Waits until all elements identified by the selector are visible.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsAreClickable(OpenQA.Selenium.By)">
            <summary>
            Waits until all elements identified by the selector are clickable.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.FluidPageObjectExtensions">
            <summary>
            Contains extensions methods for objects implementing the IPageObject.
            interface.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.FluidPageObjectExtensions.StartWithPage``1(ApertureLabs.Selenium.PageObjects.IPageObjectFactory,System.Action{``0})">
            <summary>
            Will load up the page and navigate to it's url.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="performActions">
            The actions to be performed on the page. No navigation events
            should occur here.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.FluidPageObjectExtensions.ContinueWithPage``2(``0,System.Action{``0},System.Func{``0,``1})">
            <summary>
            Used to chaing actions between <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/> instances.
            The only time the wrapped <see cref="T:OpenQA.Selenium.IWebDriver"/> should
            navigate is in the navigationActions argument..
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="V"></typeparam>
            <param name="pageObject">The page object.</param>
            <param name="performActions">
            The actions on a web-page that don't result in a navigation event.
            </param>
            <param name="navigationActions">
            The actions on a web-page that result in a navigation event. Should
            return the fully loaded <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/>.
            </param>
            <returns>The loaded <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if performActions or navigationActions are null.
            </exception>
            <exception cref="T:System.Exception">
            Thrown if a Navigated event is detected while the argument
            performing actions is called.
            </exception>
            <remarks>
            Exists for organization. Instead of manually indenting the chained
            method calls (if using a fluid syntax) this can be used to better
            seperate which methods are acting on which pages.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.FluidPageObjectExtensions.ContinueWithPage``2(``0,System.Func{``0,``1})">
            <summary>
            Used to chaing actions between <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/> instances.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="V"></typeparam>
            <param name="pageObject">The page object.</param>
            <param name="navigationActions">The navigation actions.</param>
            <returns>
            The newly loaded <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/> instance.
            </returns>
            <remarks>
            Exists for organization. Instead of manually indenting the chained
            method calls (if using a fluid syntax) this can be used to better
            seperate which methods are acting on which pages.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.FluidPageObjectExtensions.ContinueWithPage``1(``0,System.Action{``0})">
            <summary>
            Used as the final link in a chain of method calls between
            <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/> instances. The wrapped
            <see cref="T:OpenQA.Selenium.IWebDriver"/> should never navigate to another url in
            this method.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageObject">The page object.</param>
            <param name="performAction">
            The final action(s) to be performed on a <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/>.
            </param>
            <exception cref="T:System.Exception">
            Thrown if a navigation event is detected while performingAction is
            executing.
            </exception>
            <remarks>
            Exists for organization. Instead of manually indenting the chained
            method calls (if using a fluid syntax) this can be used to better
            seperate which methods are acting on which pages.
            </remarks>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IDisposableExtensions">
            <summary>
            Contains extensions for classes implementing IDisposable.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IDisposableExtensions.Using``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})">
            <summary>
            Calls <code>IDisposable.Dispose</code> on each disposable after
            executing the function.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="disposables"></param>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IDisposableExtensions.Using``1(System.Collections.Generic.IEnumerable{``0},System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Calls <code>IDisposable.Dispose</code> on each disposable after
            executing the function.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="disposables"></param>
            <param name="action"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IEnumerableExtensions">
            <summary>
            Contains extensions for ICollection.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IEnumerableExtensions.SelectRandom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Selects a random element from a list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Retrieves the index of an item in a collection. Returns -1 if the
            item isn't in the collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            Retrieves the index of an item in a collection. Returns -1 if the
            item isn't in the collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IEnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Chunks the specified list into lists of chunkSize.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.ISearchContextExtensions">
            <summary>
            Contains extensions for ISearchContext objects.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.ISearchContextExtensions.GetCssSelector(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.IWebElement,System.Boolean)">
            <summary>
            Creates a unique CSS selector for an element.
            </summary>
            <param name="searchContext">The search context.</param>
            <param name="element">The element.</param>
            <param name="optimize">
            Whether or not to optimize the selector. This may be time
            consuming.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.ISearchContextExtensions.TryGetAttribute(OpenQA.Selenium.IWebElement,System.String,System.Func{System.String,System.Boolean},System.String@)">
            <summary>
            Tries the get attribute. Will check if the value is null BEFORE
            executing the expression.
            </summary>
            <param name="element">The element.</param>
            <param name="attribute">The attribute.</param>
            <param name="predicate">The predicate.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IWebDriverExtensions">
            <summary>
            Contains extensions for IWebDriver.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForUserSignal(OpenQA.Selenium.IWebDriver,System.TimeSpan)">
            <summary>
            Waits for user signal.
            </summary>
            <param name="driver">The driver.</param>
            <param name="timeout">
            How long to wait for a signal
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.TabHelper(OpenQA.Selenium.IWebDriver)">
            <summary>
            Shorthand for creating a new TabHelper object.
            </summary>
            <param name="driver">The driver.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Wait(OpenQA.Selenium.IWebDriver,System.TimeSpan)">
            <summary>
            Shorthand for creating a new WebDriverWait object.
            </summary>
            <param name="driver"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Wait(OpenQA.Selenium.IWebDriver,System.TimeSpan,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Shorthand for creating a new WebDriverWait object which ignores all
            exceptions passed in to it.
            </summary>
            <param name="driver"></param>
            <param name="timeSpan"></param>
            <param name="ignore"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Select(OpenQA.Selenium.IWebDriver,System.String,System.TimeSpan)">
            <summary>
            Shorthand selector for FindElements(By.CssSelector(...));
            </summary>
            <param name="driver"></param>
            <param name="cssSelector"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Select(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Shorthand selector for FindElements(by);
            </summary>
            <param name="driver"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetCurrentViewportDimensions(OpenQA.Selenium.IWebDriver)">
            <summary>
            Retrieves the size of the current viewport.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.CreateActions(OpenQA.Selenium.IWebDriver)">
            <summary>
            Shorthand for <code>new Actions(driver);</code>. Only exists
            to help make the Actions class more apparent.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.PageHasJQuery(OpenQA.Selenium.IWebDriver)">
            <summary>
            Detects if jQuery is defined on a page.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.JavaScriptExecutor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Returns a javascript executor from the webdriver. Will throw an
            exception if the driver doesn't support the interface.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.TypedJavaScriptExecutor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Returns a type-safe <see cref="T:OpenQA.Selenium.IJavaScriptExecutor"/>.
            </summary>
            <param name="driver">The driver.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForEvent(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Waits for a document level event matching the eventName to occur.
            </summary>
            <param name="driver"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForAnyEvent(OpenQA.Selenium.IWebDriver,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the first event to be emitted by the document.
            </summary>
            <param name="driver"></param>
            <param name="eventNames"></param>
            <param name="timeout">Defaults to 30 seconds.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForAllEvents(OpenQA.Selenium.IWebDriver,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for all events to be emitted by the document.
            </summary>
            <param name="driver"></param>
            <param name="eventNames"></param>
            <param name="timeout">Defaults to 30 seconds.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetFocusedElements(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Returns elements that matched the '*:focus' css selector and
            optionally are filtered by the <c>matchingSelector</c>.
            </summary>
            <param name="driver"></param>
            <param name="matchingSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetHoveredElements(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Returns elements that match the css selector "*:hover" and
            optionally additionally match the <c>matchingSelector</c> if
            provided.
            </summary>
            <param name="driver">The driver.</param>
            <param name="matchingSelector">Filters the results.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetHighlightedText(OpenQA.Selenium.IWebDriver)">
            <summary>
            Gets highlighted text.
            </summary>
            <param name="driver">The driver.</param>
            <returns>
            The highlighted text content (no element tags but does
            include new lines).
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Capabilities(OpenQA.Selenium.IWebDriver)">
            <summary>
            Capabilities object for the driver. Returns null if not implemented
            by the driver.
            </summary>
            <param name="driver">The driver.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.AllowsFileDetection(OpenQA.Selenium.IWebDriver)">
            <summary>
            Returns null if the driver doesn't implement IFileDetector.
            </summary>
            <param name="driver">The driver.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.SessionId(OpenQA.Selenium.IWebDriver)">
            <summary>
            Returns the session id.
            </summary>
            <param name="driver">The driver.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForJqueryReady(OpenQA.Selenium.IWebDriver)">
            <summary>
            Waits for jquery to be ready.
            </summary>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.CreatePointAtCurrentMousePosition(OpenQA.Selenium.IWebDriver)">
            <summary>
            Displays a circle around the mouse cursors current position. This
            should only be used in designing tests, NOT for use in the actual
            tests.
            </summary>
            <param name="driver">The driver.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IWebElementExtensions">
            <summary>
            Extensions for IWebElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Children(OpenQA.Selenium.IWebElement)">
            <summary>
            Selects only direct child elements of this element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Classes(OpenQA.Selenium.IWebElement)">
            <summary>
            Retrieves all classes listed on an element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.UnWrapEventFiringWebElement(OpenQA.Selenium.IWebElement)">
            <summary>
            This is a fix for trying to pass elements of the nested private
            class EventFiringWebElement of
            OpenQA.Selenium.Support.Events.EventFiringWebDriver.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetDriver(OpenQA.Selenium.IWebElement)">
            <summary>
            Retrieves the IWebDriver from an IWebElement.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.TryScrollToCenter(OpenQA.Selenium.IWebElement)">
            <summary>
            Will try scroll to the page until the center of the element is
            aligned with the center of the viewport.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.TextHelper(OpenQA.Selenium.IWebElement)">
            <summary>
            Returns and creates a new TextHelper for a given element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetParentElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Returns the parent element of the element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.SelectRandom(System.Collections.Generic.IReadOnlyList{OpenQA.Selenium.IWebElement})">
            <summary>
            Returns a random element and returns it.
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.SelectRandom(System.Collections.Generic.IReadOnlyList{OpenQA.Selenium.IWebElement},System.Int32@)">
            <summary>
            Returns a random element and returns it.
            </summary>
            <param name="elements"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.IsStale(OpenQA.Selenium.IWebElement)">
            <summary>
            Checks if an element is stale.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetEventWaiter(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Creates an activated SeleniumJavaScriptPromiseBody and returns it.
            NOTE: Don't call CreateScript(...) on the returned object as it has
            already been called.
            </summary>
            <param name="element">The element.</param>
            <param name="eventName">Name of the event.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">eventName</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForEvent(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Waits for an event to occur on the element.
            </summary>
            <param name="element"></param>
            <param name="eventName"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForAnyEvent(OpenQA.Selenium.IWebElement,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the first event on the element.
            </summary>
            <param name="element"></param>
            <param name="eventNames"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForAllEvents(OpenQA.Selenium.IWebElement,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for all events to be emitted on the element.
            </summary>
            <param name="element"></param>
            <param name="eventNames"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetElementProperty(OpenQA.Selenium.IWebElement,System.String,System.String)">
            <summary>
            This exists to patch an issue with the current chromedriver not
            being compatible with the W3C WebDriver spec as of 05 June 2018
            (https://www.w3.org/TR/2018/REC-webdriver1-20180605/). This will
            use the native function 'GetProperty' for every driver except
            chromedriver which instead executes javascript to retrieve the
            value.
            </summary>
            <param name="element"></param>
            <param name="propertyName"></param>
            <param name="defaultValueIfNull"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetIndexRelativeToSiblings(OpenQA.Selenium.IWebElement)">
            <summary>
            Gets the position of the element relative to it's sibling elements.
            NOTE: Is zero based: first element of parent is zero, second is
            one, etc...
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Is(OpenQA.Selenium.IWebElement,OpenQA.Selenium.By)">
            <summary>
            Determines whether the element matches the selector. Similar to
            jQuery.is(...).
            </summary>
            <param name="element">The element.</param>
            <param name="selector">The selector.</param>
            <returns>
              <c>true</c> if the element matches the specified selector;
              otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.SetCssProperty(OpenQA.Selenium.IWebElement,System.String,System.String)">
            <summary>
            Sets the CSS property of the element. Should only be used when
            designing the tests but should NOT be used in the actual test.
            </summary>
            <param name="element">The element.</param>
            <param name="cssPropName">Name of the CSS property.</param>
            <param name="cssPropValue">The CSS property value.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions">
            <summary>
            Extensions for WebDriverWait.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Select(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
            <summary>
            Shorthand selector for wait.Until(ExpectedConditions.ElementsExist(
            By.CssSelector('cssSelector')));
            </summary>
            <param name="wait"></param>
            <param name="cssSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Select(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
            <summary>
            Shorthand selector for wait.Until(ExpectedConditions.ElementsExist(
            by));
            </summary>
            <param name="wait"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Exists(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
            <summary>
            Returns true if the element exists.
            </summary>
            <param name="wait"></param>
            <param name="cssSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Exists(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
            <summary>
            Returns true if the element exists.
            </summary>
            <param name="wait"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.UntilStale(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
            <summary>
            Waits until the element is stale.
            </summary>
            <param name="wait"></param>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.TrySequentialWait(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Exception@,System.Func{OpenQA.Selenium.IWebDriver,System.Boolean}[])">
            <summary>
            Identical to wait, but returns the IWait object instead of the
            wait result.
            </summary>
            <param name="wait"></param>
            <param name="exception"></param>
            <param name="conditions"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.While(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Func{OpenQA.Selenium.IWebDriver,System.Boolean})">
            <summary>
            The inverse of Until(...). Will wait while a statement is true.
            </summary>
            <param name="wait"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.While``1(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Func{OpenQA.Selenium.IWebDriver,``0})">
            <summary>
            Waits while the condition returns not null.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="wait"></param>
            <param name="condition"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.UntilPageReloads(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},OpenQA.Selenium.IWebElement,System.Action{OpenQA.Selenium.IWebElement})">
            <summary>
            Performs an action on an element then waits for the page to reload.
            </summary>
            <param name="wait">The wait.</param>
            <param name="element">The element.</param>
            <param name="action">The action.</param>
            <exception cref="T:System.ArgumentNullException">
            element
            or
            action
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.UntilChain``1(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Func{OpenQA.Selenium.IWebDriver,``0})">
            <summary>
            A fluid version of <c>Until(...)</c>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="wait">The wait.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">predicate</exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.JavaScript">
            <summary>
            Base class for writing javascript.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScript"/> class.
            </summary>
            <param name="script">The script.</param>
            <exception cref="T:System.ArgumentNullException">script</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScript"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.JavaScript.Arguments">
            <summary>
            Gets or sets the arguments passed into the script when executing
            it.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.JavaScript.Script">
            <summary>
            The script to be executed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.JavaScript.IsAsync">
            <summary>
            Gets or sets a value indicating whether this script is
            asynchronous. This changes how Execute() operates, if true then the
            script will be executed using ExecuteAsyncScript(...), if false
            then ExecuteScript(...).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.Format">
            <summary>
            Formats the script.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.Execute(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            Executes the script.
            </summary>
            <param name="executor">The executor.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.TryExecute(OpenQA.Selenium.IJavaScriptExecutor,ApertureLabs.Selenium.Js.JavaScriptValue@,System.Exception@)">
            <summary>
            Tries the execute.
            </summary>
            <param name="executor">The executor.</param>
            <param name="result">The result.</param>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.Clean(System.String)">
            <summary>
            Removes all line breaks, tabs, and comments in a script. WARNING:
            Make sure all comments are removed prior to calling this.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.RemoveComments(System.String)">
            <summary>
            Removes the comments.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.Add(ApertureLabs.Selenium.Js.JavaScript,ApertureLabs.Selenium.Js.JavaScript)">
            <summary>
            Appends the two scripts together and returns a new
            <see cref="T:ApertureLabs.Selenium.Js.JavaScript"/> object.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.op_Explicit(ApertureLabs.Selenium.Js.JavaScript)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:ApertureLabs.Selenium.Js.JavaScript"/> to
            <see cref="T:System.String"/>.
            </summary>
            <param name="js">The js.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.op_Addition(ApertureLabs.Selenium.Js.JavaScript,ApertureLabs.Selenium.Js.JavaScript)">
            <summary>
            Implements the operator +. Returns a new JavaScript object with
            the Script property being set to the result of (a + b).
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ApertureLabs.Selenium.Js.JavaScriptType" -->
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.Null">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.Boolean">
            <summary>
            A boolean. Cast to bool.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.BooleanArray">
            <summary>
            An array of booleans. Cast to IEnumerable{bool}.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.Number">
            <summary>
            A number (Int64/long). Cast to long.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.NumberArray">
            <summary>
            A number array (Int64/long). Cast to IEnumerable{long}.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.String">
            <summary>
            A string. Cast to string.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.StringArray">
            <summary>
            A string array. Cast to IEnumerable{string}.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.WebElement">
            <summary>
            An element. Cast to <see cref="T:OpenQA.Selenium.IWebElement"/>.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.WebElementArray">
            <summary>
            An array of web elements. Cast to IEnumerable{IWebElement}.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.JavaScriptType.MultiTypeArray">
            <summary>
            An array consisting of multiple types or all nulls.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Safely converts the argument into a type safe version for passing into
            scripts.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Object,System.Nullable{ApertureLabs.Selenium.Js.JavaScriptType})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="argument">
            The argument. An exception will be thrown if it the type is
            supported
            </param>
            <param name="javaScriptType">
            Type of the JavaScript value will be checked against the actual
            type of argument and will throw an exception if they don't match.
            </param>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="argument">The element.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Collections.Generic.IEnumerable{OpenQA.Selenium.IWebElement})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="argument">The argument.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="argument">The argument.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="argument">if set to <c>true</c> [argument].</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.#ctor(System.Collections.Generic.IEnumerable{ApertureLabs.Selenium.Js.JavaScriptValue})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/> class.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.GetArgument">
            <summary>
            Gets the argument.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.GetArgumentType">
            <summary>
            Gets the type of the argument.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.IsNull">
            <summary>
            Determines whether the argument is null.
            </summary>
            <returns>
              <c>true</c> if this instance is null; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToBool">
            <summary>
            Converts the argument to a bool.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToBoolArray">
            <summary>
            Converts the argument to an IEnumerable{bool}.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToNumber">
            <summary>
            Converts the argument to a number.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToNumberArray">
            <summary>
            Converts the argument to an IEnumerable{long}.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToString">
            <summary>
            Converts the argument to a string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToStringArray">
            <summary>
            Converts the argument to a stringarray.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToWebElement">
            <summary>
            Converts the argument to a webelement.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToWebElementArray">
            <summary>
            Converts the argument to a webelementarray.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.ToMultiTypeArray">
            <summary>
            Converts the argument to a multi-type array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(OpenQA.Selenium.Remote.RemoteWebElement)~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="argument">The argument.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(OpenQA.Selenium.Remote.RemoteWebElement[])~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="!:RemoteWebElement[]"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(System.String)~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="argument">The argument.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(System.String[])~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="!:System.String[]"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(System.Int64)~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int64"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="argument">The argument.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(System.Int64[])~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="!:System.Int64[]"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(System.Boolean)~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Boolean"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="argument">if set to <c>true</c> [argument].</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScriptValue.op_Implicit(System.Boolean[])~ApertureLabs.Selenium.Js.JavaScriptValue">
            <summary>
            Performs an implicit conversion from <see cref="!:System.Boolean[]"/> to <see cref="T:ApertureLabs.Selenium.Js.JavaScriptValue"/>.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus">
            <summary>
            Statuses for javascript promises.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus.NotFinished">
            <summary>
            The promise never finished.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus.Resolved">
            <summary>
            The promise resolved successfully.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus.Rejected">
            <summary>
            The promise was rejected.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.PromiseBody">
            <summary>
            A helper class for creating a javascript promise body for selenium.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.PromiseBody"/> class.
            </summary>
            <param name="driver">The driver.</param>
            <exception cref="T:System.ArgumentNullException">driver</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.#ctor(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.PromiseBody"/> class.
            </summary>
            <param name="driver">The driver.</param>
            <param name="promiseBody">The promise body.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Created">
            <summary>
            Used to determine if the promise was created.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.PromiseWrapper">
            <summary>
            The wrapper around the script.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.PromiseId">
            <summary>
            Id of the created promise. Returns -1 if the promise hasn't been
            'created' yet.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.IsAsync">
            <summary>
            Gets or sets a value indicating whether this script is
            asynchronous. This changes how Execute() operates, if true then the
            script will be executed using ExecuteAsyncScript(...), if false
            then ExecuteScript(...).
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Arguments">
            <summary>
            Gets or sets the arguments passed into the script when executing
            it.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ResolveScript">
            <summary>
            Name of the function to resolve the promise.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.RejectScript">
            <summary>
            Name of the function to reject the script.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ArgumentsScript">
            <summary>
            Name of the variable the initial arguments are assigned to. Since
            any parameters passed into the script will only be assigned to the
            initial arguments object, a variable is created to reference the
            intial arguments to access it from the Promise.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Script">
            <summary>
            The body of the promise.
            Supports the following 'default' tokens:
            {resolve} - To resolve the promise (need to call with paranthesis IE:
                {resolve}(23) will resolve 23).
            {reject} - To reject the promise need to call with paranthesis IE:
                {reject}(43) will reject and pass the value 43).
            {args} - To refer to the arguments array of the intial function.
                * Attempting to reference the arguments object by name in the
                    script will return the promises arguments and not what was
                    passed in.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ResolveToken">
            <summary>
            Gets or sets the resolve token.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.RejectToken">
            <summary>
            Gets or sets the reject token.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ArgsToken">
            <summary>
            Gets or sets the arguments token.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Resolved">
            <summary>
            Checks if the promise was resolved.
            </summary>
            <value>
              <c>true</c> if resolved; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.InvalidOperationException">Never created the promise.</exception>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Rejected">
            <summary>
            Checks if the promise was rejected.
            </summary>
            <value>
              <c>true</c> if rejected; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.InvalidOperationException">Never created the promise.</exception>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Finished">
            <summary>
            Checks if the promise was resolved or rejected.
            </summary>
            <value>
              <c>true</c> if finished; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.InvalidOperationException">Never created the promise.</exception>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.IsStale">
            <summary>
            Checks if the context the promise was saved in is still valid. IE:
            navigating off the page will make this a stale promise.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Reject``1(``0)">
            <summary>
            Attempts to reject the promise with a value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Reject">
            <summary>
            Attempts to reject the promise.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Resolve``1(``0)">
            <summary>
            Attempts to resolve the promise with a value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Resolve">
            <summary>
            Attempts to resolve the promise.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.GetPromiseStatus">
            <summary>
            Returns the status of the promise. Throws an exception if the
            promise was never created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Wait(System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the promise to either resolve or reject.
            </summary>
            <param name="wait">Defaults to thirty seconds.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Execute(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            This will create the js promise in the drivers active window and
            sets the PromiseId. Can only call this method once. Will throw an
            exception if the PromiseBody was never set.
            </summary>
            <param name="executor">The executor.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.SetTimeout">
            <summary>
            Convience class for executing scripts in a setTimeout context.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.SetTimeout.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.SetTimeout.IsAsync">
            <summary>
            Will always be true.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.SetTimeout.Script">
            <summary>
            The script to be executed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.SetTimeout.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.TypedJavaScriptExecutor">
            <summary>
            Provides a way to provide type-safe arguments to a script and return a
            type safe value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.TypedJavaScriptExecutor.#ctor(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.TypedJavaScriptExecutor"/> class.
            </summary>
            <param name="javaScriptExecutor">The java script executor.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.TypedJavaScriptExecutor.ExecuteJavaScript(System.String,ApertureLabs.Selenium.Js.JavaScriptValue[])">
            <summary>
            Executes the JavaScript.
            </summary>
            <param name="script">The script.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.TypedJavaScriptExecutor.ExecuteAsyncScript(System.String,ApertureLabs.Selenium.Js.JavaScriptValue[])">
            <summary>
            Executes the asynchronous script.
            </summary>
            <param name="script">The script.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.TypedJavaScriptExecutor.ExecuteJavaScript(ApertureLabs.Selenium.Js.JavaScript)">
            <summary>
            Executes the JavaScript.
            </summary>
            <param name="javaScript">The JavaScript.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.MajorWebDriver">
            <summary>
            Enum of common web drivers.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Chrome">
            <summary>
            Chrome.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Edge">
            <summary>
            Edge.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Firefox">
            <summary>
            Firefox.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.InternetExplorer">
            <summary>
            Internet explorer.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Models.NopModels.INopAddress">
            <summary>
            Respsents an address according to NopCommerce.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.FirstName">
            <summary>
            FirstName.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.LastName">
            <summary>
            LastName.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Company">
            <summary>
            Company.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Country">
            <summary>
            Country.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.StateProvince">
            <summary>
            StateProvice.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.City">
            <summary>
            City.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Address1">
            <summary>
            Address1.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Address2">
            <summary>
            Address2.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.PostalCode">
            <summary>
            PostalCode.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.PhoneNumber">
            <summary>
            PhoneNumber
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.FaxNumber">
            <summary>
            FaxNumber.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Models.NopModels.NopAddress">
            <summary>
            Default implementation of INopAddress.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.#ctor(System.String)">
            <summary>
            Parses a string into a NopAddress.
            </summary>
            <param name="address"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.FirstName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.LastName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Email">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Company">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Country">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.StateProvince">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.City">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Address1">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Address2">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.PostalCode">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.PhoneNumber">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.FaxNumber">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <seealso cref="!:https://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode/263416#263416"/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.Equals(ApertureLabs.Selenium.Models.NopModels.INopAddress)">
            <summary>
            Checks if the addresses are the same.
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.ToString">
            <summary>
            Returns an address string that is usually formatted identical to
            ones displayed by Nop.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.IsValidAddress">
            <summary>
            Checks if this is a valid address.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.BasePageObject">
            <summary>
            Used for creating 'parent' IPageObjects used for
            inheritance/composition. The only noticable changes are that the
            <see cref="P:ApertureLabs.Selenium.PageObjects.BasePageObject.BaseUri"/> and <see cref="P:ApertureLabs.Selenium.PageObjects.BasePageObject.Route"/> will always be null and
            calling <see cref="M:ApertureLabs.Selenium.PageObjects.BasePageObject.Load"/> won't do any validation.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageObject" />
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.IPageObject" />
        </member>
        <!-- Badly formed XML comment ignored for member "P:ApertureLabs.Selenium.PageObjects.BasePageObject.BaseUri" -->
        <member name="P:ApertureLabs.Selenium.PageObjects.BasePageObject.Route">
            <summary>
            Overridden so it will always be null.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.BasePageObject.Load">
            <summary>
            Loads the component. Overridden so it doesn't validate the
            <see cref="P:ApertureLabs.Selenium.PageObjects.BasePageObject.Route"/>. Calling this will set the
            <see cref="!:BasePageObject.Uri"/> and
            <see cref="!:BasePageObject.WindowHandle"/> properties.
            </summary>
            <returns>
            A reference to this
            <see cref="T:OpenQA.Selenium.Support.UI.ILoadableComponent" />.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1">
            <summary>
            Default implementation of <see cref="T:ApertureLabs.Selenium.PageObjects.IFluidPageComponent`1"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.IFluidPageComponent`1" />
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="driver">The driver.</param>
            <param name="parent">The parent. Can be null.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1.Parent">
            <summary>
            Retrieves the parent/container of this component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.FluidPageComponent`1.Perform(System.Action{ApertureLabs.Selenium.PageObjects.IFluidPageComponent{`0}})">
            <summary>
            Used for performing actions on the component that may not be
            chainable then returns the component.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IFluidPageComponent`1">
            <summary>
            Similar to IPageComponent but adds a method for retrieving the parent
            object. This allows for chaining back to the parent object.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.IPageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IFluidPageComponent`1.Parent">
            <summary>
            Retrieves the parent/container of this component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IFluidPageComponent`1.Perform(System.Action{ApertureLabs.Selenium.PageObjects.IFluidPageComponent{`0}})">
            <summary>
            Used for performing actions on the component that may not be
            chainable then returns the component.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IOrderedModule">
            <summary>
            Similary to IModule but adds an index property to order the imports
            modules by. NOTE: Classes that implement this MUST have a default
            constructor (no-args) otherwise they will be ignored.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IOrderedModule.Order">
            <summary>
            Gets the order. Lower numbers will be imported earlier.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IPageComponent">
            <summary>
            Represents a partial view or view component.
            </summary>
            <seealso cref="T:OpenQA.Selenium.Support.UI.ILoadableComponent" />
            <seealso cref="T:OpenQA.Selenium.Internal.IWrapsDriver" />
            <seealso cref="T:OpenQA.Selenium.Internal.IWrapsElement" />
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageComponent.By">
            <summary>
            The selector for the parent node for this component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageComponent.IsStale">
            <summary>
            Determines if the page is in a usable state.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IPageObject">
            <summary>
            Represents a web-page which has a url with parameters.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageObject.Route">
            <summary>
            Used to match the Uri of the webpage. Is used to create a Regex
            object to verify the url of the page when calling <c>Load</c>.
            The syntax is identical to that of the RouteAttribute. Used with
            the <see cref="P:ApertureLabs.Selenium.PageObjects.IPageObject.BaseUri"/> property to check if the current url is
            valid.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageObject.BaseUri">
            <summary>
            Gets the base URI. Used alongside the <see cref="P:ApertureLabs.Selenium.PageObjects.IPageObject.Route"/> to check
            if the current url is valid.
            </summary>
            <value>
            The base URI.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageObject.Uri">
            <summary>
            Gets the URI. Should be null until
            <see cref="M:OpenQA.Selenium.Support.UI.ILoadableComponent.Load"/> is
            called where it will be set to the Url the
            <see cref="T:OpenQA.Selenium.IWebDriver" />
            is on.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageObject.WindowHandle">
            <summary>
            Gets the window handle the page was originally loaded on.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageObject.IsStale">
            <summary>
            Use to determine if a PageObject is still 'valid'.
            </summary>
            <example>
            If there are two page object instances; one for a login page and
            one for the home page, and the driver is on the home page the login
            page instance should return true while the home page instance
            should return true.
            </example>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IPageObjectFactory">
            <summary>
            Used for preparing IPageObjects and IPageObjectFactories.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageObjectFactory.PrepareComponent``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page component and returns
            it. This is useful for initializing a component in one line.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loadableComponent"></param>
            <returns></returns>
            <example>
            Before:
            // Uninitialized
            var component = new YourComponent(arg1, arg2);
            // Initialized
            component.Load();
            
            After:
            // Instantiate and initialize in one (ableit long) line.
            var initializedcomponent = yourPageObjectFactory
                .PrepareComponent(new YourComponent(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageObjectFactory.PreparePage``1">
            <summary>
            Creates an instance of the PageObject using the service provider to
            resolve the constructor arguments and then calls 'Load()' on it.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <example>
            Before:
            // Instantiated but unintialized.
            var page = new YourPage(arg1, arg2);
            // Initialized.
            page.Load();
            
            After:
            // Instantiate and initialize in one (albeit long) line.
            var page = pageObjectFactory.PreparePage(new YourPage(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageObjectFactory.GetImportedModules">
            <summary>
            Gets the imported modules. Exists solely to verify the correct
            modules are being imported.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IParameterPageObject">
            <summary>
            Represents a web-page whose url contians parameters.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.IPageObject" />
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IParameterPageObject.GetUriInfo">
            <summary>
            Gets the URI information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IParameterPageObject.Load(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Replaces the variables in the <see cref="P:ApertureLabs.Selenium.PageObjects.IPageObject.Route"/> with
            the parameters and navigates to that url (if not on it already)
            then calls <see cref="M:OpenQA.Selenium.Support.UI.ILoadableComponent.Load"/>.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IStaticPageObject">
            <summary>
            Represents a web-page whose url never changes.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.IPageObject" />
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IStaticPageObject.Load(System.Boolean)">
            <summary>
            Tries to navigate to the IPageObjects Uri before executing
            <c>Load</c>. If the Uri is null and the UriMatcher contains groups
            this will throw an exception.
            </summary>
            <param name="firstNavigateToUrl">if set to <c>true</c> [first navigate to URL].</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IViewModel`1">
            <summary>
            Used for <see cref="T:ApertureLabs.Selenium.PageObjects.IPageObject"/> or <see cref="T:ApertureLabs.Selenium.PageObjects.IPageComponent"/>
            which use a model.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IViewModel`1.ViewModel">
            <summary>
            Retrieves the viewmodel.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.PageComponent">
            <summary>
            Default implementation of IPageComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.PageComponent"/> class.
            </summary>
            <param name="by">The by.</param>
            <param name="driver">The driver.</param>
            <exception cref="T:System.ArgumentNullException">
            by
            or
            driver
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.WrappedDriver">
            <summary>
            The IWebDriver of a component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.WrappedElement">
            <summary>
            The element representing the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.By">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.IsStale">
            <summary>
            Used to check if the component is still valid for use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.PageObject">
            <summary>
            Base class for PageObjects. Default implementation of IPageObject
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.IPageObject" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.#ctor(OpenQA.Selenium.IWebDriver,System.Uri,System.UriTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.PageObject"/> class.
            </summary>
            <param name="driver">The driver.</param>
            <param name="baseUri">The base uri.</param>
            <param name="route">The route.</param>
            <exception cref="T:System.ArgumentNullException">
            driver
            or
            route
            or baseUri
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.PageObject"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.BaseUri">
            <summary>
            Gets the base URI. Used alongside the <see cref="P:ApertureLabs.Selenium.PageObjects.IPageObject.Route" /> to check
            if the current url is valid.
            </summary>
            <value>
            The base URI.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.Route">
            <summary>
            Used to match the Uri of the webpage. Is used to create a Regex
            object to verify the url of the page when calling <c>Load</c>.
            The syntax is identical to that of the RouteAttribute. Used with
            the <see cref="P:ApertureLabs.Selenium.PageObjects.IPageObject.BaseUri" /> property to check if the current url is
            valid.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.Uri">
            <summary>
            Gets the URI. Should be null until
            <see cref="M:OpenQA.Selenium.Support.UI.ILoadableComponent.Load" /> is
            called where it will be set to the Url the
            <see cref="T:OpenQA.Selenium.IWebDriver" />
            is on.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.WindowHandle">
            <summary>
            Gets the window handle the page was originally loaded on.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.WrappedDriver">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebDriver" /> used to find
            this element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Equals(ApertureLabs.Selenium.PageObjects.IPageObject)">
            <summary>
            Equalses the specified page object.
            </summary>
            <param name="pageObject">The page object.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">pageObject</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing
            algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.IsStale">
            <summary>
            Use to determine if a PageObject is still 'valid'.
            </summary>
            <returns></returns>
            <example>
            If there are two page object instances; one for a login page and
            one for the home page, and the driver is on the home page the login
            page instance should return true while the home page instance
            should return true.
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Load">
            <summary>
            Loads the component. Checks to see if the current url matches
            the Route and if not an exception is thrown. If the WrappedDriver
            is an <see cref="T:OpenQA.Selenium.Support.Events.EventFiringWebDriver"/> event listeners will be
            added to the <see cref="E:OpenQA.Selenium.Support.Events.EventFiringWebDriver.Navigated"/> event
            which will call <see cref="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose"/> on this instance.
            
            NOTE:
            If overriding don't forget to either call base.Load() or make sure
            the <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.Uri"/> and the <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.WindowHandle"/> are
            assigned to.
            </summary>
            <returns>
            A reference to this
            <see cref="T:OpenQA.Selenium.Support.UI.ILoadableComponent" />.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            Thrown if this instance has already been loaded.
            </exception>
            <exception cref="T:System.UriFormatException">
            Thrown if the current url doens't match the Route.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.OnValidUrl">
            <summary>
            Checks if the current url matches the <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.BaseUri"/> and the
            <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.Route"/>.
            </summary>
            <returns>
            <c>true</c> if the current url matches this instances
            <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.BaseUri"/> and <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.Route"/>; otherwise
            <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
              <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.PageObjectFactory">
            <summary>
            PageObjectFactory.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObjectFactory.#ctor(System.Collections.Generic.IEnumerable{ApertureLabs.Selenium.PageObjects.IOrderedModule},Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.PageObjectFactory"/> class.
            </summary>
            <param name="modules">The modules.</param>
            <param name="services">
            The services. Make sure a web driver has been registered as
            <c>IWebDriver</c> or else this will throw an Exception.
            </param>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObjectFactory.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.PageObjectFactory"/>
            class.
            </summary>
            <param name="services">The service collection.</param>
            <param name="scanAssemblies">
            Scans all assemblies for page objects and registers them as
            singletons.
            </param>
            <param name="loadModules"></param>
            <param name="ignoredTypesAndModules">
            These types will not be loaded into the service provider. They
            can be types derived from IOrderedModule or IPageIObject.
            </param>
            <exception cref="T:System.ArgumentException">
            Thrown if services doens't have IWebDriver registered.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObjectFactory.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.PageObjectFactory"/>
            class. Uses reflection to create the service provider. All
            IPageObjects will be registered and then IOrderedModules will be
            registered.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObjectFactory.PreparePage``1">
            <summary>
            Essentially just calls 'Load()' on the page object (which is
            constructed with the service provider) and returns it.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <example>
            Before:
            // Instantiated but unintialized.
            var page = new YourPage(arg1, arg2);
            // Initialized.
            page.Load();
            
            After:
            // Instantiate and initialize in one (albeit long) line.
            var page = pageObjectFactory.PreparePage(new YourPage(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObjectFactory.PrepareComponent``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page component and returns
            it. This is useful for initializing a component in one line.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageComponent"></param>
            <returns></returns>
            <example>
            Before:
            // Uninitialized
            var component = new YourComponent(arg1, arg2);
            // Initialized
            component.Load();
            
            After:
            // Instantiate and initialize in one (ableit long) line.
            var initializedcomponent = yourPageObjectFactory
                .PrepareComponent(new YourComponent(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObjectFactory.GetImportedModules">
            <summary>
            Gets the imported modules. Exists solely to check if the correct
            modules are being imported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObjectFactory.LoadAssemblies">
            <summary>
            This is used as a workaround for assemblies not loading until one
            of their types are referenced.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.ParameterPageObject">
            <summary>
            A PageObject whose url has route parameters.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.IParameterPageObject" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.ParameterPageObject.#ctor(OpenQA.Selenium.IWebDriver,System.Uri,System.UriTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.ParameterPageObject"/> class.
            </summary>
            <param name="driver">The driver.</param>
            <param name="baseUri">The base uri.</param>
            <param name="route">The route.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.ParameterPageObject.GetUriInfo">
            <summary>
            Gets the URI information.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Need to call Load first.</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.ParameterPageObject.Load(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Replaces the variables in the <see cref="P:ApertureLabs.Selenium.PageObjects.IPageObject.Route" /> with
            the parameters and navigates to that url (if not on it already)
            then calls <see cref="M:OpenQA.Selenium.Support.UI.ILoadableComponent.Load" />.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if the <see cref="T:System.Collections.Generic.IDictionary`2"/> argument is
            null.
            </exception>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.RouteParameter">
            <summary>
            Represents a route parameter. Format should adhere to the
            RouteAttribute format.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.RouteParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.RouteParameter"/> class.
            </summary>
            <param name="parameter">The parameter.</param>
            <exception cref="T:System.ArgumentException">
            Failed to identify the name of the parameter.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.RouteParameter.IsOptional">
            <summary>
            Gets a value indicating whether this instance is optional.
            </summary>
            <value>
              <c>true</c> if this instance is optional; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.RouteParameter.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.RouteParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.StaticPageObject">
            <summary>
            Default implementation of IPageObject. Used to represent web-pages
            which have urls that don't have any variables in them. Use the
            <see cref="T:ApertureLabs.Selenium.PageObjects.ParameterPageObject" /> class for page objects whose urls
            do have parameters.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.StaticPageObject.#ctor(OpenQA.Selenium.IWebDriver,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjects.StaticPageObject"/>
            class.
            </summary>
            <param name="driver">The driver.</param>
            <param name="route">The route.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.StaticPageObject.Load(System.Boolean)">
            <summary>
            Tries to navigate to the IPageObjects Uri before executing
            <c>Load</c>. If the Uri is null and the UriMatcher contains groups
            this will throw an exception.
            </summary>
            <param name="firstNavigateToUrl">if set to <c>true</c> [first navigate to URL].</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.StaticPageObject.Load">
            <summary>
            Loads the component. Checks to see if the current url matches
            the Route and if not an exception is thrown. If the WrappedDriver
            is an <see cref="T:OpenQA.Selenium.Support.Events.EventFiringWebDriver" /> event listeners will be
            added to the <see cref="E:OpenQA.Selenium.Support.Events.EventFiringWebDriver.Navigated" /> event
            which will call <see cref="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose" /> on this instance.
            NOTE:
            If overriding don't forget to either call base.Load() or make sure
            the <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.Uri" /> and the <see cref="P:ApertureLabs.Selenium.PageObjects.PageObject.WindowHandle" /> are
            assigned to.
            </summary>
            <returns>
            A reference to this
            <see cref="T:OpenQA.Selenium.Support.UI.ILoadableComponent" />.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.aperturelabslogoonly">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.createPointAtCurrentMousePosition">
            <summary>
              Looks up a localized string similar to function handler(evt) {
               document.removeEventListener(&apos;mousemove&apos;, handler);
               var el = document.createElement(&apos;div&apos;);
               el.style.width = &apos;50px&apos;;
               el.style.height = &apos;50px&apos;;
               el.style.border = &apos;5px solid red&apos;;
               el.style.borderRadius = &apos;50%&apos;;
               el.style.position = &apos;absolute&apos;;
               el.style.left = evt.pageX - 25 + &apos;px&apos;;
               el.style.top = evt.pageY - 25 + &apos;px&apos;;
               document
                   .getElementsByTagName(&apos;body&apos;)[0]
                   .appendChild(el);
               {resolve}(JSON.stringify({ X: evt.pag [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.jsonFormatterCallback">
             <summary>
               Looks up a localized string similar to function jsonFormatter (key, value) {
            
                // Ignore null/undefined values.
                if (value === null || value === undefined) {
                    return undefined;
                }
            
                var typeOfValue = typeof value;
            
                // Only include strings, numbers, and booleans.
                if (typeOfValue === &quot;string&quot;
                    || typeOfValue === &quot;number&quot;
                    || typeOfValue === &quot;boolean&quot;) {
                    return value;
                } else {
                    return undefined;
                }
            }.
             </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.tinyMCEUtilities">
             <summary>
               Looks up a localized string similar to var tinyMCEUtilities = (function() {
            	var obj = {};
            
            	/**
            	 * Goes thru each editor in tinyMCE.editors and call matches each editors
            	 * getElement() against the passed in element.
            	 * @param {Element} element - The element used to match against
            	 * Editor.getElement().
            	 * @returns {Editor} The tinyMCE.Editor.
            	 */
            	obj.getEditor = function (element) {
            		if (element === null || element === undefined) {
            			throw new Error(&apos;Argument element cannot be null.&apos;);
            		}
            
            		var editor = null;
            
            		for [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.waitForEvent">
             <summary>
               Looks up a localized string similar to var eventName = arguments[0];
            var callback = arguments[arguments.length - 1];
            
            if (eventName == null || typeof eventName !== &quot;string&quot;) {
                throw new Error(&quot;The eventName was null.&quot;);
            } else if (callback == null) {
                throw new Error(&quot;The callback was null.&quot;);
            }
            
            function handler(evt) {
                document.removeEventListener(eventName, handler);
            
                var json = JSON.stringify(
                    evt,
                    function (key, value) {
            
                        // Ignore null/undefined values.
                        if (value === nu [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ApertureLabs.Selenium.Properties.Resources.waitForUserSignal" -->
        <member name="T:ApertureLabs.Selenium.TabHelper">
            <summary>
            Used for switching between tabs.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.TabHelper.WrappedDriver">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.GetIndexOfCurrentTab">
            <summary>
            Returns the index of the current tab in relation of the other
            tabs on the window.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.GetTabHandles">
            <summary>
            Identical to <see cref="P:OpenQA.Selenium.IWebDriver.WindowHandles"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.CreateNewTab(System.Boolean)">
            <summary>
            Opens a new tab in the window.
            </summary>
            <param name="switchToTab"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.SwitchToNextTab">
            <summary>
            Switches to next tab.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.SwitchToPreviousTab">
            <summary>
            Switches to previous tab.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.SwitchToTab(System.String)">
            <summary>
            Switches to tab.
            </summary>
            <param name="windowHandle">The window handle.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.TextHelper">
            <summary>
            Used for parsing information from the text of an element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.InnerText">
            <summary>
            Retrieves and trims the inner text of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.OuterText">
            <summary>
            Retrieves and trims the outer text of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.InnerHtml">
            <summary>
            Returns the trimmed inner html of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.OuterHtml">
            <summary>
            Returns the trimmed outer html of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.WrappedDriver">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebDriver" /> used to find this element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.WrappedElement">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebElement" /> wrapped by this object.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractInteger(System.Boolean)">
            <summary>
            Extracts a number from the Text of the element. If the text
            of the element is "Some text...-34.32...more text" it will
            return -34. It completely ignores the decimal unless the 
            optional parameter roundUp is true.
            </summary>
            <param name="roundUp"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractIntegers(System.Boolean)">
            <summary>
            Returns all numbers in the elements inner text as integers.
            </summary>
            <param name="roundUp"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractPrice">
            <summary>
            Tries to extract number from the text of the element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDouble">
            <summary>
            Extracts a number from the Text of the element. If the text
            of the element is "Some text...-34.32...more text" it will
            return -34.32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDoubles">
            <summary>
            Returns all numbers in the inner text as doubles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDateTime(System.String)">
            <summary>
            Extracts a Date from the text.
            </summary>
            <param name="format">
            Optional format the date is in (IE: "MMMM").
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractLastFourCCDigits">
            <summary>
            Fetches the last four digits from a partial credit card number 
            in a string. Ex: (blah x4444 blah blah) text will return 4444.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.HubStatus">
            <summary>
            Implementation of IHubStatus.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.IHubStatus" />
        </member>
        <member name="P:ApertureLabs.Selenium.HubStatus.Ready">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ApertureLabs.Selenium.IHubStatus" /> is ready.
            </summary>
            <value>
              <c>true</c> if ready; otherwise, <c>false</c>.
            </value>
            <see cref="!:https://www.w3.org/TR/webdriver/#dfn-readiness-state" />
        </member>
        <member name="P:ApertureLabs.Selenium.HubStatus.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.IHubStatus">
            <summary>
            Status returns information about whether a remote end is in a state
            in which it can create new sessions, but may additionally include arbitrary meta information that is specific to the implementation.
            </summary>
            <see cref="!:https://www.w3.org/TR/webdriver/#dfn-status"/>
        </member>
        <member name="P:ApertureLabs.Selenium.IHubStatus.Ready">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ApertureLabs.Selenium.IHubStatus"/> is ready.
            </summary>
            <value>
              <c>true</c> if ready; otherwise, <c>false</c>.
            </value>
            <see cref="!:https://www.w3.org/TR/webdriver/#dfn-readiness-state"/>
        </member>
        <member name="P:ApertureLabs.Selenium.IHubStatus.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.ISeleniumSession">
            <summary>
            Represents a selenium browser session.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.ISeleniumSession.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumHub">
            <summary>
            SeleniumHub.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumHub"/> class.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.#ctor(ApertureLabs.Selenium.SeleniumHubOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumHub"/> class.
            </summary>
            <param name="seleniumHubOptions">The selenium hub options.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHub.Uri">
            <summary>
            Gets the URI.
            </summary>
            <value>
            The URI.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHub.NodeRegisterUrl">
            <summary>
            Gets the node register URL.
            </summary>
            <value>
            The node register URL.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.RegisterNode(ApertureLabs.Selenium.SeleniumNodeOptions)">
            <summary>
            Registers the node. Will over-write the
            <c>SeleniumNodeOptions.Hub</c> property with the hubs
            'register node' url.
            </summary>
            <param name="seleniumNodeOptions">The selenium node.</param>
            <returns>The created selenium node.</returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.UnregisterNode(ApertureLabs.Selenium.SeleniumNode)">
            <summary>
            Uns the register node.
            </summary>
            <param name="seleniumNode">The selenium node.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.GetRegisteredNodes">
            <summary>
            Gets the registered nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.GetSessions">
            <summary>
            Gets the sessions.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.GetStatus">
            <summary>
            Gets the status.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.StopProcess">
            <summary>
            Shuts down the hub and all registered nodes.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.StartProcess">
            <summary>
            Starts this instance.
            </summary>
            <exception cref="T:System.Exception">Failed to start the hub process.</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.GetCommandLineArguments">
            <summary>
            Creates the command line arguments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHub.GetLogs">
            <summary>
            Gets the logs.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumHubOptions">
            <summary>
            Options for the selenium hub.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumHubOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumHubOptions"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHubOptions.AlwaysCreateHub">
            <summary>
            Gets or sets the always create hub.
            </summary>
            <value>
            The always create hub.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHubOptions.Host">
            <summary>
            IP or hostname : usually determined automatically. Most commonly
            useful in exotic network configurations(e.g.network with VPN).
            </summary>
            <value>
            The host.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHubOptions.PortNumber">
            <summary>
            Gets or sets the port number.
            </summary>
            <value>
            The port number.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHubOptions.ShutDownHubIfRemote">
            <summary>
            Gets or sets whether to shut down the hub if it's a remote process
            when the hub is disposed.
            </summary>
            <value>
            The shut down hub if remote.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHubOptions.UseLocalHubIfAlreadyRunning">
            <summary>
            Gets or sets the use local hub if already running.
            </summary>
            <value>
            The use local hub if already running.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumHubOptions.Servlets">
            <summary>
            Gets or sets the servlets.
            </summary>
            <value>
            The servlets.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumLogEntry">
            <summary>
            An entry outputted by the selenium-server-standalone.jar.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumLogEntry.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumLogEntry.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumLogEntry.IsException">
            <summary>
            Gets or sets a value indicating whether this instance is exception.
            </summary>
            <value>
              <c>true</c> if this instance is exception; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumLogEntry.LogType">
            <summary>
            Gets or sets the type of the log.
            </summary>
            <value>
            The type of the log.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumLogEntry.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumLogEntry.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="logEntry">The log entry.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumLogEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumLogEntry.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumLogEntry.op_Equality(ApertureLabs.Selenium.SeleniumLogEntry,ApertureLabs.Selenium.SeleniumLogEntry)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumLogEntry.op_Inequality(ApertureLabs.Selenium.SeleniumLogEntry,ApertureLabs.Selenium.SeleniumLogEntry)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumLogEntry.Equals(ApertureLabs.Selenium.SeleniumLogEntry)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other">other</paramref> parameter; otherwise, false.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumNode">
            <summary>
            Used for creating selenium nodes.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumNode"/> class.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumNode.#ctor(ApertureLabs.Selenium.SeleniumNodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumNode"/> class.
            </summary>
            <param name="seleniumNodeOptions">The selenium node options.</param>
            <exception cref="T:System.ArgumentNullException">seleniumNodeOptions</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumNode.StartProcess">
            <summary>
            Starts the node process.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumNode.StopProcess">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumNode.GetLogs">
            <summary>
            Gets the logs.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumNode.GetCommandLineArguments">
            <summary>
            Creates the command line arguments.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumNodeOptions">
            <summary>
            Options for configuring a <c>SeleniumNode</c>.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumNodeOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumNodeOptions"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.BrowserTimeout">
            <summary>
            In seconds : number of seconds a browser session is allowed to
            hang while a WebDriver command is running
            (example: driver.get(url)). If the timeout is reached while a
            WebDriver command is still processing, the session will
            quit.Minimum value is 60. An unspecified, zero, or negative value
            means wait indefinitely.If a node does not specify it, the hub
            value will be used.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.Capabilities">
            <summary>
            Comma separated Capability values.
            </summary>
            <example>
            Example: -capabilities
            browserName=firefox,platform=linux -capabilities
            browserName = chrome, platform = linux
            </example>
            <see cref="!:https://github.com/SeleniumHQ/selenium/blob/a61cc22fd053ea827cf39aa4065ae4912bb6af2a/java/server/src/org/openqa/grid/common/defaults/DefaultNodeWebDriver.json"/>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.CleanUpCycle">
            <summary>
            In ms : specifies how often the hub will poll running proxies
            for timed-out (i.e.hung) threads.Must also specify "timeout" option
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.DownPollingLimit">
            <summary>
            Node is marked as "down" if the node hasn't responded after the
            number of checks specified in [downPollingLimit].
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.EnablePlatformVerification">
            <summary>
            Whether or not to drop capabilities that does not belong to the
            current platform family.Defaults to true.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.Host">
            <summary>
            IP or hostname : usually determined automatically. Most commonly
            useful in exotic network configurations(e.g.network with VPN)
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.Hub">
            <summary>
            The url that will be used to post the registration request. This
            option takes precedence over -hubHost and -hubPort options.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.HubHost">
            <summary>
            IP or hostname : the host address of the hub we're attempting to
            register with. If -hub is specified the -hubHost is determined from
            it.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.HubPort">
            <summary>
            The port of the hub we're attempting to register with. If -hub is
            specified the -hubPort is determined from it.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.Id">
            <summary>
            Optional unique identifier of the remoteHost, when not specified.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.MaxSession">
            <summary>
            Max number of tests that can run at the same time on the node,
            irrespective of the browser used
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.NodeConfig">
            <summary>
            Filename : JSON configuration file for the node. Overrides default
            values
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.NodePolling">
            <summary>
            In ms : specifies how often the hub will poll to see if the node is
            still responding.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.NodeStatusCheckTimeout">
            <summary>
            In ms : connection/socket timeout, used for node "nodePolling"
            check.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.Port">
            <summary>
            The port number the server will use.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.Proxy">
            <summary>
            The class used to represent the node proxy. Default is
            [org.openqa.grid.selenium.proxy.DefaultRemoteProxy].
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.Register">
            <summary>
            If specified, node will attempt to re-register itself automatically
            with its known grid hub if the hub becomes unavailable.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.RegisterCycle">
            <summary>
            In ms : specifies how often the node will try to register itself
            again. Allows administrator to restart the hub without restarting
            (or risk orphaning) registered nodes. Must be specified with the
            "-register" option.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.RemoteHost">
            <summary>
            URL: Address to report to the hub. Used to override default
            (http://&lt;host&gt;:&lt;port&gt;).
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.SessionTimeout">
            <summary>
            In seconds : Specifies the timeout before the server automatically
            kills a session that hasn't had any activity in the last X seconds.
            The test slot will then be released for another test to use. This
            is typically used to take care of client crashes. For grid hub/node
            roles, cleanUpCycle must also be set. If a node does not specify
            it, the hub value will be used.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumNodeOptions.UnregisterIfStillDownAfter">
            <summary>
            In ms : if the node remains down for more than
            [unregisterIfStillDownAfter] ms, it will stop attempting to
            re-register from the hub.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumServerStandAloneManager">
            <summary>
            Base class which adds protected methods for using the
            selenium-server-standalone{x}.{y}.{z}.jar.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumServerStandAloneManager"/> class.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumServerStandAloneManager"/> class.
            </summary>
            <param name="onlineVersionList">The online version list.</param>
            <param name="workingDirectory">The working directory.</param>
            <exception cref="T:System.ArgumentNullException">
            onlineVersionList
            or
            workingDirectory
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.GetOnlineVersions">
            <summary>
            Retrieves all online versions of the standalone jar file. They're
            ordered the newest version as first and the oldest as last.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.GetLocalVersions">
            <summary>
            Retrieves all local versions of the standalone jar file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.InstallVersion(System.Nullable{System.ValueTuple{System.Int32,System.Int32,System.Int32}})">
            <summary>
            Installs the version of the standalone jar file.
            </summary>
            <param name="version">
            The version to install. If null then the latest version will be
            installed.
            </param>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.GetLatestLocalStandalone">
            <summary>
            Gets the latest local standalone version.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.GetLocalFileNameOfVersion(System.Nullable{System.ValueTuple{System.Int32,System.Int32,System.Int32}})">
            <summary>
            Gets the local file name of version.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandAloneManager.HasLocalStandaloneJarFile">
            <summary>
            Determines whether there are any standalone jar files available
            locally.
            </summary>
            <returns>
              <c>true</c> if [has local standalone jar file]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumServerStandaloneOptions">
            <summary>
            Common options for both the hub and node options.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumServerStandaloneOptions.Log">
            <summary>
            Gets or sets the filename of the log.
            </summary>
            <value>
            The log.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumServerStandaloneOptions.JarFileName">
            <summary>
            Gets or sets the name of the jar file which will be used to
            execute the file.
            </summary>
            <value>
            The name of the jar file.
            </value>
        </member>
        <member name="T:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1">
            <summary>
            Base class for the <c>SeleniumHub</c> and <c>SeleniumNode</c> classes.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.Options">
            <summary>
            The options.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.WrappedProcess">
            <summary>
            The wrapped process.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.IsRunning">
            <summary>
            Determines whether this instance is running.
            </summary>
            <returns>
              <c>true</c> if this instance is running; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.GetLogs">
            <summary>
            Gets the logs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.StartProcess">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.StopProcess">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.GetCommandLineArguments">
            <summary>
            Creates the command line arguments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.AddCommand``1(System.Text.StringBuilder,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,System.String})">
            <summary>
            Adds the command.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="commandLineArgs">The command line arguments.</param>
            <param name="property">The property.</param>
            <param name="customFormatter">The custom formatter.</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.AddCommand(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Adds the command.
            </summary>
            <param name="commandLineArgs">The command line arguments.</param>
            <param name="commandName">Name of the command.</param>
            <param name="commandValue">The command value.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.IsLocalPortBusy(System.Int32,System.TimeSpan)">
            <summary>
            Determines whether the local port has a tcp listener. If the port
            less than or equal to zero false is returned.
            </summary>
            <param name="port">The port.</param>
            <param name="timeout">The timeout.</param>
            <returns>
              <c>true</c> if [is local port busy] [the specified port]; otherwise, <c>false</c>.
            </returns>
            <see cref="!:https://stackoverflow.com/a/38258154"/>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.GetFreePort">
            <summary>
            Gets the free port.
            </summary>
            <returns></returns>
            <see cref="!:https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.tcplistener.localendpoint?view=netstandard-2.0#remarks"/>
            <see cref="!:https://stackoverflow.com/a/150974"/>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.ExtractPort(System.String)">
            <summary>
            Extracts the port. Returns null if the url is null or doesn't
            contain a port.
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.GetLastLine">
            <summary>
            Gets the last line of a file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.SeleniumServerStandaloneWrapper`1.WaitForFile(System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Blocks until the file is not locked any more.
            </summary>
            <param name="fullPath"></param>
            <param name="poll"></param>
            <param name="timeout"></param>
            <exception cref="T:System.TimeoutException"></exception>
            <see cref="!:https://stackoverflow.com/a/50800"/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebDriverFactory">
            <summary>
            Responsible for creation and disposing of the various webdrivers.
            Searches the current directory for the location of the drivers.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.WebDriverFactory"/>
            class. NOTE: This will use STANDALONE mode. It won't create a hub
            and node. This generally is quicker for running tests sequentially
            but slower for parallel stuff.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.#ctor(ApertureLabs.Selenium.SeleniumHubOptions,ApertureLabs.Selenium.SeleniumNodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.WebDriverFactory"/>
            class. NOTE: This will create a hub and node process for better
            performance when running tests in parallel.
            </summary>
            <param name="seleniumHubOptions">The selenium hub options.</param>
            <param name="seleniumNodeOptions">The selenium node options.</param>
            <exception cref="T:System.ArgumentNullException">
            seleniumHubOptions
            or
            seleniumNodeOptions
            </exception>
            <exception cref="T:System.Exception">
            Failed to start the hub process.
            or
            Failed to start the node process.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Finalize">
            <summary>
            Dtor
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.CreateDriver(ApertureLabs.Selenium.MajorWebDriver,System.Drawing.Size,System.Boolean)">
            <summary>
            Creates a new WebDriver instance for one of the major web
            browsers. Will wrap the driver in an
            <see cref="T:OpenQA.Selenium.Support.Events.EventFiringWebDriver"/>.
            </summary>
            <param name="majorWebDriver"></param>
            <param name="windowSize"></param>
            <param name="track">
            If false, will not dispose the driver when the factory is
            disposed.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.TrackDriver(OpenQA.Selenium.IWebDriver)">
            <summary>
            Allows tracking of an externally created webdriver.
            </summary>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.BaseElement">
            <summary>
            Base class for element wrappers.
            </summary>
            <seealso cref="T:OpenQA.Selenium.Internal.IWrapsElement" />
            <seealso cref="T:OpenQA.Selenium.IWebElement" />
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.WebElements.BaseElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.WrappedElement">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebElement" /> wrapped by this object.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.TagName">
            <summary>
            Gets the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.TagName" /> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specified by the HTML markup &lt;input name="foo" /&gt;.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Text">
            <summary>
            Gets the innerText of this element, without any leading or trailing whitespace,
            and with other whitespace collapsed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.Enabled" /> property will generally
            return <see langword="true" /> for everything except explicitly disabled input elements.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>
            This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Location">
            <summary>
            Gets a <see cref="T:System.Drawing.Point" /> object containing the coordinates of the upper-left corner
            of this element relative to the upper-left corner of the page.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Size">
            <summary>
            Gets a <see cref="P:OpenQA.Selenium.IWebElement.Size" /> object containing the height and width of this element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.Displayed" /> property avoids the problem
            of having to parse an element's "style" attribute to determine
            visibility of an element.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>
            If this element is a text entry element, the <see cref="M:OpenQA.Selenium.IWebElement.Clear" />
            method will clear the value. It has no effect on other elements. Text entry elements
            are defined as elements with INPUT or TEXTAREA tags.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Click">
            <summary>
            Clicks this element.
            </summary>
            <remarks>
            <para>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.IWebElement.Click" />
            method will attempt to block until the page has loaded. After calling the
            <see cref="M:OpenQA.Selenium.IWebElement.Click" /> method, you should discard all references to this
            element unless you know that the element and the page will still be present.
            Otherwise, any further operations performed on this element will have an undefined.
            behavior.
            </para>
            <para>
            If this element is not clickable, then this operation is ignored. This allows you to
            simulate a users to accidentally missing the target when clicking.
            </para>
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>
            The first matching <see cref="T:OpenQA.Selenium.IWebElement" /> on the current context.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>
            A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>
            The attribute's current value. Returns a <see langword="null" /> if the
            value is not set.
            </returns>
            <remarks>
            The <see cref="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)" /> method will return the current value
            of the attribute, even if the value has been modified after the page has been
            loaded. Note that the value of the following attributes will be returned even if
            there is no explicit attribute on the element:
            <list type="table"><listheader><term>Attribute name</term><term>Value returned if not explicitly specified</term><term>Valid element types</term></listheader><item><description>checked</description><description>checked</description><description>Check Box</description></item><item><description>selected</description><description>selected</description><description>Options in Select elements</description></item><item><description>disabled</description><description>disabled</description><description>Input and other UI elements</description></item></list>
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetCssValue(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>
            The value of the specified CSS property.
            </returns>
            <remarks>
            The value returned by the <see cref="M:OpenQA.Selenium.IWebElement.GetCssValue(System.String)" />
            method is likely to be unpredictable in a cross-browser environment.
            Color values should be returned as hex strings. For example, a
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetProperty(System.String)">
            <summary>
            Gets the value of a JavaScript property of this element.
            </summary>
            <param name="propertyName">The name JavaScript the JavaScript property to get the value of.</param>
            <returns>
            The JavaScript property's current value. Returns a <see langword="null" /> if the
            value is not set or the property does not exist.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>
            The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in
            <see cref="T:OpenQA.Selenium.Keys" />.
            </remarks>
            <seealso cref="T:OpenQA.Selenium.Keys" />
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>
            If this current element is a form, or an element within a form,
            then this will be submitted to the web server. If this causes the current
            page to change, then this method will block until the new page is loaded.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement">
            <summary>
            CanvasElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Draw(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a line from a to b.
            </summary>
            <param name="a">
            Origin is the top left corner of the element.
            </param>
            <param name="b">
            Origin is the top left corner of the element.
            </param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.DescriptionList.DescriptionListElement">
            <summary>
            DescriptionListElement.
            </summary>
            <seealso cref="T:OpenQA.Selenium.IWebElement" />
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.DescriptionList.DescriptionListElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.WebElements.DescriptionList.DescriptionListElement"/> class.
            </summary>
            <param name="element">The element.</param>
            <exception cref="T:OpenQA.Selenium.Support.UI.UnexpectedTagNameException">dl</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.DescriptionList.DescriptionListElement.GetDescriptions">
            <summary>
            Returns a list of all dt-elements with their corresponding
            dd-elements.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement">
            <summary>
            Wrapper around the IWebElement for IFrames.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.#ctor(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="driver">The driver.</param>
            <exception cref="T:OpenQA.Selenium.Support.UI.UnexpectedTagNameException">
            Thrown if the tagname of the element isn't 'iframe'
            (case-insensitive).
            </exception>
            <exception cref="T:System.ArgumentNullException">driver</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.InFrameAction(System.Action)">
            <summary>
            Executes an action in the context of the IFrame.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.InFrameFunction``1(System.Func{``0})">
            <summary>
            Executes a function in the context of the IFrame.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.EnterIframe">
            <summary>
            Enters the iframe only if not already entered.
            Equal to IWebDriver.SwitchTo().Frame(iframeElement).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.ExitIframe">
            <summary>
            Exits the iframe only if previously entered.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.CheckboxElement">
            <summary>
            Wrapper around the InputElement providing extra functionality for
            checkboxes.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.CheckboxElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">
            Thrown when the element doens't have the type of checkbox.
            </exception>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.FileElement">
            <summary>
            Input element with the type set to file.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.String)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="filepath"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.IO.FileInfo)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.Uri)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement">
            <summary>
            Represents an INPUT element with a type of text that has the list.
            TODO: Possibly rename this class to 'DataListElement'.
            attribute set.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">
            Throws if the element doens't have a list attribute on it.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.Options">
            <summary>
            Retrieves all possible options in the datalist element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByIndex(System.Int32)">
            <summary>
            Sets the value by the index of the option. If the option has no
            value then its text is used.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByText(System.String,System.Boolean)">
            <summary>
            Finds the option matching the text and sets the input value to it.
            </summary>
            <param name="text"></param>
            <param name="partialMatch"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Sets the value based on the value of the option element.
            </summary>
            <param name="optionElement">Must be an option element.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.InputElement">
            <summary>
            Wrapper around an IWebElement to provide extra functionality for input
            elements.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Checks that the element has the correct tagname.
            </summary>
            <param name="element"></param>
            <exception cref="T:System.InvalidCastException">
            Thrown when the elements tagname isn't input.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Type">
            <summary>
            Returns the type of the input element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetValue``1">
            <summary>
            Retrieves the value and tries to cast it to the type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetValue``1(System.Func{System.String,``0})">
            <summary>
            Returns and converts the value by passing in the conversion
            function.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.SetValue``1(``0)">
            <summary>
            Sets the 'value' of the input element.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase">
            <summary>
            Base class for CheckboxElement and RadioElement. Internal use only.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.IsChecked">
            <summary>
            Returns true if the element is checked and false if not.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.Check(System.Boolean)">
            <summary>
            Will assert that the element is checked or unchecked depending on
            the argument. NOTE: This will 'click' the element to toggle the
            state so if it's not clickable this will throw an exception.
            </summary>
            <param name="checked"></param>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException"></exception>
            <exception cref="T:OpenQA.Selenium.ElementNotInteractableException"></exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.SetValue``1(``0)">
            <summary>
            Sets the value of the property checked.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.GetValue``1">
            <summary>
            Returns the value or the property 'checked'.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioElement">
            <summary>
            RadioElement
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElement.GetGroup">
            <summary>
            Returns the radio group name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet">
            <summary>
            RadioElementSet
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.#ctor(System.Collections.Generic.IEnumerable{OpenQA.Selenium.IWebElement})">
            <summary>
            Checks that each element is a radio button and shares the same name.
            </summary>
            <param name="radioButtons"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectedOption">
            <summary>
            Gets the selected item or returns null if nothing is selected.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectByValue(System.String)">
            <summary>
            Selects an option by its value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectByIndex(System.Int32)">
            <summary>
            Selects an option by index, the order in which they appear in the
            html.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Meta.MetaElement">
            <summary>
            MetaElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Content">
            <summary>
            Retrieves the value of the 'content' attribute.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Name">
            <summary>
            Returns the value of the 'name' attribute.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Submit">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Option.OptionElement">
            <summary>
            OptionElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.WebElements.Option.OptionElement"/> class.
            </summary>
            <param name="element">The element.</param>
            <exception cref="T:OpenQA.Selenium.Support.UI.UnexpectedTagNameException">Expected tagname to be 'option'.</exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.TagName">
            <summary>
            Gets the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.TagName" /> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specified by the HTML markup &lt;input name="foo" /&gt;.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Text">
            <summary>
            Gets the innerText of this element, without any leading or trailing whitespace,
            and with other whitespace collapsed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.Enabled" /> property will generally
            return <see langword="true" /> for everything except explicitly disabled input elements.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>
            This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Location">
            <summary>
            Gets a <see cref="T:System.Drawing.Point" /> object containing the coordinates of the upper-left corner
            of this element relative to the upper-left corner of the page.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Size">
            <summary>
            Gets a <see cref="P:OpenQA.Selenium.IWebElement.Size" /> object containing the height and width of this element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.Displayed" /> property avoids the problem
            of having to parse an element's "style" attribute to determine
            visibility of an element.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>
            If this element is a text entry element, the <see cref="M:OpenQA.Selenium.IWebElement.Clear" />
            method will clear the value. It has no effect on other elements. Text entry elements
            are defined as elements with INPUT or TEXTAREA tags.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Click">
            <summary>
            Clicks this element.
            </summary>
            <remarks>
            <para>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.IWebElement.Click" />
            method will attempt to block until the page has loaded. After calling the
            <see cref="M:OpenQA.Selenium.IWebElement.Click" /> method, you should discard all references to this
            element unless you know that the element and the page will still be present.
            Otherwise, any further operations performed on this element will have an undefined.
            behavior.
            </para>
            <para>
            If this element is not clickable, then this operation is ignored. This allows you to
            simulate a users to accidentally missing the target when clicking.
            </para>
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>
            The first matching <see cref="T:OpenQA.Selenium.IWebElement" /> on the current context.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>
            A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>
            The attribute's current value. Returns a <see langword="null" /> if the
            value is not set.
            </returns>
            <remarks>
            The <see cref="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)" /> method will return the current value
            of the attribute, even if the value has been modified after the page has been
            loaded. Note that the value of the following attributes will be returned even if
            there is no explicit attribute on the element:
            <list type="table"><listheader><term>Attribute name</term><term>Value returned if not explicitly specified</term><term>Valid element types</term></listheader><item><description>checked</description><description>checked</description><description>Check Box</description></item><item><description>selected</description><description>selected</description><description>Options in Select elements</description></item><item><description>disabled</description><description>disabled</description><description>Input and other UI elements</description></item></list>
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetCssValue(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>
            The value of the specified CSS property.
            </returns>
            <remarks>
            The value returned by the <see cref="M:OpenQA.Selenium.IWebElement.GetCssValue(System.String)" />
            method is likely to be unpredictable in a cross-browser environment.
            Color values should be returned as hex strings. For example, a
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetProperty(System.String)">
            <summary>
            Gets the value of a JavaScript property of this element.
            </summary>
            <param name="propertyName">The name JavaScript the JavaScript property to get the value of.</param>
            <returns>
            The JavaScript property's current value. Returns a <see langword="null" /> if the
            value is not set or the property does not exist.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>
            The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in
            <see cref="T:OpenQA.Selenium.Keys" />.
            </remarks>
            <seealso cref="T:OpenQA.Selenium.Keys" />
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>
            If this current element is a form, or an element within a form,
            then this will be submitted to the web server. If this causes the current
            page to change, then this method will block until the new page is loaded.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetValue">
            <summary>
            Returns the value via attribute or if not present returns the text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WindowSize">
            <summary>
            Contains sizes for windows.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.WindowSize.DefaultDesktop">
            <summary>
            Default size for desktop (1001, 999).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.WindowSize.DefaultTablet">
            <summary>
             Default size for tablet (768, 999).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.WindowSize.DefaultMobile">
            <summary>
            Default size for mobile (120, 999).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WindowSize.RandomSize(System.Int32,System.Int32)">
            <summary>
            Generates a random size in the given range. The height is always
            999.
            </summary>
            <param name="minWidth"></param>
            <param name="maxWidth"></param>
            <returns></returns>
        </member>
        <member name="T:DefaultServletNames">
            <summary>
            Contains the default servlet names. Meant to be used with the
            <c>SeleniumHubOptions.Servlets</c>.
            </summary>
        </member>
        <member name="P:DefaultServletNames.LifeCycleServlet">
            <summary>
            Gets the life cycle servlet.
            </summary>
            <value>
            The life cycle servlet.
            </value>
        </member>
        <member name="P:DefaultServletNames.ResourceServlet">
            <summary>
            Gets the resource servlet.
            </summary>
            <value>
            The resource servlet.
            </value>
        </member>
        <member name="P:DefaultServletNames.ConsoleServlet">
            <summary>
            Gets the console servlet.
            </summary>
            <value>
            The console servlet.
            </value>
        </member>
        <member name="P:DefaultServletNames.Grid1HeartbeatServlet">
            <summary>
            Gets the grid1 heartbeat servlet.
            </summary>
            <value>
            The grid1 heartbeat servlet.
            </value>
        </member>
    </members>
</doc>
