<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApertureLabs.Selenium</name>
    </assembly>
    <members>
        <member name="T:ApertureLabs.Selenium.ByElement">
            <summary>
            Will always ONLY return the stored element.
            </summary>
            <seealso cref="T:OpenQA.Selenium.By" />
        </member>
        <member name="M:ApertureLabs.Selenium.ByElement.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            Returns the stored element.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext" /> object to use to search for the elements.</param>
            <returns>
            The first matching <see cref="T:OpenQA.Selenium.IWebElement" /> on the current context.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByElement.FindElements(OpenQA.Selenium.ISearchContext)">
            <summary>
            Returns the stored element.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext" /> object to use to search for the elements.</param>
            <returns>
            A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByElement.FromElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Static ctor.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.ByScoped">
            <summary>
            Similar to the normal <code>OpenQA.Selenium.By</code> class but will
            always search from the passed in searchContext.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.ByScoped.#ctor(OpenQA.Selenium.ISearchContext,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Ctor. To create an instance use the static method FromScoped(...).
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.ByScoped.#ctor(OpenQA.Selenium.By,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Ctor. Instead fo passing in an instance of ISearchContext, pass in a
            selector that will fetch the ISearchContext and then the subSelector
            will search for the child elements.
            </summary>
            <param name="contextSelector"></param>
            <param name="subSelectors"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.ByScoped.FindElement(OpenQA.Selenium.ISearchContext)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.ByScoped.FindElements(OpenQA.Selenium.ISearchContext)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.ByScoped.FromScope(OpenQA.Selenium.ISearchContext,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Creates a 'scoped' selector which will always use the passed in
            search context instead of what the current context is for the
            driver.
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByScoped.FromScope(OpenQA.Selenium.By,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Creates a 'scoped' selector which will first find all elements
            that match the <code>searchContext</code> selector and then keep
            applying the <code>subSelectors</code> to those elements.
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ByScoped.FromScope(OpenQA.Selenium.By,OpenQA.Selenium.By[])">
            <summary>
            Creates a 'scoped' selector which will first find all elements
            that match the <code>searchContext</code> selector and then keep
            applying the <code>subSelectors</code> to those elements.
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent">
            <summary>
            Represents a bootstrap collapsable.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventShowCollapse">
            <summary>
            This event fires immediately when the show instance method is
            called.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventShownCollapse">
            <summary>
            This event is fired when a collapse element has been made visible
            to the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventHideCollapse">
            <summary>
            This event is fired immediately when the hide method has been
            called.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventHiddenCollapse">
            <summary>
            This event is fired when a collapse element has been hidden from
            the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.#ctor(OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="animationData"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.GetAllOpenElements(System.Boolean)">
            <summary>
            Retrieves all elements capable of opening the collapsable.
            </summary>
            <param name="excludeToggleElements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.GetAllCloseElements(System.Boolean)">
            <summary>
            Retrieves all elements capable of closing the collapsable.
            </summary>
            <param name="excludeToggleElements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.Open(OpenQA.Selenium.IWebElement)">
            <summary>
            Will click an element that will open the collapsable if not
            already open and wait for the animation to finish.
            </summary>
            <param name="element">
            Optional. If null will use the first element identified by
            Options.OpenSelector or if none the first element identified by the
            Options.ToggleSelector.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.Close(OpenQA.Selenium.IWebElement)">
            <summary>
            Will click an element that will close the collapsable if not
            already closed and wait for the animation to finish.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.IsExpanded">
            <summary>
            Checks if the element is open.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.IsCollapsed">
            <summary>
            Checks if the element is closed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.WaitForAnimationStart(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.IsCurrentlyAnimating(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions">
            <summary>
            Contains classes and selectors for the Bootstrap CollapsableComponent.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.OpenSelectors">
            <summary>
            Selectors for elements that ONLY expand the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.CloseSelectors">
            <summary>
            Selectors for elements that ONLY collapse the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.ToggleSelectors">
            <summary>
            Selectors for elements that both expand and collapse the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.CollapsableContainerSelector">
            <summary>
            The selector for the element being expanded/collapsed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.OpenClass">
            <summary>
            The class used when the CollapsableContainer is open.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationDuration">
            <summary>
            The expected duration of the animation (Usually five seconds is
            added onto this time for wait conditions).
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationClasses">
            <summary>
            Classes used to represent when the component is being animated.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationsEnabled">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent">
            <summary>
            Used for working with Bootstrap navs.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent"/> class.
            </summary>
            <param name="driver">The driver.</param>
            <param name="selector">The selector.</param>
            <param name="configuration"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent.GetTabNames">
            <summary>
            Gets the tab names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent.GetTabHeaderElements">
            <summary>
            Gets the tab header elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent.GetActiveTabBody">
            <summary>
            Gets the active tab body.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent.GetActiveTabName">
            <summary>
            Gets the name of the active tab.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent.SetActiveTab(System.String,System.StringComparison)">
            <summary>
            Sets the active tab.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponent.HasTab(System.String,System.StringComparison)">
            <summary>
            Determines whether the specified tab exists.
            </summary>
            <param name="tabName">Name of the tab.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration">
            <summary>
            Options for configuring the NavsComponent. All selectors are relative
            to WrappedElement of the NavComponent.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.TabHeaderElementsSelector">
            <summary>
            Gets or sets the tab header elements selector.
            </summary>
            <value>
            The tab header elements selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.TabHeaderNamesSelector">
            <summary>
            Gets or sets the tab header names selector.
            </summary>
            <value>
            The tab header names selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.ActiveTabHeaderElementSelector">
            <summary>
            Gets or sets the active tab header element selector.
            </summary>
            <value>
            The active tab header element selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.ActiveTabHeaderNameSelector">
            <summary>
            Gets or sets the active tab header name selector.
            </summary>
            <value>
            The active tab header name selector.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.ActiveTabContentElementSelector">
            <summary>
            Gets or sets the active tab content element selector.
            </summary>
            <value>
            The active tab content element selector.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Navs.NavsTabComponentConfiguration.Default">
            <summary>
            Default bootstrap selectors.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent">
            <summary>
            AccordionComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.#ctor(ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions,OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent"/> class.
            </summary>
            <param name="accordianComponentOptions">The options.</param>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.GetPanelNames">
            <summary>
            Gets all of the panel names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.SelectPanel(System.String,System.StringComparison)">
            <summary>
            Sets the panel to open and returns the panel content element.
            </summary>
            <param name="panelName">Name of the panel.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.ClosePanel">
            <summary>
            Closes the active panel.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.HasOpenPanel">
            <summary>
            Determines whether their is an open panel.
            </summary>
            <returns>
              <c>true</c> if [has open panel]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.GetActivePanelName">
            <summary>
            Gets the name of the active panel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponent.GetActivePanelContentElement">
            <summary>
            Gets the active panels content element.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions">
            <summary>
            Options for configuring the AccordianComponent and how Selenium
            interacts with it.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AccordianHeaderClass">
            <summary>
            Gets or sets the accordian header class.
            </summary>
            <value>
            The accordian header class.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AccordianHeaderCollapsedClass">
            <summary>
            Gets or sets the accordian header collapsed class.
            </summary>
            <value>
            The accordian header collapsed class.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AccordianContentClass">
            <summary>
            Gets or sets the accordian content class.
            </summary>
            <value>
            The accordian content class.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>
            The duration of the animation.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.Collaspable">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions"/> can have all panels
            collapsed.
            </summary>
            <value>
              <c>true</c> if collaspable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.Event">
            <summary>
            Gets or sets the event that triggers the panel. Default is 'click'.
            </summary>
            <value>
            The event.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.Accordian.AccordionComponentOptions.Default">
            <summary>
            Defaults this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent">
            <summary>
            DatePickerComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions,OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="selector">
            The input element linked to the calendar.
            </param>
            <param name="datePickerComponentOptions">
            The datepciker component options.
            </param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.IsPopup">
            <summary>
            Gets or sets a value indicating whether this instance is popup.
            </summary>
            <value>
              <c>true</c> if this instance is popup; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.GetDate">
            <summary>
            Gets the date.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.SetDate(System.DateTime)">
            <summary>
            Sets the date.
            </summary>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.IsDisabled">
            <summary>
            Determines whether this instance is disabled.
            </summary>
            <returns>
              <c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.GetMinAndMaxDates">
            <summary>
            Gets the min and max date times.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.GetOptions">
            <summary>
            Gets the options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.GetData">
            <summary>
            Gets the data object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.GetDay">
            <summary>
            Gets the day. Returns -1 if no day has been selected.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions">
            <summary>
            DatePickerComponentOptions.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
            <value>
            The duration of the animation.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions.DateFormat">
            <summary>
            Gets or sets the date format used by the DatePicker.
            </summary>
            <value>
            The date format.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponentOptions.Default">
            <summary>
            Defaults this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase">
            <summary>
            Base class for JQuery Widgets.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase"/> class.
            </summary>
            <param name="driver">The driver.</param>
            <param name="selector">The selector.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.JQueryWidgetBase.WaitForInitialization(System.String,System.TimeSpan)">
            <summary>
            Waits for the <c>dataName</c> to be defined on the
            $(WrappedElement).data() object. Assumes that <c>WrappedElement</c>
            has been assigned to.
            </summary>
            <param name="dataName">
            Name of the property on the data object.
            </param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent">
            <summary>
            Base class
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.configuration">
            <summary>
            The options that define how to interact with the component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="configuration"></param>
            <param name="selector"></param>
            <param name="driver"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.PageLoadingIndicator">
            <summary>
            The 'busy' or loading element displayed on the page.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.ContainerLoadingIndicator">
            <summary>
            The 'busy' or loading element displayed on the container.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.IsBusy">
            <summary>
            Checks if the page is displaying the loading indicator (page
            or container).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.WaitForLoadingOperation(System.Nullable{System.TimeSpan})">
            <summary>
            If DataSourceOptions.RemoteDataSource is true then waits for the
            busy indicator to appear (if not already visible) then dissapear.
            </summary>
            <param name="wait">Defaults to one minute</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.GetPromiseForKendoEvent(System.String)">
            <summary>
            Since kendo events aren't compatible with native js events use this
            method to listen for kendo events.
            </summary>
            <param name="eventName">Name of the event to listen for.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration">
            <summary>
            Options for the KDropDownComponent.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration.ControlWithKeyboardInsteadOfMouse">
            <summary>
            Gets or sets a value indicating whether to use the mouse or the
            keyboard to interact with the element. The mouse may still be used
            to for some interactions where the keyboard will not suffice.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>
            The data source.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration.DefaultBaseKendoOptions">
            <summary>
            Returns a new instance of the default BaseKendoOptions object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions">
            <summary>
            Used to configure datasource kendo components.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.RemoteDataSource">
            <summary>
            Determines if data-changing operations display a loading
            indicator.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.PageLoadingSelector">
            <summary>
            Kendo page loading indicator. Selector is relative to the document.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.ContainerLoadingSelector">
            <summary>
            Kendo container loading indicator. Selector is relative to the
            document.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.DefaultKendoOptions">
            <summary>
            Initializes a new DataSourceOptions object with RemoteDataSource
            set to false and the page/container loading selectors set to
            ".k-loading-mask");
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions">
            <summary>
            Options that configures which classes to observer when determining if
            the dropdown is animating.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.AnimationDuration">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.AnimationsEnabled">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.Default">
            <summary>
            Returns a default KDropDownAnimations object with AnimationsEnabled
            and AnimationDuration set to 200ms.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent">
            <summary>
            Kendo dropdown widget.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <summary>
            The selector should target the original element that's been wrapped
            by kendo.
            </summary>
            <param name="configuration"></param>
            <param name="selector"></param>
            <param name="driver"></param>
            <param name="animationData"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.Load">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.IsExpanded">
            <summary>
            Returns true if the component is expanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.GetItems">
            <summary>
            Returns the list of items in the dropdown.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.GetSelectedItem">
            <summary>
            Returns the currently selected item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.SetSelectedItem(System.String,System.StringComparison)">
            <summary>
            Sets the selected item.
            </summary>
            <param name="value"></param>
            <param name="stringComparison"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.WaitForAnimationStart(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.IsCurrentlyAnimating(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.Expand">
            <summary>
            Expands the dropdown if not already expanded.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.Close">
            <summary>
            Collapses the dropdown if not already collapsed.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent">
            <summary>
            Represents a kendo grid.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="selector"></param>
            <param name="pageObjectFactory"></param>
            <param name="configuration"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.IsMultiColumnHeader">
            <summary>
            Used to check for nested headers.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.Pager">
            <summary>
            The pager used to control the grid.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.Toolbar">
            <summary>
            Toolbar component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.Load">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.GetColumnHeaders">
            <summary>
            Returns a list of all column names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.GetCell(System.Int32,System.Int32)">
            <summary>
            Returns the element cell.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KGrid.KGridComponent.GetCell(System.String,System.Int32)">
            <summary>
            NOTE: Throws an exception if this is a multi-header grid.
            </summary>
            <param name="columnHeaderName"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions">
            <summary>
            Animation options for the KMultiSelectComponent.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions.AnimationDuration">
            <inheritDoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions.AnimationsEnabled">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions.Default">
            <summary>
            Default options for the KMultiSelectAnimationOptions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent">
            <summary>
            Represents a kendo multi-select component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.#ctor(OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration)">
            <summary>
            Ctor.
            </summary>
            <param name="selector"></param>
            <param name="driver"></param>
            <param name="configuration"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.IsExpanded">
            <summary>
            Checks if the widget is expanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.GetAllOptions">
            <summary>
            Returns a list of all options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.GetSelectedOptions">
            <summary>
            Returns a list of all selected items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.SelectItem(System.String,System.StringComparison)">
            <summary>
            Selects an item if not already selected.
            </summary>
            <param name="item"></param>
            <param name="stringComparison"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.DeselectItem(System.String,System.StringComparison)">
            <summary>
            Deselects an item if it's selected.
            </summary>
            <param name="item"></param>
            <param name="stringComparison"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.WaitForAnimationStart(ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions)">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions)">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.IsCurrentlyAnimating(ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectAnimationOptions)">
            <inheritDoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.Expand">
            <summary>
            Expands the widget if not already expanded.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectComponent.Close">
            <summary>
            Collapses this widget if not already collapsed.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration">
            <summary>
            Configuration and interaction options for the widget.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration" />
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration.AnimationOptions">
            <summary>
            Gets or sets the animation options.
            </summary>
            <value>
            The animation options.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration.AutoClose">
            <summary>
            Gets or sets a value indicating whether the widget will
            automatically close after selecting an item.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KMultiSelect.KMultiSelectConfiguration.Default">
            <summary>
            Defaults this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent">
            <summary>
            PagerComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="configuration"></param>
            <param name="selector"></param>
            <param name="pageObjectFactory"></param>
            <param name="driver"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.IsOnFirstPage">
            <summary>
            Returns true if on the first page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.HasPreviousPage">
            <summary>
            Returns false if the previous page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.HasNextPage">
            <summary>
            Returns false if the next page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.IsOnLastPage">
            <summary>
            Returns true if the last page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.HasPageInfo">
            <summary>
            Used to determine if the current page range total items are displayed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.Load">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.SetPage(System.Int32)">
            <summary>
            Sets the page the listed page with the matching number.
            </summary>
            <param name="listedPage"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.GetListedPages">
            <summary>
            Returns a list of listed pages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.LastPage">
            <summary>
            Goes to the last page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.FirstPage">
            <summary>
            Goes to the first page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.PrevPage">
            <summary>
            Goes to the previous page if available, otherwise remains on the
            current page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.NextPage">
            <summary>
            Goes to the next page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.GetActivePage">
            <summary>
            Returns the active page number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.GetTotalItems">
            <summary>
            Returns the total items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.GetAvailableItemsPerPage">
            <summary>
            Retrieves the available items per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.GetItemsPerPage">
            <summary>
            Returns the selected value for items per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.SetItemsPerPage(System.Int32)">
            <summary>
            Sets the 'Items per Page'.
            </summary>
            <param name="itemsPerPage"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KPager.KPagerComponent.Refresh">
            <summary>
            Refreshes the context the pager is attached to.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KToolbar.KToolbarComponent">
            <summary>
            KToolbarComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KToolbar.KToolbarComponent.#ctor(ApertureLabs.Selenium.Components.Kendo.BaseKendoConfiguration,OpenQA.Selenium.By,OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="configuration"></param>
            <param name="selector"></param>
            <param name="dataSourceOptions"></param>
            <param name="driver"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KToolbar.KToolbarComponent.GetItems">
            <summary>
            Returns all item container elements.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Nop.DefaultNopDatasourceOptions">
            <summary>
            The default options for kendo datasources used in NopCommerce.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Nop.DefaultNopDatasourceOptions.#ctor">
            <summary>
            Sets the <c>PageLoadingIndicator</c> to '#ajaxBusy'.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem">
            <summary>
            GroupedMenuItem.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory"></param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ButtonGroupMenuItem.GetSubItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the sub item by text.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem">
            <summary>
            Represents a drop down style menu item.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem.SelectOption(System.String,System.StringComparison)">
            <summary>
            Opens the drop down and returns the option.
            </summary>
            <param name="option">The option.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.DropDownMenuItem.GetDirectionFloatMenuWillOpen">
            <summary>
            Gets the direction float menu will open relative to the CENTER of
            this WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar">
            <summary>
            Defines methods for retrieving items.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.GetMenuItems">
            <summary>
            Gets all menu items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item by text.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item by class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.HasItemWithText(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
              <c>true</c> if the specified item name has item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.IBaseToolbar.HasItemWithClass(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
              <c>true</c> if [has item by class] [the specified class name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode">
            <summary>
            The 'mode' of a TinyMCE editor.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode.Classic">
            <summary>
            The form-based mode.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode.Inline">
            <summary>
            The inline mode. No iframe is used with the editor.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.TinyMCE.IntegrationMode.DistractionFree">
            <summary>
            The distraction free mode essentially is just the text editor area
            without any menus, toolbars, or status bars.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent">
            <summary>
            The menu component of a TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The pageObjectFactory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item.
            </summary>
            <param name="className"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.HasItemWithText(System.String,System.StringComparison)">
            <summary>
            Determines whether the specified item name has item.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if the specified item name has item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.HasItemWithClass(System.String,System.StringComparison)">
            <summary>
            Determines if the menu item exists.
            </summary>
            <param name="className"></param>
            <param name="stringComparison"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetMenuItems">
            <summary>
            Gets all menu items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuComponent.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem">
            <summary>
            Menu item of a TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="F:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.pageObjectFactory">
            <summary>
            Page object factory.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.MenuItem"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IsDropDown">
            <summary>
            Gets a value indicating whether this instance is drop down.
            </summary>
            <value>
              <c>true</c> if this instance is drop down; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IsButtonGroup">
            <summary>
            Gets a value indicating whether this instance is button group.
            </summary>
            <value>
              <c>true</c> if this instance is button group; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.HasTitle">
            <summary>
            Gets a value indicating whether this instance has title.
            </summary>
            <value>
              <c>true</c> if this instance has title; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.HasIcon">
            <summary>
            Gets a value indicating whether this instance has icon.
            </summary>
            <value>
              <c>true</c> if this instance has icon; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.HasShortcut">
            <summary>
            Gets a value indicating whether this instance has shortcut.
            </summary>
            <value>
              <c>true</c> if this instance has shortcut; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IconElement">
            <summary>
            Gets the icon element. Won't throw an error if the element doens't
            exist.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.TextElement">
            <summary>
            Gets the text element. Won't throw an error if the element doens't
            exist.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.ShortCutElement">
            <summary>
            Gets the shortcut element. Won't throw an error if the element
            doens't exist.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.CaretElement">
            <summary>
            Gets the caret element. Won't throw an error if the element doens't
            exist.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.ConvertTo``1">
            <summary>
            Converts the item to a the derived MenuItem. Will return null if
            it fails to convert this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.IsDisplayed">
            <summary>
            Determines whether this instance is displayed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.MenuItem.AsElement">
            <summary>
            Returns the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent">
            <summary>
            Statusbar of a TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory"></param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.StatusbarComponent.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item by class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent">
            <summary>
            Used for interacting with TinyMCE editors.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory"></param>
            <param name="driver">The driver.</param>
            <param name="tinyMCEOptions">The options.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.IntegrationMode">
            <summary>
            Gets the integration mode.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Menu">
            <summary>
            Used to manipulate the menu area. Null if no menu bar.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Toolbar">
            <summary>
            Used to manipulate the toolbar. Null if no toolbar.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Statusbar">
            <summary>
            Used to manipulate the statusbar. Null if no status bar.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.TinyMCEContainerElement">
            <summary>
            Gets or sets the element created by tinyMCE.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.SetEditorSize(System.Drawing.Size)">
            <summary>
            Sets the size of the editor.
            </summary>
            <param name="desiredSize">Size of the desired.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetEditorSize">
            <summary>
            Gets the size of the editor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetCursorPosition">
            <summary>
            Gets the cursor position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.SetCursorPosition(System.Drawing.Point)">
            <summary>
            Sets the cursor position (the point {0,0} will be the top left
            corner).
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.HighlightAllText">
            <summary>
            Highlights all text.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.HightlightRange(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Hightlights the range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the start point is before the end point.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetHighlightedText">
            <summary>
            Gets the highlighted text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.Write(System.String)">
            <summary>
            Writes the specified content.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.WriteLine(System.String)">
            <summary>
            Writes the line.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.WriteLine">
            <summary>
            Writes the line.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.GetContent">
            <summary>
            Gets the content of the editor. This calls the
            tinyMCE.Editor.getContent().
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEComponent.ClearAllContent">
            <summary>
            Clears all content in the editable body area.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions">
            <summary>
            Options for the TinyMCEComponent.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions.InteractWithMenuViaJavaScript">
            <summary>
            Gets or sets a value indicating whether to interact with the menu
            using the javascript api. If false then interactions will be
            attempted via clicking.
            </summary>
            <value>
              <c>true</c> if [interact with menu via java script]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.TinyMCEOptions.Default">
            <summary>
            Creates a new instance with all properties preset to their
            defaults.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent">
            <summary>
            Toolbar component of the TinyMCEComponent.
            </summary>
            <seealso cref="T:ApertureLabs.Selenium.PageObjects.PageComponent" />
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.#ctor(OpenQA.Selenium.By,ApertureLabs.Selenium.IPageObjectFactory,OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent"/> class.
            </summary>
            <param name="selector">The selector.</param>
            <param name="pageObjectFactory">The page object factory.</param>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetItemByClass(System.String,System.StringComparison)">
            <summary>
            Gets the item by class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetItemByText(System.String,System.StringComparison)">
            <summary>
            Gets the item by text.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetMenuItemAt(System.Int32)">
            <summary>
            Gets the menu item at the index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.GetMenuItems">
            <summary>
            Gets all menu items.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.HasItemWithClass(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if [has item by class] [the specified class name]; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.TinyMCE.ToolbarComponent.HasItemWithText(System.String,System.StringComparison)">
            <summary>
            Determines whether the item exists.
            </summary>
            <param name="itemName">Name of the item.</param>
            <param name="stringComparison">The string comparison.</param>
            <returns>
            <c>true</c> if the specified item name has item; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssColor">
            <summary>
            Represents a css color.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssColor.Color">
            <summary>
            The color parsed from the value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromHsl">
            <summary>
            Assigns Color from value interperted as an hsl function.
            </summary>
            <returns></returns>
            <seealso cref="!:https://www.w3.org/TR/css-color-3/#hsl-color"/>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromRgb">
            <summary>
            Creates a color from rgba color string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromHex">
            <summary>
            Creates a color from a hex string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.Normalize(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Maps a value in a range to another range.
            </summary>
            <param name="value">The number being mapped.</param>
            <param name="actualMin">Ignored if infinity.</param>
            <param name="actualMax">Ignored if infinity.</param>
            <param name="desiredMin">Defaults to zero.</param>
            <param name="desiredMax">Defaults to one.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssColorFormat">
            <summary>
            The supported color formats.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Unknown">
            <summary>
            Unable to determine the color format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.CurrentColor">
            <summary>
            The value of the color property. Similar to one of the css-wide
            keywords like auto or inherit.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.BasicColorKeyword">
            <summary>
            The value is of the list of html color keywords.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Transparent">
            <summary>
            The value is transparent.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Hexadecimal">
            <summary>
            Value is in the hex format. Can be #fff or #ffffff.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.RGB">
            <summary>
            Value is in the rgb(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.RGBA">
            <summary>
            Value is in the rgba(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.HSL">
            <summary>
            Value is in the hsl(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.HSLA">
            <summary>
            Value is in the hsla(...) format.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssDimension">
            <summary>
            Represents a 'number' value for css.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssDimension.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssDimension.Number">
            <summary>
            The value as a number.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssDimension.UnitOfMeasurement">
            <summary>
            The unit of measurement.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssFunction">
            <summary>
            Represents a css function.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssUnit">
            <summary>
            Represents a css unit of measurement.
            </summary>
            <seealso cref="!:https://drafts.csswg.org/css-values-4"/>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.None">
            <summary>
            There is no unit associated with the number.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Centimeters">
            <summary>
            ('cm')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Millimeters">
            <summary>
            ('mm')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.QuarterMillimeters">
            <summary>
            ('Q')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Inches">
            <summary>
            ('in')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Picas">
            <summary>
            ('pc')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Points">
            <summary>
            ('pt')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Pixels">
            <summary>
            ('px')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Degrees">
            <summary>
            ('deg') Degrees. There are 360 degrees in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Gradians">
            <summary>
            ('grad') Gradians, also known as "gons" or "grades". There are 400
            gradians in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Radians">
            <summary>
            ('rad') Radians. There are 2π radians in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Turn">
            <summary>
            ('turn') Turns. There is 1 turn in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Seconds">
            <summary>
            ('s') Seconds.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Milliseconds">
            <summary>
            ('ms') Milliseconds. There are 1000 milliseconds in a second.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Hertz">
            <summary>
            ('Hz') Hertz. It represents the number of occurrences per second.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.KiloHertz">
            <summary>
            ('kHz') KiloHertz. A kiloHertz is 1000 Hertz.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Percent">
            <summary>
            ('%') Varies based on which style property it's being used with.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.EM">
            <summary>
            ('em') Relative to the font size of the element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.EX">
            <summary>
            ('ex') X-height of the element’s font.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.CAP">
            <summary>
            ('cap') Relative to the cap height (the nominal height of capital
            letters) of the element’s font.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.CH">
            <summary>
            ('ch') Relative to the average character advance of a narrow glyph
            in the element’s font, as represented by the “0” (ZERO, U+0030)
            glyph.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.IC">
            <summary>
            ('ic') Relative to the average character advance of a fullwidth
            glyph in the element’s font, as represented by the “水” (CJK water
            ideograph, U+6C34) glyph.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.REM">
            <summary>
            ('rem') Relative to the font size of the root element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.LineHeight">
            <summary>
            ('lh') Relative to the line height of the element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.RootLineHeight">
            <summary>
            ('rlh') Relative to the line height of the root element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewWidth">
            <summary>
            ('vw') Equal to 1% of the width of the initial containing block.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewHeight">
            <summary>
            ('vh') Equal to 1% of the height of the initial containing block.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewInline">
            <summary>
            ('vi') Equal to 1% of the size of the initial containing block in
            the direction of the root element’s inline axis.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewBlock">
            <summary>
            ('vb') Equal to 1% of the size of the initial containing block in
            the direction of the root element’s block axis.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewMinimum">
            <summary>
            ('vmin') Equal to the smaller 'vw' or 'vh'.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewMaximum">
            <summary>
            ('vmax') Equal to the larger 'vw' or 'vh'.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerInch">
            <summary>
            ('dpi') Dots per inch.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerCentimeter">
            <summary>
            ('dpcm') Dots per centimeter.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerPixelUnit">
            <summary>
            ('dppx' | 'x') Dots per 'px' unit.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssValue">
            <summary>
            Representing and converting css values (length, color, angle, etc...).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.Value">
            <summary>
            Original css string.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsAuto">
            <summary>
            True if the value is 'auto'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsUnset">
            <summary>
            True if the value is 'unset'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsInherit">
            <summary>
            True if the value is 'inherit'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsCssWideKeyword">
            <summary>
            True if the the value is auto or inherit or unset.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.ToString">
            <summary>
            Returns the original css string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.op_Implicit(ApertureLabs.Selenium.Css.CssValue)~System.String">
            <summary>
            Implicitly converts a CssValue to a string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Data">
            <summary>
            Used for generating date-of-births, names, etc...
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="apiKey">
            The google maps api key.
            </param>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomCity(System.String,System.String)">
            <summary>
            Selects a random city in a country and state/province.
            </summary>
            <param name="country">
            Can be US or CN for United States and Canada respectively.
            </param>
            <param name="stateOrProvince">
            Should be the two digit state/province code.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomCountry">
            <summary>
            Selects a random country. Currently only returns 'Canada',
            'United Kingdom', and the 'United States'.
            </summary>
            <returns>Full legal name of the country.</returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomStateOrProvince(System.String)">
            <summary>
            Returns a random state/province of a country.
            </summary>
            <param name="country"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomDateOfBirth(System.Boolean)">
            <summary>
            The returned date is guaranteed to be at least 18 years in the past if
            the argument adult is true, if false the returned date will NOT be 18
            years in the past
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomString(System.Int32)">
            <summary>
            Generates a string of random letters (uses both upper case and
            lower case).
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.ExpectedConditions">
            <summary>
            Commonly used conditions.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsExist(OpenQA.Selenium.By)">
            <summary>
            Waits for at least one element identified by the selector to exist.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsAreVisible(OpenQA.Selenium.By)">
            <summary>
            Waits until all elements identified by the selector are visible.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsAreClickable(OpenQA.Selenium.By)">
            <summary>
            Waits until all elements identified by the selector are clickable.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IDisposableExtensions">
            <summary>
            Contains extensions for classes implementing IDisposable.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IDisposableExtensions.Using``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})">
            <summary>
            Calls <code>IDisposable.Dispose</code> on each disposable after
            executing the function.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="disposables"></param>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IDisposableExtensions.Using``1(System.Collections.Generic.IEnumerable{``0},System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Calls <code>IDisposable.Dispose</code> on each disposable after
            executing the function.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="disposables"></param>
            <param name="action"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IEnumerableExtensions">
            <summary>
            Contains extensions for ICollection.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IEnumerableExtensions.SelectRandom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Selects a random element from a list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Retrieves the index of an item in a collection. Returns -1 if the
            item isn't in the collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.ISearchContextExtensions">
            <summary>
            Contains extensions for ISearchContext objects.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.ISearchContextExtensions.GetCssSelector(OpenQA.Selenium.ISearchContext,OpenQA.Selenium.IWebElement,System.Boolean)">
            <summary>
            Creates a unique CSS selector for an element.
            </summary>
            <param name="searchContext">The search context.</param>
            <param name="element">The element.</param>
            <param name="optimize">
            Whether or not to optimize the selector. This may be time
            consuming.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.ISearchContextExtensions.TryGetAttribute(OpenQA.Selenium.IWebElement,System.String,System.Func{System.String,System.Boolean},System.String@)">
            <summary>
            Tries the get attribute. Will check if the value is null BEFORE
            executing the expression.
            </summary>
            <param name="element">The element.</param>
            <param name="attribute">The attribute.</param>
            <param name="predicate">The predicate.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IWebDriverExtensions">
            <summary>
            Contains extensions for IWebDriver.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Wait(OpenQA.Selenium.IWebDriver,System.TimeSpan)">
            <summary>
            Shorthand for creating a new WebDriverWait object.
            </summary>
            <param name="driver"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Wait(OpenQA.Selenium.IWebDriver,System.TimeSpan,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Shorthand for creating a new WebDriverWait object which ignores all
            exceptions passed in to it.
            </summary>
            <param name="driver"></param>
            <param name="timeSpan"></param>
            <param name="ignore"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Select(OpenQA.Selenium.IWebDriver,System.String,System.TimeSpan)">
            <summary>
            Shorthand selector for FindElements(By.CssSelector(...));
            </summary>
            <param name="driver"></param>
            <param name="cssSelector"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Select(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Shorthand selector for FindElements(by);
            </summary>
            <param name="driver"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetCurrentViewportDimensions(OpenQA.Selenium.IWebDriver)">
            <summary>
            Retrieves the size of the current viewport.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.CreateActions(OpenQA.Selenium.IWebDriver)">
            <summary>
            Shorthand for <code>new Actions(driver);</code>. Only exists
            to help make the Actions class more apparent.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.PageHasJQuery(OpenQA.Selenium.IWebDriver)">
            <summary>
            Detects if jQuery is defined on a page.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.JavaScriptExecutor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Returns a javascript executor from the webdriver. Will throw an
            exception if the driver doesn't support the interface.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForEvent(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Waits for a document level event matching the eventName to occur.
            </summary>
            <param name="driver"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForAnyEvent(OpenQA.Selenium.IWebDriver,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the first event to be emitted by the document.
            </summary>
            <param name="driver"></param>
            <param name="eventNames"></param>
            <param name="timeout">Defaults to 30 seconds.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForAllEvents(OpenQA.Selenium.IWebDriver,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for all events to be emitted by the document.
            </summary>
            <param name="driver"></param>
            <param name="eventNames"></param>
            <param name="timeout">Defaults to 30 seconds.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetFocusedElements(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Returns elements that matched the '*:focus' css selector and
            optionally are filtered by the <c>matchingSelector</c>.
            </summary>
            <param name="driver"></param>
            <param name="matchingSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetHoveredElements(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Returns elements that match the css selector "*:hover" and
            optionally additionally match the <c>matchingSelector</c> if
            provided.
            </summary>
            <param name="driver">The driver.</param>
            <param name="matchingSelector">Filters the results.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetHighlightedText(OpenQA.Selenium.IWebDriver)">
            <summary>
            Gets highlighted text.
            </summary>
            <param name="driver">The driver.</param>
            <returns>
            The highlighted text content (no element tags but does
            include new lines).
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IWebElementExtensions">
            <summary>
            Extensions for IWebElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Children(OpenQA.Selenium.IWebElement)">
            <summary>
            Selects only direct child elements of this element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Classes(OpenQA.Selenium.IWebElement)">
            <summary>
            Retrieves all classes listed on an element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetDriver(OpenQA.Selenium.IWebElement)">
            <summary>
            Retrieves the IWebDriver from an IWebElement.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.TryScrollToCenter(OpenQA.Selenium.IWebElement)">
            <summary>
            Will try scroll to the page until the center of the element is
            aligned with the center of the viewport.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.TextHelper(OpenQA.Selenium.IWebElement)">
            <summary>
            Returns and creates a new TextHelper for a given element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetParentElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Returns the parent element of the element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.SelectRandom(System.Collections.Generic.IReadOnlyList{OpenQA.Selenium.IWebElement})">
            <summary>
            Returns a random element and returns it.
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.SelectRandom(System.Collections.Generic.IReadOnlyList{OpenQA.Selenium.IWebElement},System.Int32@)">
            <summary>
            Returns a random element and returns it.
            </summary>
            <param name="elements"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.IsStale(OpenQA.Selenium.IWebElement)">
            <summary>
            Checks if an element is stale.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetEventWaiter(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Creates an activated SeleniumJavaScriptPromiseBody and returns it.
            NOTE: Don't call CreateScript(...) on the returned object as it has
            already been called.
            </summary>
            <param name="element">The element.</param>
            <param name="eventName">Name of the event.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">eventName</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForEvent(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Waits for an event to occur on the element.
            </summary>
            <param name="element"></param>
            <param name="eventName"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForAnyEvent(OpenQA.Selenium.IWebElement,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the first event on the element.
            </summary>
            <param name="element"></param>
            <param name="eventNames"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForAllEvents(OpenQA.Selenium.IWebElement,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for all events to be emitted on the element.
            </summary>
            <param name="element"></param>
            <param name="eventNames"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetElementProperty(OpenQA.Selenium.IWebElement,System.String,System.String)">
            <summary>
            This exists to patch an issue with the current chromedriver not
            being compatible with the W3C WebDriver spec as of 05 June 2018
            (https://www.w3.org/TR/2018/REC-webdriver1-20180605/). This will
            use the native function 'GetProperty' for every driver except
            chromedriver which instead executes javascript to retrieve the
            value.
            </summary>
            <param name="element"></param>
            <param name="propertyName"></param>
            <param name="defaultValueIfNull"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetIndexRelativeToSiblings(OpenQA.Selenium.IWebElement)">
            <summary>
            Gets the position of the element relative to it's sibling elements.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Is(OpenQA.Selenium.IWebElement,OpenQA.Selenium.By)">
            <summary>
            Determines whether the element matches the selector. Similar to
            jQuery.is(...).
            </summary>
            <param name="element">The element.</param>
            <param name="selector">The selector.</param>
            <returns>
              <c>true</c> if the element matches the specified selector;
              otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions">
            <summary>
            Extensions for WebDriverWait.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Select(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
            <summary>
            Shorthand selector for wait.Until(ExpectedConditions.ElementsExist(
            By.CssSelector('cssSelector')));
            </summary>
            <param name="wait"></param>
            <param name="cssSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Select(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
            <summary>
            Shorthand selector for wait.Until(ExpectedConditions.ElementsExist(
            by));
            </summary>
            <param name="wait"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Exists(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
            <summary>
            Returns true if the element exists.
            </summary>
            <param name="wait"></param>
            <param name="cssSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Exists(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
            <summary>
            Returns true if the element exists.
            </summary>
            <param name="wait"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.UntilStale(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
            <summary>
            Waits until the element is stale.
            </summary>
            <param name="wait"></param>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.TrySequentialWait(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Exception@,System.Func{OpenQA.Selenium.IWebDriver,System.Boolean}[])">
            <summary>
            Identical to wait, but returns the IWait object instead of the
            wait result.
            </summary>
            <param name="wait"></param>
            <param name="exception"></param>
            <param name="conditions"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.While(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Func{OpenQA.Selenium.IWebDriver,System.Boolean})">
            <summary>
            The inverse of Until(...). Will wait while a statement is true.
            </summary>
            <param name="wait"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.While``1(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Func{OpenQA.Selenium.IWebDriver,``0})">
            <summary>
            Waits while the condition returns not null.
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="wait"></param>
            <param name="condition"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.IPageObjectFactory">
            <summary>
            PageObjectFactory.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.IPageObjectFactory.PrepareComponent``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page component and returns
            it. This is useful for initializing a component in one line.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageComponent"></param>
            <returns></returns>
            <example>
            Before:
            // Uninitialized
            var component = new YourComponent(arg1, arg2);
            // Initialized
            component.Load();
            
            After:
            // Instantiate and initialize in one (ableit long) line.
            var initializedcomponent = yourPageObjectFactory
                .PrepareComponent(new YourComponent(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.IPageObjectFactory.PreparePage``1">
            <summary>
            Essentially just calls 'Load()' on the page object and returns it.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="args"></param>
            <returns></returns>
            <example>
            Before:
            // Instantiated but unintialized.
            var page = new YourPage(arg1, arg2);
            // Initialized.
            page.Load();
            
            After:
            // Instantiate and initialize in one (albeit long) line.
            var page = pageObjectFactory.PreparePage(new YourPage(arg1, arg2));
            </example>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.JavaScript">
            <summary>
            Base class for writing javascript.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScript"/> class.
            </summary>
            <param name="script">The script.</param>
            <exception cref="T:System.ArgumentNullException">script</exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.Js.JavaScript"/> class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.JavaScript.Arguments">
            <summary>
            Gets or sets the arguments passed into the script when executing
            it.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.JavaScript.Script">
            <summary>
            The script to be executed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.JavaScript.IsAsync">
            <summary>
            Gets or sets a value indicating whether this script is
            asynchronous. This changes how Execute() operates, if true then the
            script will be executed using ExecuteAsyncScript(...), if false
            then ExecuteScript(...).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.Format">
            <summary>
            Formats the script.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.Execute(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            Executes the script.
            </summary>
            <param name="executor">The executor.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.ExecuteWithResult``1(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            Executes the with result. Accepts the following type arguments:
            <c>int</c>, <c>double</c>, <c>long</c>, <c>decimal</c>,
            <c>string</c>, <c>bool</c>, and <c>IWebElement</c>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="executor">The executor.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">
            Thrown if a typeargument is passed in that's not supported.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.TryExecuteWithResult``1(OpenQA.Selenium.IJavaScriptExecutor,``0@,System.Exception@)">
            <summary>
            Tries to execute with result.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="executor">The executor.</param>
            <param name="result">The result.</param>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.TryExecute(OpenQA.Selenium.IJavaScriptExecutor,System.Exception@)">
            <summary>
            Tries the execute.
            </summary>
            <param name="executor">The executor.</param>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.Clean(System.String)">
            <summary>
            Removes all line breaks, tabs, and comments in a script. WARNING:
            Make sure all comments are removed prior to calling this.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.RemoveComments(System.String)">
            <summary>
            Removes the comments.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.op_Explicit(ApertureLabs.Selenium.Js.JavaScript)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:ApertureLabs.Selenium.Js.JavaScript"/> to
            <see cref="T:System.String"/>.
            </summary>
            <param name="js">The js.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.JavaScript.op_Addition(ApertureLabs.Selenium.Js.JavaScript,ApertureLabs.Selenium.Js.JavaScript)">
            <summary>
            Implements the operator +. Returns a new JavaScript object with
            the Script property being set to the result of (a + b).
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus">
            <summary>
            Statuses for javascript promises.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus.NotFinished">
            <summary>
            The promise never finished.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus.Resolved">
            <summary>
            The promise resolved successfully.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Js.SeleniumJavaScriptPromiseStatus.Rejected">
            <summary>
            The promise was rejected.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.PromiseBody">
            <summary>
            A helper class for creating a javascript promise body for selenium.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.#ctor(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Ctor. Sets the PromiseBody.
            </summary>
            <param name="driver"></param>
            <param name="promiseBody"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Created">
            <summary>
            Used to determine if the promise was created.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.PromiseWrapper">
            <summary>
            The wrapper around the script.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.PromiseId">
            <summary>
            Id of the created promise. Returns -1 if the promise hasn't been
            'created' yet.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.IsAsync">
            <summary>
            Gets or sets a value indicating whether this script is
            asynchronous. This changes how Execute() operates, if true then the
            script will be executed using ExecuteAsyncScript(...), if false
            then ExecuteScript(...).
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Arguments">
            <summary>
            Gets or sets the arguments passed into the script when executing
            it.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ResolveScript">
            <summary>
            Name of the function to resolve the promise.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.RejectScript">
            <summary>
            Name of the function to reject the script.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ArgumentsScript">
            <summary>
            Name of the variable the initial arguments are assigned to. Since
            any parameters passed into the script will only be assigned to the
            initial arguments object, a variable is created to reference the
            intial arguments to access it from the Promise.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Script">
            <summary>
            The body of the promise.
            Supports the following 'default' tokens:
            {resolve} - To resolve the promise (need to call with paranthesis IE:
                {resolve}(23) will resolve 23).
            {reject} - To reject the promise need to call with paranthesis IE:
                {reject}(43) will reject and pass the value 43).
            {args} - To refer to the arguments array of the intial function.
                * Attempting to reference the arguments object by name in the
                    script will return the promises arguments and not what was
                    passed in.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ResolveToken">
            <summary>
            Gets or sets the resolve token.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.RejectToken">
            <summary>
            Gets or sets the reject token.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.ArgsToken">
            <summary>
            Gets or sets the arguments token.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Resolved">
            <summary>
            Checks if the promise was resolved.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Rejected">
            <summary>
            Checks if the promise was rejected.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.Finished">
            <summary>
            Checks if the promise was resolved or rejected.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.PromiseBody.IsStale">
            <summary>
            Checks if the context the promise was saved in is still valid. IE:
            navigating off the page will make this a stale promise.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Reject``1(``0)">
            <summary>
            Attempts to reject the promise with a value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Reject">
            <summary>
            Attempts to reject the promise.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Resolve``1(``0)">
            <summary>
            Attempts to resolve the promise with a value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Resolve">
            <summary>
            Attempts to resolve the promise.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.GetPromiseStatus">
            <summary>
            Returns the status of the promise. Throws an exception if the
            promise was never created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Wait(System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the promise to either resolve or reject.
            </summary>
            <param name="wait">Defaults to thirty seconds.</param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.PromiseBody.Execute(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            This will create the js promise in the drivers active window and
            sets the PromiseId. Can only call this method once. Will throw an
            exception if the PromiseBody was never set.
            </summary>
            <param name="executor">The executor.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Js.SetTimeout">
            <summary>
            Convience class for executing scripts in a setTimeout context.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Js.SetTimeout.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.SetTimeout.IsAsync">
            <summary>
            Will always be true.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.SetTimeout.Script">
            <summary>
            The script to be executed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Js.SetTimeout.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Models.NopModels.INopAddress">
            <summary>
            Respsents an address according to NopCommerce.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.FirstName">
            <summary>
            FirstName.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.LastName">
            <summary>
            LastName.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Company">
            <summary>
            Company.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Country">
            <summary>
            Country.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.StateProvince">
            <summary>
            StateProvice.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.City">
            <summary>
            City.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Address1">
            <summary>
            Address1.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Address2">
            <summary>
            Address2.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.PostalCode">
            <summary>
            PostalCode.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.PhoneNumber">
            <summary>
            PhoneNumber
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.FaxNumber">
            <summary>
            FaxNumber.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Models.NopModels.NopAddress">
            <summary>
            Default implementation of INopAddress.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.#ctor(System.String)">
            <summary>
            Parses a string into a NopAddress.
            </summary>
            <param name="address"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.FirstName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.LastName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Email">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Company">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Country">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.StateProvince">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.City">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Address1">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Address2">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.PostalCode">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.PhoneNumber">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.FaxNumber">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.GetHashCode">
            <inheritdoc/>
            <seealso cref="!:https://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode/263416#263416"/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.Equals(ApertureLabs.Selenium.Models.NopModels.INopAddress)">
            <summary>
            Checks if the addresses are the same.
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.ToString">
            <summary>
            Returns an address string that is usually formatted identical to
            ones displayed by Nop.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.IsValidAddress">
            <summary>
            Checks if this is a valid address.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjectFactory">
            <summary>
            PageObjectFactory.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjectFactory.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjectFactory"/>
            class.
            </summary>
            <param name="services">The service collection.</param>
            <param name="scanAssemblies"></param>
            <exception cref="T:System.ArgumentException">
            Thrown if services doens't have IWebDriver registered.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjectFactory.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.PageObjectFactory"/> class.
            Uses reflection to create the service provider.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjectFactory.PreparePage``1">
            <summary>
            Essentially just calls 'Load()' on the page object (which is
            constructed with the service provider) and returns it.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <example>
            Before:
            // Instantiated but unintialized.
            var page = new YourPage(arg1, arg2);
            // Initialized.
            page.Load();
            
            After:
            // Instantiate and initialize in one (albeit long) line.
            var page = pageObjectFactory.PreparePage(new YourPage(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjectFactory.PrepareComponent``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page component and returns
            it. This is useful for initializing a component in one line.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageComponent"></param>
            <returns></returns>
            <example>
            Before:
            // Uninitialized
            var component = new YourComponent(arg1, arg2);
            // Initialized
            component.Load();
            
            After:
            // Instantiate and initialize in one (ableit long) line.
            var initializedcomponent = yourPageObjectFactory
                .PrepareComponent(new YourComponent(arg1, arg2));
            </example>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IPageComponent">
            <summary>
            Represents a partial view or view component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageComponent.By">
            <summary>
            The selector for the parent node for this component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageComponent.IsStale">
            <summary>
            Determines if the page is in a usable state.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IPageObject">
            <summary>
            Represents a webpage.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageObject.Uri">
            <summary>
            The url of the webpage.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageObject.WindowHandle">
            <summary>
            Gets the window handle the page was originally loaded on.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageObject.IsStale">
            <summary>
            Use to determine if a PageObject is still 'valid'.
            </summary>
            <example>
            If there are two page object instances; one for a login page and
            one for the home page, if the driver is on the home page the login
            page should when its <code>loginPage.IsStateValid();</code> should
            return false while the <code>homePage.IsStateValid();</code> will
            return true.
            </example>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IViewModel`1">
            <summary>
            Used for PageObjects which use a model.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IViewModel`1.ViewModel">
            <summary>
            Retrieves the viewmodel.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.PageComponent">
            <summary>
            Default implementation of IPageComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Ctor
            </summary>
            <param name="driver"></param>
            <param name="by"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.WrappedDriver">
            <summary>
            The IWebDriver of a component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.WrappedElement">
            <summary>
            The element representing the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.By">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.IsStale">
            <summary>
            Used to check if the component is still valid for use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load() or make sure to
            assign the WrappedElement.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.PageObject">
            <summary>
            Default implementation of IPageObject
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            If passing in an EventFiringWebDriver event listeners will be
            added.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.WrappedDriver">
            <summary>
            Gets the OpenQA.Selenium.IWebDriver used to find this element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.Uri">
            <summary>
            The url this page uses.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.WindowHandle">
            <summary>
            Gets the window handle the page was originally loaded on.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.IsStale">
            <summary>
            By default will to see if the pages original window handle still
            exists and that windows url matches the Uri.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Load">
            <summary>
            If overridding this don't forget to call base.Load().
            NOTE: Will navigate to the pages url if the current drivers url
            is empty.
            </summary>
            <remarks>
            If the driver is an EventFiringWebDriver an event listener will
            be added to the 'Navigated' event and uses the url to determine
            if the page is 'stale'.
            </remarks>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException">
            Occurs when trying to use after this instance has been
            disposed.
            </exception>
            <exception cref="T:OpenQA.Selenium.Support.UI.LoadableComponentException">
            Thrown when calling <code>Load()</code> and not on the correct
            url.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.jsonFormatterCallback">
             <summary>
               Looks up a localized string similar to function jsonFormatter (key, value) {
            
                // Ignore null/undefined values.
                if (value === null || value === undefined) {
                    return undefined;
                }
            
                var typeOfValue = typeof value;
            
                // Only include strings, numbers, and booleans.
                if (typeOfValue === &quot;string&quot;
                    || typeOfValue === &quot;number&quot;
                    || typeOfValue === &quot;boolean&quot;) {
                    return value;
                } else {
                    return undefined;
                }
            }.
             </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.tinyMCEUtilities">
             <summary>
               Looks up a localized string similar to var tinyMCEUtilities = (function() {
            	var obj = {};
            
            	/**
            	 * Goes thru each editor in tinyMCE.editors and call matches each editors
            	 * getElement() against the passed in element.
            	 * @param {Element} element - The element used to match against
            	 * Editor.getElement().
            	 * @returns {Editor} The tinyMCE.Editor.
            	 */
            	obj.getEditor = function (element) {
            		if (element === null || element === undefined) {
            			throw new Error(&apos;Argument element cannot be null.&apos;);
            		}
            
            		var editor = null;
            
            		for [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Properties.Resources.waitForEvent">
             <summary>
               Looks up a localized string similar to var eventName = arguments[0];
            var callback = arguments[arguments.length - 1];
            
            if (eventName == null || typeof eventName !== &quot;string&quot;) {
                throw new Error(&quot;The eventName was null.&quot;);
            } else if (callback == null) {
                throw new Error(&quot;The callback was null.&quot;);
            }
            
            function handler(evt) {
                document.removeEventListener(eventName, handler);
            
                var json = JSON.stringify(
                    evt,
                    function (key, value) {
            
                        // Ignore null/undefined values.
                        if (value === nu [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.TabHelper">
            <summary>
            Used for switching between tabs.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.TabHelper.WrappedDriver">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.GetIndexOfCurrentTab">
            <summary>
            Returns the index of the current tab in relation of the other
            tabs on the window.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.GetNumberOfTabs">
            <summary>
            Returns the number of tabs on the current window.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.CreateNewTab(System.Boolean)">
            <summary>
            Opens a new tab in the window.
            </summary>
            <param name="switchToTab"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.TextHelper">
            <summary>
            Used for parsing information from the text of an element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.InnerText">
            <summary>
            Retrieves and trims the inner text of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.OuterText">
            <summary>
            Retrieves and trims the outer text of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.InnerHtml">
            <summary>
            Returns the trimmed inner html of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.OuterHtml">
            <summary>
            Returns the trimmed outer html of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.WrappedDriver">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.WrappedElement">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractInteger(System.Boolean)">
            <summary>
            Extracts a number from the Text of the element. If the text
            of the element is "Some text...-34.32...more text" it will
            return -34. It completely ignores the decimal unless the 
            optional parameter roundUp is true.
            </summary>
            <param name="roundUp"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractIntegers(System.Boolean)">
            <summary>
            Returns all numbers in the elements inner text as integers.
            </summary>
            <param name="roundUp"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractPrice">
            <summary>
            Tries to extract number from the text of the element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDouble">
            <summary>
            Extracts a number from the Text of the element. If the text
            of the element is "Some text...-34.32...more text" it will
            return -34.32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDoubles">
            <summary>
            Returns all numbers in the inner text as doubles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDateTime(System.String)">
            <summary>
            Extracts a Date from the text. Currently this only supports
            the text format "Some text...MM/DD/YYYY...other text". It will
            optionally also return the time up to the second if provided after
            the date.
            </summary>
            <param name="format">
            Optional format the date is in (IE: "MMMM").
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractLastFourCCDigits">
            <summary>
            Fetches the last four digits from a partial credit card number 
            in a string. Ex: (blah x4444 blah blah) text will return 4444.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.MajorWebDriver">
            <summary>
            Enum of common web drivers.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Chrome">
            <summary>
            Chrome.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Edge">
            <summary>
            Edge.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Firefox">
            <summary>
            Firefox.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.InternetExplorer">
            <summary>
            Internet explorer.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.WebDriverFactory">
            <summary>
            Responsible for creation and disposing of the various webdrivers.
            Searches the current directory for the location of the drivers.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Finalize">
            <summary>
            Dtor
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.CreateDriver(ApertureLabs.Selenium.MajorWebDriver,System.Drawing.Size,System.Boolean)">
            <summary>
            Creates a new WebDriver instance for one of the major web
            browsers.
            </summary>
            <param name="majorWebDriver"></param>
            <param name="windowSize"></param>
            <param name="track">
            If false, will not dispose the driver when the factory is
            disposed.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.TrackDriver(OpenQA.Selenium.IWebDriver)">
            <summary>
            Allows tracking of an externally created webdriver.
            </summary>
            <param name="driver">The driver.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.BaseElement">
            <summary>
            Base class for element wrappers.
            </summary>
            <seealso cref="T:OpenQA.Selenium.Internal.IWrapsElement" />
            <seealso cref="T:OpenQA.Selenium.IWebElement" />
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:ApertureLabs.Selenium.WebElements.BaseElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.WrappedElement">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebElement" /> wrapped by this object.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.TagName">
            <summary>
            Gets the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.TagName" /> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specified by the HTML markup &lt;input name="foo" /&gt;.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Text">
            <summary>
            Gets the innerText of this element, without any leading or trailing whitespace,
            and with other whitespace collapsed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.Enabled" /> property will generally
            return <see langword="true" /> for everything except explicitly disabled input elements.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>
            This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.
            </remarks>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Location">
            <summary>
            Gets a <see cref="T:System.Drawing.Point" /> object containing the coordinates of the upper-left corner
            of this element relative to the upper-left corner of the page.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Size">
            <summary>
            Gets a <see cref="P:OpenQA.Selenium.IWebElement.Size" /> object containing the height and width of this element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.BaseElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.Displayed" /> property avoids the problem
            of having to parse an element's "style" attribute to determine
            visibility of an element.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>
            If this element is a text entry element, the <see cref="M:OpenQA.Selenium.IWebElement.Clear" />
            method will clear the value. It has no effect on other elements. Text entry elements
            are defined as elements with INPUT or TEXTAREA tags.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Click">
            <summary>
            Clicks this element.
            </summary>
            <remarks>
            <para>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.IWebElement.Click" />
            method will attempt to block until the page has loaded. After calling the
            <see cref="M:OpenQA.Selenium.IWebElement.Click" /> method, you should discard all references to this
            element unless you know that the element and the page will still be present.
            Otherwise, any further operations performed on this element will have an undefined.
            behavior.
            </para>
            <para>
            If this element is not clickable, then this operation is ignored. This allows you to
            simulate a users to accidentally missing the target when clicking.
            </para>
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement" /> using the given method.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>
            The first matching <see cref="T:OpenQA.Selenium.IWebElement" /> on the current context.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>
            A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>
            The attribute's current value. Returns a <see langword="null" /> if the
            value is not set.
            </returns>
            <remarks>
            The <see cref="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)" /> method will return the current value
            of the attribute, even if the value has been modified after the page has been
            loaded. Note that the value of the following attributes will be returned even if
            there is no explicit attribute on the element:
            <list type="table"><listheader><term>Attribute name</term><term>Value returned if not explicitly specified</term><term>Valid element types</term></listheader><item><description>checked</description><description>checked</description><description>Check Box</description></item><item><description>selected</description><description>selected</description><description>Options in Select elements</description></item><item><description>disabled</description><description>disabled</description><description>Input and other UI elements</description></item></list>
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetCssValue(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>
            The value of the specified CSS property.
            </returns>
            <remarks>
            The value returned by the <see cref="M:OpenQA.Selenium.IWebElement.GetCssValue(System.String)" />
            method is likely to be unpredictable in a cross-browser environment.
            Color values should be returned as hex strings. For example, a
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetProperty(System.String)">
            <summary>
            Gets the value of a JavaScript property of this element.
            </summary>
            <param name="propertyName">The name JavaScript the JavaScript property to get the value of.</param>
            <returns>
            The JavaScript property's current value. Returns a <see langword="null" /> if the
            value is not set or the property does not exist.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>
            The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in
            <see cref="T:OpenQA.Selenium.Keys" />.
            </remarks>
            <seealso cref="T:OpenQA.Selenium.Keys" />
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>
            If this current element is a form, or an element within a form,
            then this will be submitted to the web server. If this causes the current
            page to change, then this method will block until the new page is loaded.
            </remarks>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.BaseElement.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement">
            <summary>
            CanvasElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Draw(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a line from a to b.
            </summary>
            <param name="a">
            Origin is the top left corner of the element.
            </param>
            <param name="b">
            Origin is the top left corner of the element.
            </param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement">
            <summary>
            Wrapper around the IWebElement for IFrames.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.#ctor(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor
            </summary>
            <param name="element"></param>
            <param name="driver"></param>
            <exception cref="T:OpenQA.Selenium.Support.UI.UnexpectedTagNameException">
            Thrown if the element isn't an iframe.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.InFrameAction(System.Action)">
            <summary>
            Executes an action in the context of the IFrame.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.InFrameFunction``1(System.Func{``0})">
            <summary>
            Executes a function in the context of the IFrame.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.EnterIframe">
            <summary>
            Enters the iframe only if not already entered.
            Equal to IWebDriver.SwitchTo().Frame(iframeElement).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.ExitIframe">
            <summary>
            Exits the iframe only if previously entered.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.CheckboxElement">
            <summary>
            Wrapper around the InputElement providing extra functionality for
            checkboxes.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.CheckboxElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">
            Thrown when the element doens't have the type of checkbox.
            </exception>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.FileElement">
            <summary>
            Input element with the type set to file.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.String)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="filepath"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.IO.FileInfo)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.Uri)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement">
            <summary>
            Represents an INPUT element with a type of text that has the list.
            TODO: Possibly rename this class to 'DataListElement'.
            attribute set.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">
            Throws if the element doens't have a list attribute on it.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.Options">
            <summary>
            Retrieves all possible options in the datalist element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByIndex(System.Int32)">
            <summary>
            Sets the value by the index of the option. If the option has no
            value then its text is used.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByText(System.String,System.Boolean)">
            <summary>
            Finds the option matching the text and sets the input value to it.
            </summary>
            <param name="text"></param>
            <param name="partialMatch"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Sets the value based on the value of the option element.
            </summary>
            <param name="optionElement">Must be an option element.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.InputElement">
            <summary>
            Wrapper around an IWebElement to provide extra functionality for input
            elements.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Checks that the element has the correct tagname.
            </summary>
            <param name="element"></param>
            <exception cref="T:System.InvalidCastException">
            Thrown when the elements tagname isn't input.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Type">
            <summary>
            Returns the type of the input element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetValue``1">
            <summary>
            Retrieves the value and tries to cast it to the type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetValue``1(System.Func{System.String,``0})">
            <summary>
            Returns and converts the value by passing in the conversion
            function.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.SetValue``1(``0)">
            <summary>
            Sets the 'value' of the input element.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase">
            <summary>
            Base class for CheckboxElement and RadioElement. Internal use only.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.IsChecked">
            <summary>
            Returns true if the element is checked and false if not.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.Check(System.Boolean)">
            <summary>
            Will assert that the element is checked or unchecked depending on
            the argument. NOTE: This will 'click' the element to toggle the
            state so if it's not clickable this will throw an exception.
            </summary>
            <param name="checked"></param>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException"></exception>
            <exception cref="T:OpenQA.Selenium.ElementNotInteractableException"></exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.SetValue``1(``0)">
            <summary>
            Sets the value of the property checked.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.GetValue``1">
            <summary>
            Returns the value or the property 'checked'.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioElement">
            <summary>
            RadioElement
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElement.GetGroup">
            <summary>
            Returns the radio group name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet">
            <summary>
            RadioElementSet
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.#ctor(System.Collections.Generic.IEnumerable{OpenQA.Selenium.IWebElement})">
            <summary>
            Checks that each element is a radio button and shares the same name.
            </summary>
            <param name="radioButtons"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectedOption">
            <summary>
            Gets the selected item or returns null if nothing is selected.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectByValue(System.String)">
            <summary>
            Selects an option by its value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectByIndex(System.Int32)">
            <summary>
            Selects an option by index, the order in which they appear in the
            html.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Meta.MetaElement">
            <summary>
            MetaElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Content">
            <summary>
            Retrieves the value of the 'content' attribute.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Name">
            <summary>
            Returns the value of the 'name' attribute.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Submit">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Option.OptionElement">
            <summary>
            OptionElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Submit">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetValue">
            <summary>
            Returns the value via attribute or if not present returns the text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WindowSize">
            <summary>
            Contains sizes for windows.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.WindowSize.DefaultDesktop">
            <summary>
            Default size for desktop (1001, 999).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.WindowSize.DefaultTablet">
            <summary>
             Default size for tablet (768, 999).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.WindowSize.DefaultMobile">
            <summary>
            Default size for mobile (120, 999).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WindowSize.RandomSize(System.Int32,System.Int32)">
            <summary>
            Generates a random size in the given range. The height is always
            999.
            </summary>
            <param name="minWidth"></param>
            <param name="maxWidth"></param>
            <returns></returns>
        </member>
    </members>
</doc>
