<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApertureLabs.Selenium</name>
    </assembly>
    <members>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent">
            <summary>
            Represents a bootstrap collapsable.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventShowCollapse">
            <summary>
            This event fires immediately when the show instance method is
            called.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventShownCollapse">
            <summary>
            This event is fired when a collapse element has been made visible
            to the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventHideCollapse">
            <summary>
            This event is fired immediately when the hide method has been
            called.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.EventHiddenCollapse">
            <summary>
            This event is fired when a collapse element has been hidden from
            the user (will wait for CSS transitions to complete).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.#ctor(OpenQA.Selenium.IWebDriver,ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="animationData"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.GetAllOpenElements(System.Boolean)">
            <summary>
            Retrieves all elements capable of opening the collapsable.
            </summary>
            <param name="excludeToggleElements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.GetAllCloseElements(System.Boolean)">
            <summary>
            Retrieves all elements capable of closing the collapsable.
            </summary>
            <param name="excludeToggleElements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.Open(OpenQA.Selenium.IWebElement)">
            <summary>
            Will click an element that will open the collapsable if not
            already open and wait for the animation to finish.
            </summary>
            <param name="element">
            Optional. If null will use the first element identified by
            Options.OpenSelector or if none the first element identified by the
            Options.ToggleSelector.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.Close(OpenQA.Selenium.IWebElement)">
            <summary>
            Will click an element that will close the collapsable if not
            already closed and wait for the animation to finish.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.IsExpanded">
            <summary>
            Checks if the element is open.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.IsCollapsed">
            <summary>
            Checks if the element is closed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.WaitForAnimationStart(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableComponent.IsCurrentlyAnimating(ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions">
            <summary>
            Contains classes and selectors for the Bootstrap CollapsableComponent.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.OpenSelectors">
            <summary>
            Selectors for elements that ONLY expand the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.CloseSelectors">
            <summary>
            Selectors for elements that ONLY collapse the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.ToggleSelectors">
            <summary>
            Selectors for elements that both expand and collapse the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.CollapsableContainerSelector">
            <summary>
            The selector for the element being expanded/collapsed.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.OpenClass">
            <summary>
            The class used when the CollapsableContainer is open.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationDuration">
            <summary>
            The expected duration of the animation (Usually five seconds is
            added onto this time for wait conditions).
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationClasses">
            <summary>
            Classes used to represent when the component is being animated.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Boostrap.Collapsable.CollapsableOptions.AnimationsEnabled">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.JQuery.DatePicker.DatePickerComponent.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By,OpenQA.Selenium.By)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="selector">
            The input element linked to the calendar.
            </param>
            <param name="calendarContainerSelector">
            The element that contains the calendar.
            </param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent">
            <summary>
            Base class
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.dataSourceOptions">
            <summary>
            Configuration on how to handle the datasource.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By,ApertureLabs.Selenium.Components.Kendo.DataSourceOptions)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="selector"></param>
            <param name="dataSourceOptions"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.PageLoadingIndicator">
            <summary>
            The 'busy' or loading element displayed on the page.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.ContainerLoadingIndicator">
            <summary>
            The 'busy' or loading element displayed on the container.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.IsBusy">
            <summary>
            Checks if the page is displaying the loading indicator (page
            or container).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.WaitForLoadingOperation(System.Nullable{System.TimeSpan})">
            <summary>
            If DataSourceOptions.RemoteDataSource is true then waits for the
            busy indicator to appear (if not already visible) then dissapear.
            </summary>
            <param name="wait">Defaults to one minute</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.BaseKendoComponent.WaitForKendoEvent(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Since kendo events aren't compatible with native js events use this
            method to listen for kendo events.
            </summary>
            <param name="eventName">Name of the event to listen for.</param>
            <param name="wait"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions">
            <summary>
            Used to configure datasource kendo components.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.RemoteDataSource">
            <summary>
            Determines if data-changing operations display a loading
            indicator.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.PageLoadingSelector">
            <summary>
            Kendo page loading indicator. Selector is relative to the document.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.ContainerLoadingSelector">
            <summary>
            Kendo container loading indicator. Selector is relative to the
            document.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.DataSourceOptions.DefaultKendoOptions">
            <summary>
            Initializes a new DataSourceOptions object with RemoteDataSource
            set to false and the page/container loading selectors set to
            ".k-loading-mask");
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions">
            <summary>
            Options that configures which classes to observer when determining if
            the dropdown is animating.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.AnimationDuration">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.AnimationsEnabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions.Default">
            <summary>
            Returns a default KDropDownAnimations object with AnimationsEnabled
            and AnimationDuration set to 200ms.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent">
            <summary>
            Kendo dropdown widget.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By,ApertureLabs.Selenium.Components.Kendo.DataSourceOptions,ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <summary>
            The selector should target the original element that's been wrapped
            by kendo.
            </summary>
            <param name="driver"></param>
            <param name="selector"></param>
            <param name="dataSourceOptions"></param>
            <param name="animationData"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.Load">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.IsExpanded">
            <summary>
            Returns true if the component is expanded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.GetItems">
            <summary>
            Returns the list of items in the dropdown.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.GetSelectedItem">
            <summary>
            Returns the currently selected item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.SetSelectedItems(System.String[])">
            <summary>
            Sets the selected item.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.GetSelectElement">
            <summary>
            Returns the wrapped select element that KDropDownList
            uses internally.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.WaitForAnimationStart(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.WaitForAnimationEnd(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownComponent.IsCurrentlyAnimating(ApertureLabs.Selenium.Components.Kendo.KDropDown.KDropDownAnimationOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.KendoGrid.KendoGridComponent">
            <summary>
            Represents a kendo grid.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.KendoGrid.KendoGridComponent.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="selector"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent">
            <summary>
            PagerComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By,ApertureLabs.Selenium.Components.Kendo.DataSourceOptions,ApertureLabs.Selenium.IPageObjectFactory)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
            <param name="selector"></param>
            <param name="dataSourceOptions"></param>
            <param name="pageObjectFactory"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.IsOnFirstPage">
            <summary>
            Returns true if on the first page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.HasPreviousPage">
            <summary>
            Returns false if the previous page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.HasNextPage">
            <summary>
            Returns false if the next page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.IsOnLastPage">
            <summary>
            Returns true if the last page button is disabled.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.HasPageInfo">
            <summary>
            Used to determine if the current page range total items are displayed.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.Load">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.SetPage(System.Int32)">
            <summary>
            Sets the page the listed page with the matching number.
            </summary>
            <param name="listedPage"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.GetListedPages">
            <summary>
            Returns a list of listed pages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.LastPage">
            <summary>
            Goes to the last page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.FirstPage">
            <summary>
            Goes to the first page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.PrevPage">
            <summary>
            Goes to the previous page if available, otherwise remains on the
            current page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.NextPage">
            <summary>
            Goes to the next page if available.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.GetActivePage">
            <summary>
            Returns the active page number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.GetTotalItems">
            <summary>
            Returns the total items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.GetAvailableItemsPerPage">
            <summary>
            Retrieves the available items per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.GetItemsPerPage">
            <summary>
            Returns the selected value for items per page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.SetItemsPerPage(System.Int32)">
            <summary>
            Sets the 'Items per Page'.
            </summary>
            <param name="itemsPerPage"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Kendo.Pager.PagerComponent.Refresh">
            <summary>
            Refreshes the context the pager is attached to.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Nop.DefaultNopDatasourceOptions">
            <summary>
            The default options for kendo datasources used in NopCommerce.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Nop.DefaultNopDatasourceOptions.#ctor">
            <summary>
            Sets the <c>PageLoadingIndicator</c> to '#ajaxBusy'.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Shared.Animatable.IAnimatableComponent`1">
            <summary>
            Represents a component that can have an animation (css or js
            animation/transition).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Shared.Animatable.IAnimatableComponent`1.WaitForAnimationStart(`0)">
            <summary>
            Waits for an animation to start.
            </summary>
            <param name="animationData"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Shared.Animatable.IAnimatableComponent`1.WaitForAnimationEnd(`0)">
            <summary>
            Waits for an animation to end.
            </summary>
            <param name="animationData"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Components.Shared.Animatable.IAnimatableComponent`1.IsCurrentlyAnimating(`0)">
            <summary>
            Checks if an animation is currently running.
            </summary>
            <param name="animationData"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Components.Shared.Animatable.IAnimatableOptions">
            <summary>
            Base interface for IAnimatableComponent generic argument.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Shared.Animatable.IAnimatableOptions.AnimationDuration">
            <summary>
            The duration of the animation.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Components.Shared.Animatable.IAnimatableOptions.AnimationsEnabled">
            <summary>
            Used to check if animations are enabled for the element.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssColor">
            <summary>
            Represents a css color.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssColor.Color">
            <summary>
            The color parsed from the value.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromHsl">
            <summary>
            Assigns Color from value interperted as an hsl function.
            </summary>
            <returns></returns>
            <seealso cref="!:https://www.w3.org/TR/css-color-3/#hsl-color"/>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromRgb">
            <summary>
            Creates a color from rgba color string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.ColorFromHex">
            <summary>
            Creates a color from a hex string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssColor.Normalize(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Maps a value in a range to another range.
            </summary>
            <param name="value">The number being mapped.</param>
            <param name="actualMin">Ignored if infinity.</param>
            <param name="actualMax">Ignored if infinity.</param>
            <param name="desiredMin">Defaults to zero.</param>
            <param name="desiredMax">Defaults to one.</param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssColorFormat">
            <summary>
            The supported color formats.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Unknown">
            <summary>
            Unable to determine the color format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.CurrentColor">
            <summary>
            The value of the color property. Similar to one of the css-wide
            keywords like auto or inherit.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.BasicColorKeyword">
            <summary>
            The value is of the list of html color keywords.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Transparent">
            <summary>
            The value is transparent.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.Hexadecimal">
            <summary>
            Value is in the hex format. Can be #fff or #ffffff.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.RGB">
            <summary>
            Value is in the rgb(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.RGBA">
            <summary>
            Value is in the rgba(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.HSL">
            <summary>
            Value is in the hsl(...) format.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssColorFormat.HSLA">
            <summary>
            Value is in the hsla(...) format.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssDimension">
            <summary>
            Represents a 'number' value for css.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssDimension.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssDimension.Number">
            <summary>
            The value as a number.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssDimension.UnitOfMeasurement">
            <summary>
            The unit of measurement.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssFunction">
            <summary>
            Represents a css function.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssUnit">
            <summary>
            Represents a css unit of measurement.
            </summary>
            <seealso cref="!:https://drafts.csswg.org/css-values-4"/>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.None">
            <summary>
            There is no unit associated with the number.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Centimeters">
            <summary>
            ('cm')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Millimeters">
            <summary>
            ('mm')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.QuarterMillimeters">
            <summary>
            ('Q')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Inches">
            <summary>
            ('in')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Picas">
            <summary>
            ('pc')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Points">
            <summary>
            ('pt')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Pixels">
            <summary>
            ('px')
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Degrees">
            <summary>
            ('deg') Degrees. There are 360 degrees in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Gradians">
            <summary>
            ('grad') Gradians, also known as "gons" or "grades". There are 400
            gradians in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Radians">
            <summary>
            ('rad') Radians. There are 2π radians in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Turn">
            <summary>
            ('turn') Turns. There is 1 turn in a full circle.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Seconds">
            <summary>
            ('s') Seconds.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Milliseconds">
            <summary>
            ('ms') Milliseconds. There are 1000 milliseconds in a second.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Hertz">
            <summary>
            ('Hz') Hertz. It represents the number of occurrences per second.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.KiloHertz">
            <summary>
            ('kHz') KiloHertz. A kiloHertz is 1000 Hertz.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.Percent">
            <summary>
            ('%') Varies based on which style property it's being used with.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.EM">
            <summary>
            ('em') Relative to the font size of the element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.EX">
            <summary>
            ('ex') X-height of the element’s font.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.CAP">
            <summary>
            ('cap') Relative to the cap height (the nominal height of capital
            letters) of the element’s font.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.CH">
            <summary>
            ('ch') Relative to the average character advance of a narrow glyph
            in the element’s font, as represented by the “0” (ZERO, U+0030)
            glyph.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.IC">
            <summary>
            ('ic') Relative to the average character advance of a fullwidth
            glyph in the element’s font, as represented by the “水” (CJK water
            ideograph, U+6C34) glyph.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.REM">
            <summary>
            ('rem') Relative to the font size of the root element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.LineHeight">
            <summary>
            ('lh') Relative to the line height of the element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.RootLineHeight">
            <summary>
            ('rlh') Relative to the line height of the root element.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewWidth">
            <summary>
            ('vw') Equal to 1% of the width of the initial containing block.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewHeight">
            <summary>
            ('vh') Equal to 1% of the height of the initial containing block.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewInline">
            <summary>
            ('vi') Equal to 1% of the size of the initial containing block in
            the direction of the root element’s inline axis.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewBlock">
            <summary>
            ('vb') Equal to 1% of the size of the initial containing block in
            the direction of the root element’s block axis.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewMinimum">
            <summary>
            ('vmin') Equal to the smaller 'vw' or 'vh'.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.ViewMaximum">
            <summary>
            ('vmax') Equal to the larger 'vw' or 'vh'.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerInch">
            <summary>
            ('dpi') Dots per inch.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerCentimeter">
            <summary>
            ('dpcm') Dots per centimeter.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.Css.CssUnit.DotsPerPixelUnit">
            <summary>
            ('dppx' | 'x') Dots per 'px' unit.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Css.CssValue">
            <summary>
            Representing and converting css values (length, color, angle, etc...).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.Value">
            <summary>
            Original css string.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsAuto">
            <summary>
            True if the value is 'auto'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsUnset">
            <summary>
            True if the value is 'unset'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsInherit">
            <summary>
            True if the value is 'inherit'.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Css.CssValue.IsCssWideKeyword">
            <summary>
            True if the the value is auto or inherit or unset.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.ToString">
            <summary>
            Returns the original css string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Css.CssValue.op_Implicit(ApertureLabs.Selenium.Css.CssValue)~System.String">
            <summary>
            Implicitly converts a CssValue to a string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Data">
            <summary>
            Used for generating date-of-births, names, etc...
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="apiKey">
            The google maps api key.
            </param>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomCity(System.String,System.String)">
            <summary>
            Selects a random city in a country and state/province.
            </summary>
            <param name="country">
            Can be US or CN for United States and Canada respectively.
            </param>
            <param name="stateOrProvince">
            Should be the two digit state/province code.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomCountry">
            <summary>
            Selects a random country. Currently only returns 'Canada',
            'United Kingdom', and the 'United States'.
            </summary>
            <returns>Full legal name of the country.</returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomStateOrProvince(System.String)">
            <summary>
            Returns a random state/province of a country.
            </summary>
            <param name="country"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomDateOfBirth(System.Boolean)">
            <summary>
            The returned date is guaranteed to be at least 18 years in the past if
            the argument adult is true, if false the returned date will NOT be 18
            years in the past
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Data.RandomString(System.Int32)">
            <summary>
            Generates a string of random letters (uses both upper case and
            lower case).
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.ExpectedConditions">
            <summary>
            Commonly used conditions.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsExist(OpenQA.Selenium.By)">
            <summary>
            Waits for at least one element identified by the selector to exist.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsAreVisible(OpenQA.Selenium.By)">
            <summary>
            Waits until all elements identified by the selector are visible.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ExpectedConditions.ElementsAreClickable(OpenQA.Selenium.By)">
            <summary>
            Waits until all elements identified by the selector are clickable.
            </summary>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IDisposableExtensions">
            <summary>
            Contains extensions for classes implementing IDisposable.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IDisposableExtensions.Using``2(System.Collections.Generic.IEnumerable{``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})">
            <summary>
            Calls <code>IDisposable.Dispose</code> on each disposable after
            executing the function.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="disposables"></param>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IDisposableExtensions.Using``1(System.Collections.Generic.IEnumerable{``0},System.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Calls <code>IDisposable.Dispose</code> on each disposable after
            executing the function.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="disposables"></param>
            <param name="action"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IEnumerableExtensions">
            <summary>
            Contains extensions for ICollection.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IEnumerableExtensions.SelectRandom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Selects a random element from a list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IWebDriverExtensions">
            <summary>
            Contains extensions for IWebDriver.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Wait(OpenQA.Selenium.IWebDriver,System.TimeSpan)">
            <summary>
            Shorthand for creating a new WebDriverWait object.
            </summary>
            <param name="driver"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Wait(OpenQA.Selenium.IWebDriver,System.TimeSpan,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Shorthand for creating a new WebDriverWait object which ignores all
            exceptions passed in to it.
            </summary>
            <param name="driver"></param>
            <param name="timeSpan"></param>
            <param name="ignore"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Select(OpenQA.Selenium.IWebDriver,System.String,System.TimeSpan)">
            <summary>
            Shorthand selector for FindElements(By.CssSelector(...));
            </summary>
            <param name="driver"></param>
            <param name="cssSelector"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.Select(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Shorthand selector for FindElements(by);
            </summary>
            <param name="driver"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.GetCurrentViewportDimensions(OpenQA.Selenium.IWebDriver)">
            <summary>
            Retrieves the size of the current viewport.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.CreateActions(OpenQA.Selenium.IWebDriver)">
            <summary>
            Shorthand for <code>new Actions(driver);</code>. Only exists
            to help make the Actions class more apparent.
            </summary>
            <param name="driver"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.PageHasJQuery(OpenQA.Selenium.IWebDriver)">
            <summary>
            Detects if jQuery is defined on a page.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.ExecuteAsyncScript``1(OpenQA.Selenium.IWebDriver,System.String,System.Object[])">
            <summary>
            Executes an asynchronous script synchronously. The scripts last
            argument will be an injected callback that must be called to
            signify the script is done running. When calling the callback pass
            in whatever the script needed to return.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="driver"></param>
            <param name="script"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.ExecuteAsyncScript(OpenQA.Selenium.IWebDriver,System.String,System.Object[])">
            <summary>
            Executes an asynchronous script synchronously. The scripts last
            argument will be an injected callback that must be called to
            signify the script is done running.
            done running.
            </summary>
            <param name="driver"></param>
            <param name="script"></param>
            <param name="args"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForEvent(OpenQA.Selenium.IWebDriver,System.String)">
            <summary>
            Waits for a document level event matching the eventName to occur.
            </summary>
            <param name="driver"></param>
            <param name="eventName"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForAnyEvent(OpenQA.Selenium.IWebDriver,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the first event to be emitted by the document.
            </summary>
            <param name="driver"></param>
            <param name="eventNames"></param>
            <param name="timeout">Defaults to 30 seconds.</param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebDriverExtensions.WaitForAllEvents(OpenQA.Selenium.IWebDriver,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for all events to be emitted by the document.
            </summary>
            <param name="driver"></param>
            <param name="eventNames"></param>
            <param name="timeout">Defaults to 30 seconds.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.IWebElementExtensions">
            <summary>
            Extensions for IWebElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Children(OpenQA.Selenium.IWebElement)">
            <summary>
            Selects only direct child elements of this element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.Classes(OpenQA.Selenium.IWebElement)">
            <summary>
            Retrieves all classes listed on an element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetDriver(OpenQA.Selenium.IWebElement)">
            <summary>
            Retrieves the IWebDriver from an IWebElement.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.TryScrollToCenter(OpenQA.Selenium.IWebElement)">
            <summary>
            Will try scroll to the page until the center of the element is
            aligned with the center of the viewport.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.TextHelper(OpenQA.Selenium.IWebElement)">
            <summary>
            Returns and creates a new TextHelper for a given element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.GetParentElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Returns the parent element of the element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.SelectRandom(System.Collections.Generic.IReadOnlyList{OpenQA.Selenium.IWebElement})">
            <summary>
            Returns a random element and returns it.
            </summary>
            <param name="elements"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.SelectRandom(System.Collections.Generic.IReadOnlyList{OpenQA.Selenium.IWebElement},System.Int32@)">
            <summary>
            Returns a random element and returns it.
            </summary>
            <param name="elements"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.IsStale(OpenQA.Selenium.IWebElement)">
            <summary>
            Checks if an element is stale.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForEvent(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Waits for an event to occur on the element.
            </summary>
            <param name="element"></param>
            <param name="eventName"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForAnyEvent(OpenQA.Selenium.IWebElement,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for the first event on the element.
            </summary>
            <param name="element"></param>
            <param name="eventNames"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.IWebElementExtensions.WaitForAllEvents(OpenQA.Selenium.IWebElement,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Waits for all events to be emitted on the element.
            </summary>
            <param name="element"></param>
            <param name="eventNames"></param>
            <param name="timeout"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions">
            <summary>
            Extensions for WebDriverWait.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Select(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
            <summary>
            Shorthand selector for wait.Until(ExpectedConditions.ElementsExist(
            By.CssSelector('cssSelector')));
            </summary>
            <param name="wait"></param>
            <param name="cssSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Select(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
            <summary>
            Shorthand selector for wait.Until(ExpectedConditions.ElementsExist(
            by));
            </summary>
            <param name="wait"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Exists(OpenQA.Selenium.Support.UI.WebDriverWait,System.String)">
            <summary>
            Returns true if the element exists.
            </summary>
            <param name="wait"></param>
            <param name="cssSelector"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.Exists(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.By)">
            <summary>
            Returns true if the element exists.
            </summary>
            <param name="wait"></param>
            <param name="by"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.UntilStale(OpenQA.Selenium.Support.UI.WebDriverWait,OpenQA.Selenium.IWebElement)">
            <summary>
            Waits until the element is stale.
            </summary>
            <param name="wait"></param>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.Extensions.WebDriverWaitExtensions.TrySequentialWait(OpenQA.Selenium.Support.UI.IWait{OpenQA.Selenium.IWebDriver},System.Exception@,System.Func{OpenQA.Selenium.IWebDriver,System.Boolean}[])">
            <summary>
            Identical to wait, but returns the IWait object instead of the
            wait result.
            </summary>
            <param name="wait"></param>
            <param name="exception"></param>
            <param name="conditions"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.IPageObjectFactory">
            <summary>
            PageObjectFactory.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.IPageObjectFactory.PrepareComponent``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page component and returns
            it. This is useful for initializing a component in one line.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageComponent"></param>
            <returns></returns>
            <example>
            Before:
            // Uninitialized
            var component = new YourComponent(arg1, arg2);
            // Initialized
            component.Load();
            
            After:
            // Instantiate and initialize in one (ableit long) line.
            var initializedcomponent = yourPageObjectFactory
                .PrepareComponent(new YourComponent(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.IPageObjectFactory.PreparePage``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page object and returns it.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageObject"></param>
            <returns></returns>
            <example>
            Before:
            // Instantiated but unintialized.
            var page = new YourPage(arg1, arg2);
            // Initialized.
            page.Load();
            
            After:
            // Instantiate and initialize in one (albeit long) line.
            var page = pageObjectFactory.PreparePage(new YourPage(arg1, arg2));
            </example>
        </member>
        <member name="T:ApertureLabs.Selenium.Models.NopModels.INopAddress">
            <summary>
            Respsents an address according to NopCommerce.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.FirstName">
            <summary>
            FirstName.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.LastName">
            <summary>
            LastName.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Company">
            <summary>
            Company.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Country">
            <summary>
            Country.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.StateProvince">
            <summary>
            StateProvice.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.City">
            <summary>
            City.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Address1">
            <summary>
            Address1.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.Address2">
            <summary>
            Address2.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.PostalCode">
            <summary>
            PostalCode.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.PhoneNumber">
            <summary>
            PhoneNumber
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.INopAddress.FaxNumber">
            <summary>
            FaxNumber.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.Models.NopModels.NopAddress">
            <summary>
            Default implementation of INopAddress.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.#ctor(System.String)">
            <summary>
            Parses a string into a NopAddress.
            </summary>
            <param name="address"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.FirstName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.LastName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Email">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Company">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Country">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.StateProvince">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.City">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Address1">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.Address2">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.PostalCode">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.PhoneNumber">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.Models.NopModels.NopAddress.FaxNumber">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.GetHashCode">
            <inheritdoc/>
            <seealso cref="!:https://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode/263416#263416"/>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.Equals(ApertureLabs.Selenium.Models.NopModels.INopAddress)">
            <summary>
            Checks if the addresses are the same.
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.ToString">
            <summary>
            Returns an address string that is usually formatted identical to
            ones displayed by Nop.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.Models.NopModels.NopAddress.IsValidAddress">
            <summary>
            Checks if this is a valid address.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjectFactory">
            <summary>
            PageObjectFactory.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjectFactory.PreparePage``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page object and returns it.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageObject"></param>
            <returns></returns>
            <example>
            Before:
            // Instantiated but unintialized.
            var page = new YourPage(arg1, arg2);
            // Initialized.
            page.Load();
            
            After:
            // Instantiate and initialize in one (albeit long) line.
            var page = pageObjectFactory.PreparePage(new YourPage(arg1, arg2));
            </example>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjectFactory.PrepareComponent``1(``0)">
            <summary>
            Essentially just calls 'Load()' on the page component and returns
            it. This is useful for initializing a component in one line.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageComponent"></param>
            <returns></returns>
            <example>
            Before:
            // Uninitialized
            var component = new YourComponent(arg1, arg2);
            // Initialized
            component.Load();
            
            After:
            // Instantiate and initialize in one (ableit long) line.
            var initializedcomponent = yourPageObjectFactory
                .PrepareComponent(new YourComponent(arg1, arg2));
            </example>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IPageComponent">
            <summary>
            Represents a partial view or view component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageComponent.By">
            <summary>
            The selector for the parent node for this component.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageComponent.IsStale">
            <summary>
            Determines if the page is in a usable state.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IPageObject">
            <summary>
            Represents a webpage.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IPageObject.Uri">
            <summary>
            The url of the webpage.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.IPageObject.IsStale">
            <summary>
            Use to determine if a PageObject is still 'valid'.
            </summary>
            <example>
            If there are two page object instances; one for a login page and
            one for the home page, if the driver is on the home page the login
            page should when its <code>loginPage.IsStateValid();</code> should
            return false while the <code>homePage.IsStateValid();</code> will
            return true.
            </example>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.IViewModel`1">
            <summary>
            Used for PageObjects which use a model.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.IViewModel`1.ViewModel">
            <summary>
            Retrieves the viewmodel.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.PageComponent">
            <summary>
            Default implementation of IPageComponent.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.#ctor(OpenQA.Selenium.IWebDriver,OpenQA.Selenium.By)">
            <summary>
            Ctor
            </summary>
            <param name="driver"></param>
            <param name="by"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.WrappedDriver">
            <summary>
            The IWebDriver of a component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.WrappedElement">
            <summary>
            The element representing the component.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageComponent.By">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.IsStale">
            <summary>
            Used to check if the component is still valid for use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageComponent.Load">
            <summary>
            If overloaded don't forget to call base.Load().
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.PageObject">
            <summary>
            Default implementation of IPageObject
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
                If passing in an EventFiringWebDriver event listeners will be
                added.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.WrappedDriver">
            <summary>
                Gets the OpenQA.Selenium.IWebDriver used to find this element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.PageObjects.PageObject.Uri">
            <summary>
                The url this page uses.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.IsStale">
            <summary>
            By default will check the url to see if it starts with Uri.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Load">
            <summary>
            If overridding this don't forget to call base.Load().
            
            NOTE: Will navigate to the pages url if the current drivers url
            is empty.
            </summary>
            <remarks>
            If the driver is an EventFiringWebDriver an event listener will
            be added to the 'Navigated' event and uses the url to determine
            if the page is 'stale'.
            </remarks>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException">
            Occurs when trying to use after this instance has been
            disposed.
            </exception>
            <exception cref="T:OpenQA.Selenium.Support.UI.LoadableComponentException">
            Thrown when calling <code>Load()</code> and not on the correct
            url.
            </exception>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.PageObject.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.PageObjects.WindowSize">
            <summary>
            Contains sizes for windows.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.PageObjects.WindowSize.DefaultDesktop">
            <summary>
            Default size for desktop (1001, 999).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.PageObjects.WindowSize.DefaultTablet">
            <summary>
             Default size for tablet (768, 999).
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.PageObjects.WindowSize.DefaultMobile">
            <summary>
            Default size for mobile (120, 999).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.PageObjects.WindowSize.RandomSize(System.Int32,System.Int32)">
            <summary>
            Generates a random size in the given range. The height is always
            999.
            </summary>
            <param name="minWidth"></param>
            <param name="maxWidth"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.ScopedBy">
            <summary>
            Similar to the normal <code>OpenQA.Selenium.By</code> class but will
            always search from the passed in searchContext.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.ScopedBy.#ctor(OpenQA.Selenium.ISearchContext,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Ctor. To create an instance of this class use the
            <code>ApertureLabs.Selenium.ByExtensions</code> namespace.
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
            <see cref="!:ApertureLabs.Selenium.Extensions.ByExtensions.FromScope"/>
        </member>
        <member name="M:ApertureLabs.Selenium.ScopedBy.#ctor(OpenQA.Selenium.By,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Ctor. Instead fo passing in an instance of ISearchContext, pass in a
            selector that will fetch the ISearchContext and then the subSelector
            will search for the child elements.
            </summary>
            <param name="contextSelector"></param>
            <param name="subSelectors"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.ScopedBy.FindElement(OpenQA.Selenium.ISearchContext)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.ScopedBy.FindElements(OpenQA.Selenium.ISearchContext)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.ScopedBy.FromScope(OpenQA.Selenium.ISearchContext,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Creates a 'scoped' selector which will always use the passed in
            search context instead of what the current context is for the
            driver.
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ScopedBy.FromScope(OpenQA.Selenium.By,System.Collections.Generic.ICollection{OpenQA.Selenium.By})">
            <summary>
            Creates a 'scoped' selector which will first find all elements
            that match the <code>searchContext</code> selector and then keep
            applying the <code>subSelectors</code> to those elements.
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.ScopedBy.FromScope(OpenQA.Selenium.By,OpenQA.Selenium.By[])">
            <summary>
            Creates a 'scoped' selector which will first find all elements
            that match the <code>searchContext</code> selector and then keep
            applying the <code>subSelectors</code> to those elements.
            </summary>
            <param name="searchContext"></param>
            <param name="subSelectors"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.TabHelper">
            <summary>
            Used for switching between tabs.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor.
            </summary>
            <param name="driver"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.TabHelper.WrappedDriver">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.GetIndexOfCurrentTab">
            <summary>
            Returns the index of the current tab in relation of the other
            tabs on the window.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.GetNumberOfTabs">
            <summary>
            Returns the number of tabs on the current window.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TabHelper.CreateNewTab(System.Boolean)">
            <summary>
            Opens a new tab in the window.
            </summary>
            <param name="switchToTab"></param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.TextHelper">
            <summary>
            Used for parsing information from the text of an element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.InnerText">
            <summary>
            Retrieves and trims the inner text of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.InnerHtml">
            <summary>
            Returns the inner html of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.OuterHtml">
            <summary>
            Returns the outer html of the element.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.WrappedDriver">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.TextHelper.WrappedElement">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractInteger(System.Boolean)">
            <summary>
            Extracts a number from the Text of the element. If the text
            of the element is "Some text...-34.32...more text" it will
            return -34. It completely ignores the decimal unless the 
            optional parameter roundUp is true.
            </summary>
            <param name="roundUp"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractIntegers(System.Boolean)">
            <summary>
            Returns all numbers in the elements inner text as integers.
            </summary>
            <param name="roundUp"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractPrice">
            <summary>
            Tries to extract number from the text of the element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDouble">
            <summary>
            Extracts a number from the Text of the element. If the text
            of the element is "Some text...-34.32...more text" it will
            return -34.32.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDoubles">
            <summary>
            Returns all numbers in the inner text as doubles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractDateTime(System.String)">
            <summary>
            Extracts a Date from the text. Currently this only supports
            the text format "Some text...MM/DD/YYYY...other text". It will
            optionally also return the time up to the second if provided after
            the date.
            </summary>
            <param name="format">
            Optional format the date is in (IE: "MMMM").
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.TextHelper.ExtractLastFourCCDigits">
            <summary>
            Fetches the last four digits from a partial credit card number 
            in a string. Ex: (blah x4444 blah blah) text will return 4444.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.MajorWebDriver">
            <summary>
            Enum of common web drivers.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Chrome">
            <summary>
            Chrome.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Edge">
            <summary>
            Edge.
            </summary>
        </member>
        <member name="F:ApertureLabs.Selenium.MajorWebDriver.Firefox">
            <summary>
            Firefox.
            </summary>
        </member>
        <member name="T:ApertureLabs.Selenium.WebDriverFactory">
            <summary>
            Responsible for creation and disposing of the various webdrivers.
            Searches the current directory for the location of the drivers.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Finalize">
            <summary>
            Dtor
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.CreateDriver(ApertureLabs.Selenium.MajorWebDriver,System.Drawing.Size,System.Boolean)">
            <summary>
            Creates a new WebDriver instance for one of the major web
            browsers.
            </summary>
            <param name="majorWebDriver"></param>
            <param name="windowSize"></param>
            <param name="track">
            If false, will not dispose the driver when the factory is
            disposed.
            </param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebDriverFactory.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement">
            <summary>
            CanvasElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Submit">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Canvas.CanvasElement.Draw(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a line from a to b.
            </summary>
            <param name="a">
            Origin is the top left corner of the element.
            </param>
            <param name="b">
            Origin is the top left corner of the element.
            </param>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement">
            <summary>
            Wrapper around the IWebElement for IFrames.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.#ctor(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebDriver)">
            <summary>
            Ctor
            </summary>
            <param name="element"></param>
            <param name="driver"></param>
            <exception cref="T:OpenQA.Selenium.Support.UI.UnexpectedTagNameException">
            Thrown if the element isn't an iframe.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.InFrameAction(System.Action)">
            <summary>
            Executes an action in the context of the IFrame.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.InFrameFunction``1(System.Func{``0})">
            <summary>
            Executes a function in the context of the IFrame.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="function"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.EnterIframe">
            <summary>
            Enters the iframe only if not already entered.
            Equal to IWebDriver.SwitchTo().Frame(iframeElement).
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.ExitIframe">
            <summary>
            Exits the iframe only if previously entered.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Submit">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.IFrame.IFrameElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.CheckboxElement">
            <summary>
            Wrapper around the InputElement providing extra functionality for
            checkboxes.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.CheckboxElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">
            Thrown when the element doens't have the type of checkbox.
            </exception>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.FileElement">
            <summary>
            Input element with the type set to file.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.String)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="filepath"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.IO.FileInfo)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.FileElement.UploadFile(System.Uri)">
            <summary>
            Convience method for uploading a file.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement">
            <summary>
            Represents an INPUT element with a type of text that has the list.
            TODO: Possibly rename this class to 'DataListElement'.
            attribute set.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">
            Throws if the element doens't have a list attribute on it.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.Options">
            <summary>
            Retrieves all possible options in the datalist element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByIndex(System.Int32)">
            <summary>
            Sets the value by the index of the option. If the option has no
            value then its text is used.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByText(System.String,System.Boolean)">
            <summary>
            Finds the option matching the text and sets the input value to it.
            </summary>
            <param name="text"></param>
            <param name="partialMatch"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputDataListElement.SelectOptionByElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Sets the value based on the value of the option element.
            </summary>
            <param name="optionElement">Must be an option element.</param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.InputElement">
            <summary>
            Wrapper around an IWebElement to provide extra functionality for input
            elements.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Checks that the element has the correct tagname.
            </summary>
            <param name="element"></param>
            <exception cref="T:System.InvalidCastException">
            Thrown when the elements tagname isn't input.
            </exception>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Type">
            <summary>
            Returns the type of the input element.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.Submit">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetValue``1">
            <summary>
            Retrieves the value and tries to cast it to the type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.GetValue``1(System.Func{System.String,``0})">
            <summary>
            Returns and converts the value by passing in the conversion
            function.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.InputElement.SetValue``1(``0)">
            <summary>
            Sets the 'value' of the input element.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase">
            <summary>
            Base class for CheckboxElement and RadioElement. Internal use only.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.IsChecked">
            <summary>
            Returns true if the element is checked and false if not.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.Check(System.Boolean)">
            <summary>
            Will assert that the element is checked or unchecked depending on
            the argument. NOTE: This will 'click' the element to toggle the
            state so if it's not clickable this will throw an exception.
            </summary>
            <param name="checked"></param>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException"></exception>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException"></exception>
            <exception cref="T:OpenQA.Selenium.ElementNotInteractableException"></exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException"></exception>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.SetValue``1(``0)">
            <summary>
            Sets the value of the property checked.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioCheckboxBase.GetValue``1">
            <summary>
            Returns the value or the property 'checked'.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioElement">
            <summary>
            RadioElement
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElement.GetGroup">
            <summary>
            Returns the radio group name.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet">
            <summary>
            RadioElementSet
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.#ctor(System.Collections.Generic.IEnumerable{OpenQA.Selenium.IWebElement})">
            <summary>
            Checks that each element is a radio button and shares the same name.
            </summary>
            <param name="radioButtons"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.Options">
            <summary>
            Options.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectedOption">
            <summary>
            Gets the selected item or returns null if nothing is selected.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectByValue(System.String)">
            <summary>
            Selects an option by its value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Inputs.RadioElementSet.SelectByIndex(System.Int32)">
            <summary>
            Selects an option by index, the order in which they appear in the
            html.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Meta.MetaElement">
            <summary>
            MetaElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Content">
            <summary>
            Retrieves the value of the 'content' attribute.
            </summary>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Name">
            <summary>
            Returns the value of the 'name' attribute.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Meta.MetaElement.Submit">
            <inheritdoc/>
        </member>
        <member name="T:ApertureLabs.Selenium.WebElements.Option.OptionElement">
            <summary>
            OptionElement.
            </summary>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.#ctor(OpenQA.Selenium.IWebElement)">
            <summary>
            Ctor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.TagName">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Text">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Selected">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Location">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Size">
            <inheritdoc/>
        </member>
        <member name="P:ApertureLabs.Selenium.WebElements.Option.OptionElement.Displayed">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Clear">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Click">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.FindElement(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.FindElements(OpenQA.Selenium.By)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetCssValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.SendKeys(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.Submit">
            <inheritdoc/>
        </member>
        <member name="M:ApertureLabs.Selenium.WebElements.Option.OptionElement.GetValue">
            <summary>
            Returns the value via attribute or if not present returns the text.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
