//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApertureLabs.Selenium.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ApertureLabs.Selenium.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function jsonFormatter (key, value) {
        ///
        ///    // Ignore null/undefined values.
        ///    if (value === null || value === undefined) {
        ///        return undefined;
        ///    }
        ///
        ///    var typeOfValue = typeof value;
        ///
        ///    // Only include strings, numbers, and booleans.
        ///    if (typeOfValue === &quot;string&quot;
        ///        || typeOfValue === &quot;number&quot;
        ///        || typeOfValue === &quot;boolean&quot;) {
        ///        return value;
        ///    } else {
        ///        return undefined;
        ///    }
        ///}.
        /// </summary>
        internal static string jsonFormatterCallback {
            get {
                return ResourceManager.GetString("jsonFormatterCallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var tinyMCEUtilities = (function() {
        ///	var obj = {};
        ///
        ///	/**
        ///	 * Goes thru each editor in tinyMCE.editors and call matches each editors
        ///	 * getElement() against the passed in element.
        ///	 * @param {Element} element - The element used to match against
        ///	 * Editor.getElement().
        ///	 * @returns {Editor} The tinyMCE.Editor.
        ///	 */
        ///	obj.getEditor = function (element) {
        ///		if (element === null || element === undefined) {
        ///			throw new Error(&apos;Argument element cannot be null.&apos;);
        ///		}
        ///
        ///		var editor = null;
        ///
        ///		for [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tinyMCEUtilities {
            get {
                return ResourceManager.GetString("tinyMCEUtilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var eventName = arguments[0];
        ///var callback = arguments[arguments.length - 1];
        ///
        ///if (eventName == null || typeof eventName !== &quot;string&quot;) {
        ///    throw new Error(&quot;The eventName was null.&quot;);
        ///} else if (callback == null) {
        ///    throw new Error(&quot;The callback was null.&quot;);
        ///}
        ///
        ///function handler(evt) {
        ///    document.removeEventListener(eventName, handler);
        ///
        ///    var json = JSON.stringify(
        ///        evt,
        ///        function (key, value) {
        ///
        ///            // Ignore null/undefined values.
        ///            if (value === nu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string waitForEvent {
            get {
                return ResourceManager.GetString("waitForEvent", resourceCulture);
            }
        }
    }
}
